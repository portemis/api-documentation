{
  "openapi": "3.0.1",
  "info": {
    "title": "Portemis API",
    "description": "A description goes **here**",
    "termsOfService": "https://www.portemis.com",
    "contact": {
      "name": "Portemis Developer Support",
      "url": "https://www.portemis.com",
      "email": "developers@portemis.com"
    },
    "license": {
      "name": "Licence desc",
      "url": "https://www.portemis.com"
    },
    "version": "1.0"
  },
  "paths": {
    "/api/v{version}/account/{id}": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get a single account",
        "operationId": "GetSingleAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Account ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDto"
                },
                "examples": {}
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Account"
        ],
        "summary": "Update an account.",
        "operationId": "UpdateAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "Delete an account.",
        "operationId": "DeleteAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/account": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Add an account.",
        "operationId": "AddAccount",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/accountgroup/{id}": {
      "get": {
        "tags": [
          "AccountGroup"
        ],
        "summary": "Get a single account group.",
        "operationId": "GetSingleAccountGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Account Group ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroupDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AccountGroup"
        ],
        "summary": "Update an account group.",
        "operationId": "UpdateAccountGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroupDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroupDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroupDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroupDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AccountGroup"
        ],
        "summary": "Delete an account group.",
        "operationId": "DeleteAccountGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/accountgroup/{id}/accounts": {
      "get": {
        "tags": [
          "AccountGroup"
        ],
        "summary": "Get all accounts for an account group.",
        "operationId": "GetAllAccountsInAccountGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/accountgroup": {
      "post": {
        "tags": [
          "AccountGroup"
        ],
        "summary": "Add an account group.",
        "operationId": "AddAccountGroup",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroupDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroupDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroupDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroupDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroupDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/activity": {
      "get": {
        "tags": [
          "Activity"
        ],
        "summary": "Get all activities",
        "operationId": "GetAllActivities",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityDtoQueryResultDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Activity"
        ],
        "summary": "Delete mulitple activities",
        "operationId": "DeleteMultipleActivities",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Activity IDs",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/activity/{id}": {
      "get": {
        "tags": [
          "Activity"
        ],
        "summary": "Get a single activity",
        "operationId": "GetSingleActivity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Activity"
        ],
        "summary": "Delete an activity",
        "operationId": "DeleteActivity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/activity/{id}/pin": {
      "patch": {
        "tags": [
          "Activity"
        ],
        "summary": "Pin an activity",
        "operationId": "Pin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/activity/{id}/unpin": {
      "patch": {
        "tags": [
          "Activity"
        ],
        "summary": "Un-pin an activity",
        "operationId": "Unpin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/activity/{id}/file": {
      "get": {
        "tags": [
          "Activity"
        ],
        "summary": "Get all files for an activity",
        "operationId": "GetActivityFiles",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActivityFileDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/activity/{id}/textanalysis": {
      "get": {
        "tags": [
          "Activity"
        ],
        "summary": "Get text analysis for activity",
        "operationId": "GetTextAnalysis",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActivityFileDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/activity/{id}/history": {
      "get": {
        "tags": [
          "Activity"
        ],
        "summary": "Get a single activity's history",
        "operationId": "GetSingleActivityHistory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeProcessHistory",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityHistoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/activity/{id}/comment": {
      "post": {
        "tags": [
          "Activity"
        ],
        "summary": "Write to a single activity's history",
        "operationId": "WriteActivityComment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "ActivityCommentCreateDto",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityCommentCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityCommentCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityCommentCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityCommentCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityHistoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/activity/{id}/status/{status}": {
      "post": {
        "tags": [
          "Activity"
        ],
        "summary": "Set the status of an activity",
        "operationId": "SetStatusActivity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "in": "path",
            "description": "Status",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ActivityStatusType"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/appointment/{id}": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "summary": "Get a single appointment",
        "operationId": "GetSingleAppointment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Appointment Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityAppointmentDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Appointment"
        ],
        "summary": "Update an appointment",
        "operationId": "UpdateAppointment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the record",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Appointment to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityAppointmentDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityAppointmentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityAppointmentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityAppointmentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityAppointmentDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/appointment": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "summary": "Get all appointments",
        "operationId": "GetAllAppointments",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityAppointmentDtoQueryResultDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Add an appointment",
        "operationId": "AddAppointment",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Appointment to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityAppointmentCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityAppointmentCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityAppointmentCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityAppointmentCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityAppointmentDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/audit/{recordType}/{id}": {
      "get": {
        "tags": [
          "Audit"
        ],
        "summary": "Get all activities",
        "operationId": "GetRecordAudit",
        "parameters": [
          {
            "name": "recordType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditEventDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/board/{name}": {
      "get": {
        "tags": [
          "Board"
        ],
        "summary": "Get a single board",
        "operationId": "GetSingleBoardType",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Board name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardTypeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/board": {
      "get": {
        "tags": [
          "Board"
        ],
        "summary": "Get all Boards",
        "operationId": "GetAllBoardTypes",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoardTypeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/calendar/{year}/{month}": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "summary": "Get a calendar page for the current user.",
        "operationId": "GetCalendarEvents",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "month",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActivityDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/calendar/{year}": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "summary": "Get the calendar definition for the current user.",
        "operationId": "GetCalendarDefinition",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/category": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Get a list of all categories",
        "operationId": "GetAllCategories",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/client/{id}": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Get a single client",
        "operationId": "GetSingleClient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Clients ID (partyrole)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Client"
        ],
        "summary": "Update a single client",
        "operationId": "UpdateClient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Clients ID (partyrole)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ClientDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClientDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/client/multiple": {
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Get many clients",
        "operationId": "GetMultipleClients",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Client IDs",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/client": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Get all clients",
        "operationId": "GetAllClients",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/client/favourite": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Get favourite clients",
        "operationId": "GetFavouriteClients",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/client/recent": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Get recent clients",
        "operationId": "GetRecentClients",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/complaint/{id}": {
      "get": {
        "tags": [
          "Complaint"
        ],
        "summary": "Get a single complaint record",
        "operationId": "GetSingleComplaint",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Complaint ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComplaintDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Complaint"
        ],
        "operationId": "UpdateComplaint",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ComplaintDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplaintDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplaintDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ComplaintDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComplaintDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Complaint"
        ],
        "operationId": "DeleteComplaint",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/complaint": {
      "get": {
        "tags": [
          "Complaint"
        ],
        "summary": "Get all complaint records",
        "operationId": "GetAllComplaints",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComplaintDtoQueryResultDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Complaint"
        ],
        "operationId": "AddComplaint",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ComplaintCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplaintCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplaintCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ComplaintCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComplaintDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/contactpoint/lookup": {
      "get": {
        "tags": [
          "ContactPoint"
        ],
        "summary": "Search contact points",
        "operationId": "Lookup",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ContactPointType"
            }
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LookupResultDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/contactpoint": {
      "get": {
        "tags": [
          "ContactPoint"
        ],
        "summary": "Get all contact points",
        "operationId": "GetAllContactPoints",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactPointDtoQueryResultDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContactPoint"
        ],
        "summary": "Delete contact points",
        "operationId": "DeleteMultipleContactPoints",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Contact Point Ids",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/contactpoint/{id}": {
      "get": {
        "tags": [
          "ContactPoint"
        ],
        "summary": "Get a single contact point",
        "operationId": "GetSingleContactPoint",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Contact point Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactPointDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContactPoint"
        ],
        "summary": "Delete a contact point",
        "operationId": "DeleteContactPoint",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Contact point Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/contactpoint/{id}/status/{status}": {
      "post": {
        "tags": [
          "ContactPoint"
        ],
        "summary": "Set the state of a contact point",
        "operationId": "SetStatusContactPoint",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Contact Point Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "in": "path",
            "description": "Status",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/StatusType"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactPointDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/country": {
      "get": {
        "tags": [
          "Country"
        ],
        "summary": "Get all countries",
        "operationId": "GetAllCountries",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CountryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/country/{code}": {
      "get": {
        "tags": [
          "Country"
        ],
        "summary": "Get a single country",
        "operationId": "GetSingleCountry",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Country Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/currency": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Get all currencies",
        "operationId": "GetAllCurrencies",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/currency/{code}": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Get a single currency",
        "operationId": "GetSingleCurrency",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Currency Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/dashboard": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get all Dashboards enabled for the users tenant",
        "operationId": "GetDashboards",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DashboardDefintionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/dashboard/{key}/{id}": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get dashoard data",
        "operationId": "GetDashboardData",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "The dashboard key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Entity ID if applicable",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "forceRefresh",
            "in": "query",
            "description": "Force live refresh of data",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardDataDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/electronicaddress/{id}": {
      "get": {
        "tags": [
          "ElectronicAddress"
        ],
        "summary": "Get a single electronic address",
        "operationId": "GetSingleElectronicAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Electronic address Id (if an ID will try find by id, else will try find by email address)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElectronicAddressDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ElectronicAddress"
        ],
        "summary": "Update an electronic address.",
        "operationId": "UpdateElectronicAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ElectronicAddressDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ElectronicAddressDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ElectronicAddressDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ElectronicAddressDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElectronicAddressDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/electronicaddress": {
      "get": {
        "tags": [
          "ElectronicAddress"
        ],
        "summary": "Get all electronic addresses",
        "operationId": "GetAllElectronicAddresses",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElectronicAddressDtoQueryResultDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ElectronicAddress"
        ],
        "summary": "Add an electronic address",
        "operationId": "AddElectronicAddress",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Electronic Address to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ElectronicAddressCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ElectronicAddressCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ElectronicAddressCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ElectronicAddressCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElectronicAddressDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/email/{id}": {
      "get": {
        "tags": [
          "Email"
        ],
        "summary": "Get a single email",
        "operationId": "GetSingleEmail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Email Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityEmailDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Email"
        ],
        "summary": "Update an email",
        "operationId": "UpdateEmail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the record",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Email to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityEmailDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityEmailDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityEmailDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityEmailDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityEmailDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/email": {
      "get": {
        "tags": [
          "Email"
        ],
        "summary": "Get all emails",
        "operationId": "GetAllEmails",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityEmailDtoQueryResultDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Add an email",
        "operationId": "AddEmail",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Email to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityEmailCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityEmailCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityEmailCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityEmailCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityEmailDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/email/incoming": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Endpoint to revieve an email from incoming email provider",
        "operationId": "ReceiveExternalEmail",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/feestructure/{id}": {
      "get": {
        "tags": [
          "FeeStructure"
        ],
        "summary": "Get a single feestructure",
        "operationId": "GetSingleFeeStructure",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "FeeStructure ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeeStructureDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "FeeStructure"
        ],
        "operationId": "UpdateFeeStructure",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FeeStructureDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeeStructureDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FeeStructureDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FeeStructureDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeeStructureDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FeeStructure"
        ],
        "operationId": "DeleteFeeStructure",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/feestructure": {
      "get": {
        "tags": [
          "FeeStructure"
        ],
        "summary": "Get all feestructures",
        "operationId": "GetAllFeeStructures",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeeStructureDtoQueryResultDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "FeeStructure"
        ],
        "operationId": "AddFeeStructure",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FeeStructureDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeeStructureDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FeeStructureDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FeeStructureDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeeStructureDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/file": {
      "post": {
        "tags": [
          "File"
        ],
        "summary": "Uploads a form-file",
        "operationId": "UploadFile",
        "parameters": [
          {
            "name": "testing",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "testFileType",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileIndexDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/file/{fileIndex}": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "Get/download a form file",
        "operationId": "GetFile",
        "parameters": [
          {
            "name": "fileIndex",
            "in": "path",
            "description": "The file index",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/formdata/{formName}/{id}": {
      "get": {
        "tags": [
          "FormData"
        ],
        "summary": "Get form data",
        "operationId": "GetFormData",
        "parameters": [
          {
            "name": "formName",
            "in": "path",
            "description": "The form name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Entity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status - If not supplied, assumes draft",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormDataInstanceDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "FormData"
        ],
        "summary": "Post form data",
        "operationId": "SubmitFormData",
        "parameters": [
          {
            "name": "formName",
            "in": "path",
            "description": "The form name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Entity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormDataInstanceDto"
                }
              }
            }
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "FormData"
        ],
        "summary": "Post form data",
        "operationId": "PublishFormData",
        "parameters": [
          {
            "name": "formName",
            "in": "path",
            "description": "The form name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Entity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/formdata/{formName}/{id}/calculate": {
      "post": {
        "tags": [
          "FormData"
        ],
        "summary": "Performs re-calculations only and returns data. Does not persist changes",
        "operationId": "RecalcFormData",
        "parameters": [
          {
            "name": "formName",
            "in": "path",
            "description": "The form name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/formdata/{formName}/{id}/history": {
      "get": {
        "tags": [
          "FormData"
        ],
        "summary": "Get submission history for a form",
        "operationId": "GetHistory",
        "parameters": [
          {
            "name": "formName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FormDataHistoryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/formdata/clientfile/{partyId}/role/{partyRoleId}": {
      "get": {
        "tags": [
          "FormData"
        ],
        "summary": "Get the draft client file (which is an amalgamation of all sub-forms)",
        "operationId": "GetClientFile",
        "parameters": [
          {
            "name": "partyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "partyRoleId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientMaster"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/formdefinition/{code}": {
      "get": {
        "tags": [
          "FormDefinition"
        ],
        "summary": "Get a single Form Definition and its schema",
        "operationId": "GetLatestFormDefinition",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Form Definition name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeSystemProperties",
            "in": "query",
            "description": "Include system properties in schema",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormDefinitionWithSchemaDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/formdefinition/{code}/version/{formVersion}": {
      "get": {
        "tags": [
          "FormDefinition"
        ],
        "summary": "Get a single Form Definition and its schema",
        "operationId": "GetFormDefinitionByVersion",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Form Definition name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formVersion",
            "in": "path",
            "description": "Form Definition version",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeSystemProperties",
            "in": "query",
            "description": "Include system properties in schema",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormDefinitionWithSchemaDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/formdefinition": {
      "get": {
        "tags": [
          "FormDefinition"
        ],
        "summary": "Get all Form Definitions - does not resolve schema",
        "operationId": "GetAllFormDefinitions",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FormDefinitionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/formdefinition/validate": {
      "get": {
        "tags": [
          "FormDefinition"
        ],
        "summary": "Get all Form Definitions - does not resolve schema",
        "operationId": "ValidateFormSchemas",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/graphql": {
      "post": {
        "tags": [
          "GraphQL"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GraphQLQuery"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphQLQuery"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphQLQuery"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GraphQLQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/intermediary/{id}": {
      "get": {
        "tags": [
          "Intermediary"
        ],
        "summary": "Get a single intermediary",
        "operationId": "GetSingleIntermediary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Intermediaries ID (partyrole)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntermediaryDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Intermediary"
        ],
        "summary": "Update a single intermediary",
        "operationId": "UpdateIntermediary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Intermediaries ID (partyrole)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IntermediaryDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntermediaryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IntermediaryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IntermediaryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntermediaryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/intermediary": {
      "get": {
        "tags": [
          "Intermediary"
        ],
        "summary": "Get all intermediaries",
        "operationId": "GetAllIntermediaries",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntermediaryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/intermediary/favourite": {
      "get": {
        "tags": [
          "Intermediary"
        ],
        "summary": "Get favourite intermediaries",
        "operationId": "GetFavouriteIntermediaries",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntermediaryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/intermediary/recent": {
      "get": {
        "tags": [
          "Intermediary"
        ],
        "summary": "Get recent intermediaries",
        "operationId": "GetRecentIntermediaries",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntermediaryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/lead/{id}": {
      "get": {
        "tags": [
          "Lead"
        ],
        "summary": "Get a single lead",
        "operationId": "GetSingleLead",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Lead ID (partyrole)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeadDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Lead"
        ],
        "summary": "Update a single lead",
        "operationId": "UpdateLead",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Lead ID (partyrole)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LeadDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeadDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LeadDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LeadDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeadDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/lead/multiple": {
      "post": {
        "tags": [
          "Lead"
        ],
        "summary": "Get many leads",
        "operationId": "GetMultipleLeads",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Lead IDs",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LeadDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/lead": {
      "get": {
        "tags": [
          "Lead"
        ],
        "summary": "Get all leads",
        "operationId": "GetAllLeads",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LeadDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/lead/favourite": {
      "get": {
        "tags": [
          "Lead"
        ],
        "summary": "Get favourite leads",
        "operationId": "GetFavouriteLeads",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LeadDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/lead/recent": {
      "get": {
        "tags": [
          "Lead"
        ],
        "summary": "Get recent leads",
        "operationId": "GetRecentLeads",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LeadDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/locale": {
      "get": {
        "tags": [
          "Locale"
        ],
        "summary": "Get all locales",
        "operationId": "GetAllLocales",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocaleDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/locale/{code}": {
      "get": {
        "tags": [
          "Locale"
        ],
        "summary": "Get a single locale",
        "operationId": "GetSingleLocale",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Locale Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocaleDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/lookup/{source}": {
      "get": {
        "tags": [
          "Lookup"
        ],
        "summary": "Get a single locale",
        "operationId": "PerformLookup",
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "description": "The lookup source",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "The search text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LookupFieldResultDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/mandate/{id}": {
      "get": {
        "tags": [
          "Mandate"
        ],
        "summary": "Get a single mandate",
        "operationId": "GetSingleMandate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Mandate ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MandateDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Mandate"
        ],
        "operationId": "UpdateMandate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MandateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MandateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MandateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MandateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MandateDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Mandate"
        ],
        "operationId": "DeleteMandate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/mandate": {
      "get": {
        "tags": [
          "Mandate"
        ],
        "summary": "Get all mandates",
        "operationId": "GetAllMandates",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MandateDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Mandate"
        ],
        "operationId": "AddMandate",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MandateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MandateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MandateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MandateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MandateDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/newbusiness/{id}": {
      "get": {
        "tags": [
          "NewBusiness"
        ],
        "summary": "Get a single new business record",
        "operationId": "GetSingleNewBusiness",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "NewBusiness ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewBusinessDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "NewBusiness"
        ],
        "operationId": "UpdateNewBusiness",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NewBusinessCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBusinessCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBusinessCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewBusinessCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewBusinessDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NewBusiness"
        ],
        "operationId": "DeleteNewBusiness",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewBusinessDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/newbusiness": {
      "get": {
        "tags": [
          "NewBusiness"
        ],
        "summary": "Get all new business records",
        "operationId": "GetAllNewBusiness",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewBusinessDtoQueryResultDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "NewBusiness"
        ],
        "operationId": "AddNewBusiness",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NewBusinessCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBusinessCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBusinessCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewBusinessCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewBusinessDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/note/{id}": {
      "get": {
        "tags": [
          "Note"
        ],
        "summary": "Get a single note",
        "operationId": "GetSingleNote",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Note Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityNoteDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Note"
        ],
        "summary": "Update a note",
        "operationId": "UpdateNote",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the record",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Note to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityNoteDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityNoteDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityNoteDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityNoteDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityNoteDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/note": {
      "get": {
        "tags": [
          "Note"
        ],
        "summary": "Get all notes",
        "operationId": "GetAllNotes",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityNoteDtoQueryResultDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Note"
        ],
        "summary": "Add a note",
        "operationId": "AddNote",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Note to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityNoteCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityNoteCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityNoteCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityNoteCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityNoteDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/objective/{id}": {
      "get": {
        "tags": [
          "Objective"
        ],
        "summary": "Get a single objective",
        "operationId": "GetSingleObjective",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Objective ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectiveDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Objective"
        ],
        "operationId": "UpdateObjective",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ObjectiveDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObjectiveDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ObjectiveDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ObjectiveDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectiveDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Objective"
        ],
        "operationId": "DeleteObjective",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/objective": {
      "get": {
        "tags": [
          "Objective"
        ],
        "summary": "Get all objectives",
        "operationId": "GetAllObjectives",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ObjectiveDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Objective"
        ],
        "operationId": "AddObjective",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ObjectiveDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObjectiveDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ObjectiveDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ObjectiveDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectiveDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/organisation/{id}": {
      "get": {
        "tags": [
          "Organisation"
        ],
        "summary": "Get a single Organisation",
        "operationId": "GetSingleOrganisation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Organisation ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/organisation": {
      "get": {
        "tags": [
          "Organisation"
        ],
        "summary": "Serach organisations",
        "operationId": "SearchOrganisations",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationDtoQueryResultDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Organisation"
        ],
        "summary": "Add an organisation",
        "operationId": "AddOrganisation",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Organisation to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartyDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/organisation/recent": {
      "get": {
        "tags": [
          "Organisation"
        ],
        "summary": "Get Recent Orgs",
        "operationId": "GetRecentOrganisations",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganisationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/organisation/favourite": {
      "get": {
        "tags": [
          "Organisation"
        ],
        "summary": "Get Recent Orgs",
        "operationId": "GetFavouriteOrganisations",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganisationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/party/{id}": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Get a single party",
        "operationId": "GetSingleParty",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Party ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartyDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Party"
        ],
        "summary": "Delete a party",
        "operationId": "DeleteParty",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Party ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/party": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Search parties",
        "operationId": "SearchParties",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartyDtoQueryResultDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Party"
        ],
        "summary": "Delete parties",
        "operationId": "DeleteMultipleParties",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Party IDs",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/party/{id}/role": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Get all roles for a party",
        "operationId": "GetPartyRolesForParty",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartyDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/party/{id}/contactpoint": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Get all contact points for a party",
        "operationId": "GetContactPointsForParty",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactPointDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/party/{id}/activities": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Get all activities for a party",
        "operationId": "GetActivities",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityDtoQueryResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/party/{id}/note": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Get all notes for a party",
        "operationId": "GetNotes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityNoteDtoQueryResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/party/{id}/phonecall": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Get all phone calls for a party",
        "operationId": "GetPhoneCalls",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityPhoneCallDtoQueryResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/party/{id}/email": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Get all emails for a party",
        "operationId": "GetEmails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityEmailDtoQueryResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/party/{id}/appointment": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Get all appointments for a party",
        "operationId": "GetAppointments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityAppointmentDtoQueryResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/party/{id}/timebooking": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Get all time bookings for a party",
        "operationId": "GetTimeBookings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityTimeBookingDtoQueryResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/party/{id}/task": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Get all tasks for a party",
        "operationId": "GetTasks",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityTaskDtoQueryResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/party/{id}/workitem": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Get all work items for a party",
        "operationId": "GetWorkItems",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemDtoQueryResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/party/{id}/status/{status}": {
      "post": {
        "tags": [
          "Party"
        ],
        "summary": "Set the state a party",
        "operationId": "SetStatusParty",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Party ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "in": "path",
            "description": "Status",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/StatusType"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartyDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/party/{id}/access": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Get Party Role Access records for a party",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartyDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/party/{id}/role/{rolecode}": {
      "post": {
        "tags": [
          "Party"
        ],
        "summary": "Add a role to a party (to create a party role)",
        "operationId": "AddRoleToParty",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Party ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "rolecode",
            "in": "path",
            "description": "Role ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartyRoleDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}": {
      "get": {
        "tags": [
          "PartyRole"
        ],
        "summary": "Get a single partyrole",
        "operationId": "GetSinglePartyRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "PartyRole ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartyRoleDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PartyRole"
        ],
        "summary": "Delete a single party role",
        "operationId": "DeletePartyRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Party Role ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/form/{category}": {
      "get": {
        "tags": [
          "PartyRole"
        ],
        "summary": "Get the form defintion for a party role + category",
        "operationId": "GetPartyRoleFormDefintion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "PartyRole ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "category",
            "in": "path",
            "description": "Form Category",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormDefinitionWithSchemaDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/status/{status}": {
      "post": {
        "tags": [
          "PartyRole"
        ],
        "summary": "Set the state of a party role",
        "operationId": "SetStatusPartyRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Party Role ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "in": "path",
            "description": "Status",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/StatusType"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/accounts": {
      "get": {
        "tags": [
          "PartyRole"
        ],
        "summary": "Get all accounts for a party role.",
        "operationId": "GetAllAccountsForPartyRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/processes": {
      "get": {
        "tags": [
          "PartyRole"
        ],
        "summary": "Get all processes on the specified party role.",
        "operationId": "GetProcessesForPartyRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Party Role ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "loadRegardingObject",
            "in": "query",
            "description": "Load the full regarding object",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProcessDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/activities": {
      "get": {
        "tags": [
          "PartyRole"
        ],
        "summary": "Get all activities for a party role",
        "operationId": "GetActivitiesForPartyRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityDtoQueryResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/note": {
      "get": {
        "tags": [
          "PartyRole"
        ],
        "summary": "Get all notes for a party role",
        "operationId": "GetNotesForPartyRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityNoteDtoQueryResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/phonecall": {
      "get": {
        "tags": [
          "PartyRole"
        ],
        "summary": "Get all phone calls for a party role",
        "operationId": "GetPhoneCallsForPartyRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityPhoneCallDtoQueryResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/email": {
      "get": {
        "tags": [
          "PartyRole"
        ],
        "summary": "Get all emails for a party role",
        "operationId": "GetEmailsForPartyRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityEmailDtoQueryResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/appointment": {
      "get": {
        "tags": [
          "PartyRole"
        ],
        "summary": "Get all appointments for a party role",
        "operationId": "GetAppointmentsForPartyRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityAppointmentDtoQueryResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/timebooking": {
      "get": {
        "tags": [
          "PartyRole"
        ],
        "summary": "Get all time bookings for a party role",
        "operationId": "GetTimeBookingsForPartyRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityTimeBookingDtoQueryResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/task": {
      "get": {
        "tags": [
          "PartyRole"
        ],
        "summary": "Get all tasks for a party role",
        "operationId": "GetTasksForPartyRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityTaskDtoQueryResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/workitem": {
      "get": {
        "tags": [
          "PartyRole"
        ],
        "summary": "Get all work items for a party role",
        "operationId": "GetWorkItemsForPartyRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemDtoQueryResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/relationshiptypes": {
      "get": {
        "tags": [
          "PartyRole"
        ],
        "summary": "Get all applicable relationship types for a party role",
        "operationId": "GetAvailableRelationshipTypesForPartyRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/relationshipmap": {
      "get": {
        "tags": [
          "PartyRole"
        ],
        "summary": "Get relationship map",
        "operationId": "GetPartyRoleRelationshipMap",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipMapDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/access": {
      "get": {
        "tags": [
          "PartyRole"
        ],
        "summary": "Get Party Role Access records for a party role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartyRoleAccessDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PartyRole"
        ],
        "summary": "Add Party Role Access records for a party role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Party Role Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The access to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PartyRoleAccessCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartyRoleAccessCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PartyRoleAccessCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PartyRoleAccessCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "PartyRole"
        ],
        "summary": "Delete Party Role Access records for a party role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Party Role Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Array of Party IDs",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/document": {
      "get": {
        "tags": [
          "PartyRole"
        ],
        "summary": "Get Client Documents (from ClientDocument table, not Mongo)",
        "operationId": "GetClientDocuments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/documents/checklist": {
      "get": {
        "tags": [
          "PartyRole"
        ],
        "summary": "Get all Mandatory Documents",
        "operationId": "GetMandatoryDocuments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "draft",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentCheckDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/person/{id}": {
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Get a single person",
        "operationId": "GetSinglePerson",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Person ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/person": {
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Serach people",
        "operationId": "SearchPeople",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDtoQueryResultDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Person"
        ],
        "summary": "Add a person",
        "operationId": "AddPerson",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Person to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PersonCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PersonCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartyDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/person/recent": {
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Get Recent People",
        "operationId": "GetRecentPeople",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/person/favourite": {
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Get Recent People",
        "operationId": "GetFavouritePeople",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/person/{id}/aml": {
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Get a single person's AML",
        "operationId": "GetSinglePersonAml",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Person ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmlReportDto"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Person"
        ],
        "summary": "Calculate single person's AML",
        "operationId": "UpdateSinglePersonAml",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Person ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmlReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/person/{id}/aml/request": {
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Get single person's AML request",
        "operationId": "GetSinglePersonAmlRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Person ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmlReportDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/phoneaddress/{id}": {
      "get": {
        "tags": [
          "PhoneAddress"
        ],
        "summary": "Get a single phone address",
        "operationId": "GetSinglePhoneAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Phone address Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneAddressDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PhoneAddress"
        ],
        "summary": "Update a phone address.",
        "operationId": "UpdatePhoneAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneAddressDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneAddressDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneAddressDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneAddressDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneAddressDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/phoneaddress": {
      "get": {
        "tags": [
          "PhoneAddress"
        ],
        "summary": "Get all phone addresses",
        "operationId": "GetAllPhoneAddresses",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneAddressDtoQueryResultDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PhoneAddress"
        ],
        "summary": "Add a phone number",
        "operationId": "AddPhoneAddress",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Phone Address to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneAddressCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneAddressCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneAddressCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneAddressCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneAddressDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/phonecall/{id}": {
      "get": {
        "tags": [
          "PhoneCall"
        ],
        "summary": "Get a single phone call",
        "operationId": "GetSinglePhoneCall",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Phone address Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityPhoneCallDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PhoneCall"
        ],
        "summary": "Update a phone call",
        "operationId": "UpdatePhoneCall",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the record",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Phone Call to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityPhoneCallDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityPhoneCallDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityPhoneCallDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityPhoneCallDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityPhoneCallDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/phonecall": {
      "get": {
        "tags": [
          "PhoneCall"
        ],
        "summary": "Get all phone calls",
        "operationId": "GetAllPhoneCalls",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityPhoneCallDtoQueryResultDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PhoneCall"
        ],
        "summary": "Add a phone call",
        "operationId": "AddPhoneCall",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Phone Call to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityPhoneCallCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityPhoneCallCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityPhoneCallCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityPhoneCallCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityPhoneCallDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/picklist/{name}": {
      "get": {
        "tags": [
          "Picklist"
        ],
        "summary": "Get a single picklist",
        "operationId": "GetSinglePicklistType",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Picklist name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PicklistTypeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/picklist": {
      "get": {
        "tags": [
          "Picklist"
        ],
        "summary": "Get all Picklists",
        "operationId": "GetAllPicklistTypes",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PicklistTypeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/postaladdress/{id}": {
      "get": {
        "tags": [
          "PostalAddress"
        ],
        "summary": "Get a single postal address",
        "operationId": "GetSinglePostalAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Postal address Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostalAddressDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PostalAddress"
        ],
        "summary": "Update a postal address.",
        "operationId": "UpdatePostalAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PostalAddressDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostalAddressDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PostalAddressDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PostalAddressDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostalAddressDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/postaladdress/lookup": {
      "get": {
        "tags": [
          "PostalAddress"
        ],
        "summary": "Do an address search against external address lookup provider",
        "operationId": "LookupAddress",
        "parameters": [
          {
            "name": "houseNumber",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "postalCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PostalAddressLookupDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/postaladdress/lookup/{id}": {
      "get": {
        "tags": [
          "PostalAddress"
        ],
        "summary": "Get a specific address from external address service",
        "operationId": "GetLookupAddressResult",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostalAddressDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/postaladdress": {
      "get": {
        "tags": [
          "PostalAddress"
        ],
        "summary": "Get all postal addresses",
        "operationId": "GetAllPostalAddresses",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostalAddressDtoQueryResultDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PostalAddress"
        ],
        "summary": "Add a postal address",
        "operationId": "AddPostalAddress",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Postal Address to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PostalAddressCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostalAddressCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PostalAddressCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PostalAddressCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostalAddressDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/postaladdress/{id}/nearby": {
      "get": {
        "tags": [
          "PostalAddress"
        ],
        "summary": "Get addresses nearby another address",
        "operationId": "GetNearbyPostalAddresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "miles",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 5
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostalAddressDtoQueryResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/process/{id}": {
      "get": {
        "tags": [
          "Process"
        ],
        "summary": "Get a single process",
        "operationId": "GetSingleProcess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Process ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Process"
        ],
        "summary": "Delete a process.",
        "operationId": "DeleteProcess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Process ID to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/process/{id}/storage": {
      "get": {
        "tags": [
          "Process"
        ],
        "summary": "Get a single process' storage",
        "operationId": "GetSingleProcessStorage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Process ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Process"
        ],
        "summary": "Update a single process' storage",
        "operationId": "UpdateSingleProcessStorage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Process ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": false
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": false
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": false
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/process/{id}/workitems": {
      "get": {
        "tags": [
          "Process"
        ],
        "summary": "Get tasks by process",
        "operationId": "GetWorkItemsByProcess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Process ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItemDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/process/{id}/history": {
      "get": {
        "tags": [
          "Process"
        ],
        "summary": "Get a single activity's history",
        "operationId": "GetProcessHistory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityHistoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/process": {
      "get": {
        "tags": [
          "Process"
        ],
        "summary": "Get all processes on the specified object.",
        "operationId": "GetProcessesByRegarding",
        "parameters": [
          {
            "name": "regardingType",
            "in": "query",
            "description": "Regarding Object Type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "regardingId",
            "in": "query",
            "description": "Regarding Object ID",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "loadRegardingObject",
            "in": "query",
            "description": "Load the full regarding object",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProcessDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Process"
        ],
        "summary": "Start a process.",
        "operationId": "StartProcess",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Process to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/process/{id}/cancel": {
      "patch": {
        "tags": [
          "Process"
        ],
        "summary": "Cancel a process.",
        "operationId": "CancelProcess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Process ID to target",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/process/{id}/action/{code}": {
      "patch": {
        "tags": [
          "Process"
        ],
        "summary": "Perform an action on a process.",
        "operationId": "PerformActionOnProcess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Process ID to target",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "code",
            "in": "path",
            "description": "The code of the action to perform",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/processtype": {
      "get": {
        "tags": [
          "ProcessType"
        ],
        "summary": "Get all process types",
        "operationId": "GetProcessTypes",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProcessTypeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/processtype/{code}": {
      "get": {
        "tags": [
          "ProcessType"
        ],
        "summary": "Get a single process type",
        "operationId": "GetProcessType",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Process Type Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "Optionally specify a specific process version",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "Optionally specify a specific process version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessTypeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/processtype/{code}/processes": {
      "get": {
        "tags": [
          "ProcessType"
        ],
        "summary": "Get all processes by type",
        "operationId": "GetProcessesByType",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loadRegardingObject",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProcessDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/processtype/{code}/workitems": {
      "get": {
        "tags": [
          "ProcessType"
        ],
        "summary": "Get all active work items by process type",
        "operationId": "GetWorkItemsByProcessType",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loadRegardingObject",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItemDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/processtype/{code}/stages": {
      "get": {
        "tags": [
          "ProcessType"
        ],
        "summary": "Get all stages for a process type",
        "operationId": "GetProcessStages",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Process Type Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "Optionally specify a specific process version",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "Optionally specify a specific process version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProcessStageDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/processtype/{code}/stage/{stage}": {
      "get": {
        "tags": [
          "ProcessType"
        ],
        "summary": "Get a specific stage for a process type",
        "operationId": "GetProcessStage",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Process Type Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stage",
            "in": "path",
            "description": "Process Stage Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "Optionally specify a specific process version",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "Optionally specify a specific process version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProcessStageDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/processtype/{code}/stage/{stage}/workitems": {
      "get": {
        "tags": [
          "ProcessType"
        ],
        "summary": "Get all tasks for a process stage",
        "operationId": "GetProcessStageWorkItems",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Process Type Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stage",
            "in": "path",
            "description": "Process Stage Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "Optionally specify a specific process version",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "Optionally specify a specific process version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItemTypeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/processtype/{code}/stage/{stage}/workitem/{task}": {
      "get": {
        "tags": [
          "ProcessType"
        ],
        "summary": "Get a specific task for a process stage",
        "operationId": "GetProcessStageWorkItem",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Process Type Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stage",
            "in": "path",
            "description": "Process Stage Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "task",
            "in": "path",
            "description": "Task Type Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "Optionally specify a specific process version",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "Optionally specify a specific process version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemTypeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/product/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get a single product",
        "operationId": "GetSingleProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "operationId": "UpdateProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "operationId": "DeleteProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/product": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get all products",
        "operationId": "GetAllProducts",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "operationId": "AddProduct",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/producttype/{code}": {
      "get": {
        "tags": [
          "ProductType"
        ],
        "summary": "Get a single Product Type",
        "operationId": "GetSingleProductType",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Product Type Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductTypeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/producttype": {
      "get": {
        "tags": [
          "ProductType"
        ],
        "summary": "Get all Product Types",
        "operationId": "GetAllProductTypes",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductTypeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/prospect/{id}": {
      "get": {
        "tags": [
          "Prospect"
        ],
        "summary": "Get a single prospect",
        "operationId": "GetSingleProspect",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Prospects ID (partyrole)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProspectDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Prospect"
        ],
        "summary": "Update a single prospect",
        "operationId": "UpdateProspect",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Prospects ID (partyrole)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProspectDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProspectDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProspectDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProspectDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProspectDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/prospect/multiple": {
      "post": {
        "tags": [
          "Prospect"
        ],
        "summary": "Get many prospects",
        "operationId": "GetMultipleProspects",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Prospect IDs",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProspectDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/prospect": {
      "get": {
        "tags": [
          "Prospect"
        ],
        "summary": "Get all prospects",
        "operationId": "GetAllProspects",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProspectDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/prospect/favourite": {
      "get": {
        "tags": [
          "Prospect"
        ],
        "summary": "Get favourite prospects",
        "operationId": "GetFavouriteProspects",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProspectDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/prospect/recent": {
      "get": {
        "tags": [
          "Prospect"
        ],
        "summary": "Get recent prospects",
        "operationId": "GetRecentProspects",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProspectDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/relationship/{id}": {
      "get": {
        "tags": [
          "Relationship"
        ],
        "summary": "Get a single relationship",
        "operationId": "GetSingleRelationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Relationship ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Relationship"
        ],
        "operationId": "UpdateRelationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipUpdateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Relationship"
        ],
        "operationId": "DeleteRelationship",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/relationship": {
      "post": {
        "tags": [
          "Relationship"
        ],
        "operationId": "AddRelationship",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/relationshiptype/{code}": {
      "get": {
        "tags": [
          "RelationshipType"
        ],
        "summary": "Get a single RelationshipType",
        "operationId": "GetSingleRelationshipType",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "RelationshipType ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipTypeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/relationshiptype": {
      "get": {
        "tags": [
          "RelationshipType"
        ],
        "summary": "Get all RelationshipTypes",
        "operationId": "GetAllRelationshipTypes",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RelationshipTypeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/risklevel/{id}": {
      "get": {
        "tags": [
          "RiskLevel"
        ],
        "summary": "Get a single riskLevel",
        "operationId": "GetSingleRiskLevel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "RiskLevel ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RiskLevelDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "RiskLevel"
        ],
        "operationId": "UpdateRiskLevel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RiskLevelDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RiskLevelDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RiskLevelDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RiskLevelDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RiskLevelDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RiskLevel"
        ],
        "operationId": "DeleteRiskLevel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/risklevel": {
      "get": {
        "tags": [
          "RiskLevel"
        ],
        "summary": "Get all riskLevels",
        "operationId": "GetAllRiskLevels",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RiskLevelDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "RiskLevel"
        ],
        "operationId": "AddRiskLevel",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RiskLevelDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RiskLevelDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RiskLevelDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RiskLevelDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RiskLevelDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/role/{code}": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Get a single Role",
        "operationId": "GetSingleRole",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Role Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/role/{code}/relationshiptypes": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Returns the relationships (in simplified format) that are applicable for a given role.",
        "operationId": "GetRoleRelationshipTypes",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Role Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "relatedPartyType",
            "in": "query",
            "description": "Filter the relationship types where there related to a specific party type e.g. Person",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipTypeSimpleDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/role/relationshiptypes": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Returns the relationships (in simplified format) that are applicable for all roles",
        "operationId": "GetAllRoleRelationshipTypes",
        "parameters": [
          {
            "name": "relatedPartyType",
            "in": "query",
            "description": "Filter the relationship types where there related to a specific party type e.g. Person",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipTypeSimpleDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/role": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Get all Roles",
        "operationId": "GetAllRoles",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/search": {
      "get": {
        "tags": [
          "Search"
        ],
        "operationId": "GlobalSearch",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GlobalSearchResultDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/socialaddress/{id}": {
      "get": {
        "tags": [
          "SocialAddress"
        ],
        "summary": "Get a single social address",
        "operationId": "GetSingleSocialAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Social address Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SocialAddressDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SocialAddress"
        ],
        "summary": "Update a social address.",
        "operationId": "UpdateSocialAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SocialAddressDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SocialAddressDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SocialAddressDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SocialAddressDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SocialAddressDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/socialaddress": {
      "get": {
        "tags": [
          "SocialAddress"
        ],
        "summary": "Get all social addresses",
        "operationId": "GetAllSocialAddresses",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SocialAddressDtoQueryResultDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SocialAddress"
        ],
        "summary": "Add an social address",
        "operationId": "AddSocialAddress",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Social Address to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SocialAddressCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SocialAddressCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SocialAddressCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SocialAddressCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SocialAddressDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/system/version": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Gets version info",
        "operationId": "GetVersion",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/system/exchangerate/{currency}": {
      "get": {
        "tags": [
          "System"
        ],
        "operationId": "GetExchangeRate",
        "parameters": [
          {
            "name": "currency",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/system/theme": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Gets theme info",
        "operationId": "GetTheme",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThemeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/system/navbar": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Gets navbar settings",
        "operationId": "GetNavbar",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NavBarDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/system/setting/{key}": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get a public configuration setting\r\nAlways return JSON - if setting is not already JSON it return is as { \"value\" : \"xxxx\" }",
        "operationId": "GetPublicSetting",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/system/setting/{type}/{key}": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get a public configuration setting (by type)\r\nAlways return JSON - if setting is not already JSON it return is as { \"value\" : \"xxxx\" }",
        "operationId": "GetPublicSettingByType",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/system/status": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get system status and messages",
        "operationId": "GetSystemStatus",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemStatusDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/tag": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Get all Tags",
        "operationId": "GetAllTags",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoQueryResultDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tag"
        ],
        "summary": "Add a tag",
        "operationId": "AddTag",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Tag to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TagCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TagCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TagCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagCreateDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/tag/{entity}/category/{category}": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Get all Tags for an entitytype+category",
        "operationId": "GetTagsForEntityAndCategory",
        "parameters": [
          {
            "name": "entity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/tag/{entity}/{id}/category/{category}": {
      "post": {
        "tags": [
          "Tag"
        ],
        "operationId": "CreateTagForSpecificEntity",
        "parameters": [
          {
            "name": "entity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Tag"
        ],
        "operationId": "DeleteTagForSpecificEntity",
        "parameters": [
          {
            "name": "entity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Get all Tags for a specific Entity + Category",
        "operationId": "GetTagsForSpecificEntityAndCategory",
        "parameters": [
          {
            "name": "entity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/tag/{id}": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Get a single tag",
        "operationId": "GetSingleTag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tag ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tag"
        ],
        "summary": "Update a Web Hook",
        "operationId": "UpdateTag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tag ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Tag DTO",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TagUpdateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TagUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TagUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tag"
        ],
        "summary": "Delete a Tag",
        "operationId": "DeleteTag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tag ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/task/{id}": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Get a single task",
        "operationId": "GetSingleTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityTaskDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Task"
        ],
        "summary": "Update a task",
        "operationId": "UpdateTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Task to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTaskDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTaskDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTaskDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTaskDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityTaskDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/task": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Get all tasks",
        "operationId": "GetAllTasks",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityTaskDtoQueryResultDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Add a task",
        "operationId": "AddTask",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Task to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTaskCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTaskCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTaskCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTaskCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityTaskDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/team/{id}": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Get a single team",
        "operationId": "GetSingleTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartyDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/team/{id}/members": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Get a single team's members",
        "operationId": "GetSingleTeamMembers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartyDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/team": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Serach teams",
        "operationId": "SearchTeams",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamDtoQueryResultDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "Add a team",
        "operationId": "AddTeam",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Team to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TeamCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TeamCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartyDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/team/{id}/user/{userId}": {
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "Add user to a team",
        "operationId": "AddUserToTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User (party role) ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "isPrincipalTeam",
            "in": "query",
            "description": "Is this Principal Team for the User",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartyDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Team"
        ],
        "summary": "Remove user from a team",
        "operationId": "RemoveUserFromTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User (party role) ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartyDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/team/{id}/workitems": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Get work items by assigned team",
        "operationId": "GetWorkItemsByAssignedTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Process ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItemDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/timebooking/{id}": {
      "get": {
        "tags": [
          "TimeBooking"
        ],
        "summary": "Get a single timebooking",
        "operationId": "GetSingleTimeBooking",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "TimeBooking Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityTimeBookingDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TimeBooking"
        ],
        "summary": "Update a timebooking",
        "operationId": "UpdateTimeBooking",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the record",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "TimeBooking to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTimeBookingDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTimeBookingDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTimeBookingDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTimeBookingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityTimeBookingDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/timebooking": {
      "get": {
        "tags": [
          "TimeBooking"
        ],
        "summary": "Get all timebookings",
        "operationId": "GetAllTimeBookings",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityTimeBookingDtoQueryResultDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TimeBooking"
        ],
        "summary": "Add a timebooking",
        "operationId": "AddTimeBooking",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "TimeBooking to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTimeBookingCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTimeBookingCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTimeBookingCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTimeBookingCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityTimeBookingDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/user/{id}/avatar": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get a single user avatar",
        "operationId": "GetSingleUserAvatar",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 128
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Set single user avatar",
        "operationId": "SetSingleUserAvatar",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete single user avatar",
        "operationId": "DeleteSingleUserAvatar",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/user/me/avatar": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Set current user avatar",
        "operationId": "SetMyAvatar",
        "parameters": [
          {
            "name": "testing",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete current user avatar",
        "operationId": "DeleteMyAvatar",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get a single user",
        "operationId": "GetSingleUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartyDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Serach users",
        "operationId": "SearchUsers",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDtoQueryResultDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Add a user",
        "operationId": "AddUser",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "User to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartyDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/user/me": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Who am I? Return logged in user",
        "operationId": "WhoAmI",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/user/me/password": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Change my password",
        "operationId": "ChangePassword",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordChangeDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordChangeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordChangeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordChangeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartyDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/user/me/today": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user's today view",
        "operationId": "GetMyTodayView",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodayDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/user/me/dashboard": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user's dashboard view",
        "operationId": "GetMyDashboardView",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/user/me/cards": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all action cards assigned to the current user.",
        "operationId": "GetMyActionCards",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CardDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/user/me/workitems": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get work items assigned to the current user",
        "operationId": "GetWorkItemsAssignedToMe",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItemDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/user/{id}/workitems": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get work items by assignee",
        "operationId": "GetWorkItemsByAssignee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItemDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/useraction/favourite/entity/{entityType}/{recordId}": {
      "get": {
        "tags": [
          "UserAction"
        ],
        "summary": "Gets the Favourite \"state\" of the given record",
        "operationId": "GetFavouriteState",
        "parameters": [
          {
            "name": "entityType",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recordId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/useraction/{userAction}/entity/{entityType}/{recordId}": {
      "patch": {
        "tags": [
          "UserAction"
        ],
        "summary": "Submits a user action against a record\r\nThese are actions from the UI layer that we want to track",
        "operationId": "ProcessAction",
        "parameters": [
          {
            "name": "userAction",
            "in": "path",
            "description": "The Action (See UserAction enum)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityType",
            "in": "path",
            "description": "The Entity Type (See SystemEntity enum)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recordId",
            "in": "path",
            "description": "The Record Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "additional",
            "in": "query",
            "description": "Additional - Field/Document name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/webhook": {
      "get": {
        "tags": [
          "WebHook"
        ],
        "summary": "Get all WebHooks",
        "operationId": "GetAllWebHooks",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebHookDtoQueryResultDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WebHook"
        ],
        "summary": "Add a web hook",
        "operationId": "AddWebHook",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "WebHook to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebHookCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebHookCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebHookCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebHookCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebHookCreateDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/webhook/{id}": {
      "get": {
        "tags": [
          "WebHook"
        ],
        "summary": "Get a single webhook",
        "operationId": "GetSingleWebHook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "WebHook ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebHookDto"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "WebHook"
        ],
        "summary": "Partially update a WebHook using JsonPatch",
        "operationId": "PartiallyUpdateWebHook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of WebHook",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Patch values",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebHookDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebHook"
        ],
        "summary": "Update a Web Hook",
        "operationId": "UpdateWebHook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "WebHook ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "WebHook DTO",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebHookUpdateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebHookUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebHookUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebHookUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebHookDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebHook"
        ],
        "summary": "Delete a WebHook",
        "operationId": "DeleteWebHook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "WebHook ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/workitem/{id}": {
      "get": {
        "tags": [
          "WorkItem"
        ],
        "summary": "Get a single work item",
        "operationId": "GetSingleWorkItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Work Item Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/workitem/{id}/start": {
      "patch": {
        "tags": [
          "WorkItem"
        ],
        "summary": "Starts a work item. Only needed if it was created in state Pending.",
        "operationId": "StartWorkItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Work Item Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/workitem/{id}/cancel": {
      "patch": {
        "tags": [
          "WorkItem"
        ],
        "summary": "Cancels a work item",
        "operationId": "CancelWorkItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Work Item Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/workitem/{id}/assign": {
      "patch": {
        "tags": [
          "WorkItem"
        ],
        "summary": "Assigns a work item",
        "operationId": "AssignWorkItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Work Item Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "user",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "team",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/workitem/{id}/complete": {
      "patch": {
        "tags": [
          "WorkItem"
        ],
        "summary": "Completes a work item",
        "operationId": "CompleteWorkItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Work Item Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/workitem/{id}/outcome/{code}": {
      "patch": {
        "tags": [
          "WorkItem"
        ],
        "summary": "Performs a work item outcome",
        "operationId": "PerformWorkItemOutcome",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Work Item Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "code",
            "in": "path",
            "description": "The outcome code to trigger",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ReferenceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccountDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "dateOpened": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateClosed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateLive": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "productCode": {
            "type": "string",
            "nullable": true
          },
          "mandateCode": {
            "type": "string",
            "nullable": true
          },
          "riskLevelCode": {
            "type": "string",
            "nullable": true
          },
          "objectiveCode": {
            "type": "string",
            "nullable": true
          },
          "feeStructureCode": {
            "type": "string",
            "nullable": true
          },
          "serviceType": {
            "type": "string",
            "nullable": true
          },
          "timeHorizon": {
            "type": "string",
            "nullable": true
          },
          "purpose": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "latestValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "latestValueBase": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "beneficialOwner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "group": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "cherishedHoldings": {
            "type": "string",
            "nullable": true
          },
          "restrictions": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccountCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "productCode": {
            "type": "string",
            "nullable": true
          },
          "mandateCode": {
            "type": "string",
            "nullable": true
          },
          "riskLevelCode": {
            "type": "string",
            "nullable": true
          },
          "objectiveCode": {
            "type": "string",
            "nullable": true
          },
          "feeStructureCode": {
            "type": "string",
            "nullable": true
          },
          "serviceType": {
            "type": "string",
            "nullable": true
          },
          "timeHorizon": {
            "type": "string",
            "nullable": true
          },
          "purpose": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "beneficialOwner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "group": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccountGroupDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "groupType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegardingDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "regardingObject": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ActivityPartyDto": {
        "type": "object",
        "properties": {
          "party": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "partyRole": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "contactPoint": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ActivityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "isPinned": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "activityType": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateActual": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationScheduled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationActual": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "process": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "regarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegardingDto"
            },
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "hasFiles": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "QueryPagingDto": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ActivityDtoQueryResultDto": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityDto"
            },
            "nullable": true
          },
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QueryPagingDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ActivityFileDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "fileIndex": {
            "type": "string",
            "nullable": true
          },
          "sizeInBytes": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MinimalPartyDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "partyType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ActivityHistoryDto": {
        "type": "object",
        "properties": {
          "activity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "action": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "recordedBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MinimalPartyDto"
              }
            ],
            "nullable": true
          },
          "dateRecorded": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ActivityCommentCreateDto": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ActivityStatusType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "ActivityAppointmentDto": {
        "type": "object",
        "properties": {
          "organiser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActivityPartyDto"
              }
            ],
            "nullable": true
          },
          "required": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "optional": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "isPinned": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "activityType": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateActual": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationScheduled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationActual": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "process": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "regarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegardingDto"
            },
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "hasFiles": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ActivityAppointmentDtoQueryResultDto": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityAppointmentDto"
            },
            "nullable": true
          },
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QueryPagingDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ActivityAppointmentCreateDto": {
        "type": "object",
        "properties": {
          "organiser": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActivityPartyDto"
              }
            ],
            "nullable": true
          },
          "required": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "optional": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "sendInvite": {
            "type": "boolean"
          },
          "inviteHtml": {
            "type": "string",
            "nullable": true
          },
          "invitePlainText": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateActual": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationScheduled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationActual": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "regarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegardingDto"
            },
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuditEventChangeDto": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "nullable": true
          },
          "oldValue": {
            "type": "string",
            "nullable": true
          },
          "newValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuditEventDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "action": {
            "type": "string",
            "nullable": true
          },
          "eventTime": {
            "type": "string",
            "format": "date-time"
          },
          "who": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "additional": {
            "type": "string",
            "nullable": true
          },
          "changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditEventChangeDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BoardSettingsDto": {
        "type": "object",
        "properties": {
          "colour": {
            "type": "string",
            "nullable": true
          },
          "subscribed": {
            "type": "boolean"
          },
          "cardCoverImages": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BoardListDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "idCards": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BoardCardDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "idAttachmentCover": {
            "type": "string",
            "nullable": true
          },
          "idMembers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "idLabels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "subscribed": {
            "type": "boolean"
          },
          "checklists": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "activities": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "due": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BoardMemberDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "avatar": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BoardLabelDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BoardTypeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "uri": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BoardSettingsDto"
              }
            ],
            "nullable": true
          },
          "lists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoardListDto"
            },
            "nullable": true
          },
          "cards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoardCardDto"
            },
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoardMemberDto"
            },
            "nullable": true
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoardLabelDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CalendarDayDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CalendarDto": {
        "type": "object",
        "properties": {
          "firstDayOfWeek": {
            "type": "string",
            "nullable": true
          },
          "standardWorkingDays": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "nonWorkingDays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalendarDayDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "typeCode": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "colour": {
            "type": "string",
            "nullable": true
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "span": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CurrencyDto": {
        "required": [
          "isoCode"
        ],
        "type": "object",
        "properties": {
          "isoCode": {
            "maxLength": 3,
            "type": "string"
          },
          "name": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RoleDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "partyType": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "qualifyingRelationshipTypeCode": {
            "type": "string",
            "nullable": true
          },
          "canBeClient": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RelationshipTypeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "reciprocalName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "isHierarchical": {
            "type": "boolean"
          },
          "parentPartyType": {
            "type": "string",
            "nullable": true
          },
          "parentRoleType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoleDto"
              }
            ],
            "nullable": true
          },
          "childPartyType": {
            "type": "string",
            "nullable": true
          },
          "childRoleType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoleDto"
              }
            ],
            "nullable": true
          },
          "childRelationshipType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelationshipTypeDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelationshipDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "isPrincipalTeam": {
            "type": "boolean"
          },
          "parentPartyRole": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "parentParty": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "childPartyRole": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "childParty": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "relatedPartyRole": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "relatedParty": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "childRelationship": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "relationshipType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelationshipTypeDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClientDto": {
        "type": "object",
        "properties": {
          "dateLastReview": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateNextReview": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyDto"
              }
            ],
            "nullable": true
          },
          "totalValueInvested": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "isPrimary": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "party": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoleDto"
              }
            ],
            "nullable": true
          },
          "clientStatusType": {
            "type": "string",
            "nullable": true
          },
          "teamMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "subsidiaryTeams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "subsidiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "powerOfAttorneyFor": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "wards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "employees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "trustees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "directors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "shareholders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "correspondents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "settlors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "beneficiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "jointInvestors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "teamMembersOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "parentTeams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "parentOrganisations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "powerOfAttorneys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "parents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "guardians": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "employers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "trusteesOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "directorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "shareholdersOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "correspondentsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "settlorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "beneficiariesOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "jointInvestorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "advisers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "productProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "professionals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "friends": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "spouses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "partners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "divorcees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "widowees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "familyMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ComplaintDto": {
        "required": [
          "complainant",
          "reason",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "resolution": {
            "type": "string",
            "nullable": true
          },
          "originator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "complainant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ]
          },
          "dateOpened": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateClosed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "process": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ComplaintDtoQueryResultDto": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComplaintDto"
            },
            "nullable": true
          },
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QueryPagingDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ComplaintCreateDto": {
        "required": [
          "complainant",
          "reason",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string"
          },
          "complainant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "ContactPointType": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "LookupResultDto": {
        "type": "object",
        "properties": {
          "partyId": {
            "type": "integer",
            "format": "int32"
          },
          "partyType": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "contactPointId": {
            "type": "integer",
            "format": "int32"
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactPointDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "contactPointType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactPointDtoQueryResultDto": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactPointDto"
            },
            "nullable": true
          },
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QueryPagingDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StatusType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "CountryDto": {
        "required": [
          "isoCode"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "isoCode": {
            "maxLength": 2,
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DashboardDefintionDto": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DashboardDataDto": {
        "type": "object",
        "properties": {
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "expiresOn": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ElectronicAddressDto": {
        "type": "object",
        "properties": {
          "emailAddress": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "addressType": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "contactPointType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ElectronicAddressDtoQueryResultDto": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ElectronicAddressDto"
            },
            "nullable": true
          },
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QueryPagingDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ElectronicAddressCreateDto": {
        "required": [
          "addressType",
          "emailAddress"
        ],
        "type": "object",
        "properties": {
          "emailAddress": {
            "maxLength": 255,
            "type": "string"
          },
          "isDefaultForParty": {
            "type": "boolean"
          },
          "addressType": {
            "type": "string"
          },
          "partyId": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ActivityEmailDto": {
        "type": "object",
        "properties": {
          "from": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActivityPartyDto"
              }
            ],
            "nullable": true
          },
          "to": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "cc": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "bcc": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "isPinned": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "activityType": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateActual": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationScheduled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationActual": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "process": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "regarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegardingDto"
            },
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "hasFiles": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ActivityEmailDtoQueryResultDto": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityEmailDto"
            },
            "nullable": true
          },
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QueryPagingDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ActivityEmailCreateDto": {
        "type": "object",
        "properties": {
          "from": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActivityPartyDto"
              }
            ],
            "nullable": true
          },
          "to": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "cc": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "bcc": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "subject": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateActual": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationScheduled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationActual": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "regarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegardingDto"
            },
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FeeStructureDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FeeStructureDtoQueryResultDto": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeeStructureDto"
            },
            "nullable": true
          },
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QueryPagingDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileIndexDto": {
        "type": "object",
        "properties": {
          "fileIndex": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "sizeInBytes": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormDataInstanceDto": {
        "type": "object",
        "properties": {
          "formVersion": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          },
          "lastUpdatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdatedBy": {
            "type": "string",
            "nullable": true
          },
          "publishedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "publishedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormDataHistoryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "formVersion": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "updatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "publishedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "publishedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClientMaster": {
        "type": "object",
        "properties": {
          "assets": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          },
          "income": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          },
          "needsAssessment": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          },
          "sourceOfWealth": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          },
          "attitudeToRisk": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          },
          "liabilities": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          },
          "expenses": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FieldDefinitionOptionDto": {
        "type": "object",
        "properties": {
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "isDisabled": {
            "type": "boolean"
          },
          "iconName": {
            "type": "string",
            "nullable": true
          },
          "colour": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DisplayPropertyDto": {
        "type": "object",
        "properties": {
          "singularName": {
            "type": "string",
            "nullable": true
          },
          "pluralName": {
            "type": "string",
            "nullable": true
          },
          "displayNameFormat": {
            "type": "string",
            "nullable": true
          },
          "secondaryNameFormat": {
            "type": "string",
            "nullable": true
          },
          "dynamicIconField": {
            "type": "string",
            "nullable": true
          },
          "defaultIconName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DocumentTypeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "guidanceNotes": {
            "type": "string",
            "nullable": true
          },
          "metadataSchema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldDefinitionDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FieldDefinitionDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "fieldType": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "placeholder": {
            "type": "string",
            "nullable": true
          },
          "isRequired": {
            "type": "boolean"
          },
          "lines": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isHidden": {
            "type": "boolean"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldDefinitionOptionDto"
            },
            "nullable": true
          },
          "childSchema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldDefinitionDto"
            },
            "nullable": true
          },
          "displayProperties": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DisplayPropertyDto"
              }
            ],
            "nullable": true
          },
          "renderInline": {
            "type": "boolean",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "selectSourceApi": {
            "type": "string",
            "nullable": true
          },
          "lookupSource": {
            "type": "string",
            "nullable": true
          },
          "inputMaskRegEx": {
            "type": "string",
            "nullable": true
          },
          "inputMaskDescription": {
            "type": "string",
            "nullable": true
          },
          "min": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "max": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dateRestrictionType": {
            "type": "string",
            "nullable": true
          },
          "isCalculated": {
            "type": "boolean",
            "nullable": true
          },
          "isCalculationTrigger": {
            "type": "boolean"
          },
          "isSensitive": {
            "type": "boolean"
          },
          "guidanceText": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          },
          "previousTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "lookupAllowCreateNew": {
            "type": "boolean",
            "nullable": true
          },
          "documentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DocumentTypeDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormDefinitionWithSchemaDto": {
        "type": "object",
        "properties": {
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldDefinitionDto"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "entityType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormDefinitionDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "entityType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphQLQuery": {
        "type": "object",
        "properties": {
          "operationName": {
            "type": "string",
            "nullable": true
          },
          "query": {
            "type": "string",
            "nullable": true
          },
          "variables": {
            "type": "object",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IntermediaryDto": {
        "type": "object",
        "properties": {
          "capacityCode": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyDto"
              }
            ],
            "nullable": true
          },
          "totalValueIntroduced": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalValueManaged": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "isPrimary": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "party": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoleDto"
              }
            ],
            "nullable": true
          },
          "clientStatusType": {
            "type": "string",
            "nullable": true
          },
          "teamMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "subsidiaryTeams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "subsidiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "powerOfAttorneyFor": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "wards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "employees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "trustees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "directors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "shareholders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "correspondents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "settlors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "beneficiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "jointInvestors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "teamMembersOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "parentTeams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "parentOrganisations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "powerOfAttorneys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "parents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "guardians": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "employers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "trusteesOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "directorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "shareholdersOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "correspondentsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "settlorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "beneficiariesOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "jointInvestorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "advisers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "productProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "professionals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "friends": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "spouses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "partners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "divorcees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "widowees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "familyMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LeadDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "isPrimary": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "party": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoleDto"
              }
            ],
            "nullable": true
          },
          "clientStatusType": {
            "type": "string",
            "nullable": true
          },
          "teamMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "subsidiaryTeams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "subsidiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "powerOfAttorneyFor": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "wards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "employees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "trustees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "directors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "shareholders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "correspondents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "settlors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "beneficiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "jointInvestors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "teamMembersOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "parentTeams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "parentOrganisations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "powerOfAttorneys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "parents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "guardians": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "employers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "trusteesOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "directorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "shareholdersOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "correspondentsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "settlorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "beneficiariesOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "jointInvestorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "advisers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "productProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "professionals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "friends": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "spouses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "partners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "divorcees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "widowees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "familyMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DateTimeFormatDto": {
        "type": "object",
        "properties": {
          "fullDateTimePattern": {
            "type": "string",
            "nullable": true
          },
          "longDatePattern": {
            "type": "string",
            "nullable": true
          },
          "longTimePattern": {
            "type": "string",
            "nullable": true
          },
          "shortDatePattern": {
            "type": "string",
            "nullable": true
          },
          "shortTimePattern": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NumberFormatDto": {
        "type": "object",
        "properties": {
          "numberDecimalSeparator": {
            "type": "string",
            "nullable": true
          },
          "numberGroupSeparator": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocaleDto": {
        "type": "object",
        "properties": {
          "englishName": {
            "type": "string",
            "nullable": true
          },
          "nativeName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "lcid": {
            "type": "integer",
            "format": "int32"
          },
          "dateTimeFormat": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateTimeFormatDto"
              }
            ],
            "nullable": true
          },
          "numberFormat": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NumberFormatDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LookupFieldResultDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MandateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NewBusinessDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyDto"
              }
            ],
            "nullable": true
          },
          "estimatedValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "estimatedCloseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "lead": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "client": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "isUnknownClient": {
            "type": "boolean"
          },
          "origin": {
            "type": "string",
            "nullable": true
          },
          "process": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "processStage": {
            "type": "string",
            "nullable": true
          },
          "clientType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoleDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NewBusinessPartyDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "lookupType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NewBusinessPhoneNumberDto": {
        "type": "object",
        "properties": {
          "phoneType": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NewBusinessEmailDto": {
        "type": "object",
        "properties": {
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "addressType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NewBusinessAddressDto": {
        "required": [
          "city",
          "postCode",
          "street",
          "streetBuildingIdentification"
        ],
        "type": "object",
        "properties": {
          "streetBuildingIdentification": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "postOfficeBox": {
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "NewBusinessEstimatedValueDto": {
        "type": "object",
        "properties": {
          "isoCode": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "NewBusinessCreateDto": {
        "required": [
          "clientType",
          "isUnknownClient",
          "name",
          "owner",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "isUnknownClient": {
            "type": "boolean"
          },
          "estimatedCompletionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "owner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NewBusinessPartyDto"
              }
            ]
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "primaryContact": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NewBusinessPartyDto"
              }
            ],
            "nullable": true
          },
          "clientType": {
            "type": "string"
          },
          "company": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NewBusinessPartyDto"
              }
            ],
            "nullable": true
          },
          "organisationPhoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewBusinessPhoneNumberDto"
            },
            "nullable": true
          },
          "organisationEmails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewBusinessEmailDto"
            },
            "nullable": true
          },
          "organisationAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewBusinessAddressDto"
            },
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "estimatedValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NewBusinessEstimatedValueDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NewBusinessDtoQueryResultDto": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewBusinessDto"
            },
            "nullable": true
          },
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QueryPagingDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ActivityNoteDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "isPinned": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "activityType": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateActual": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationScheduled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationActual": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "process": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "regarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegardingDto"
            },
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "hasFiles": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ActivityNoteDtoQueryResultDto": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityNoteDto"
            },
            "nullable": true
          },
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QueryPagingDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ActivityNoteCreateDto": {
        "type": "object",
        "properties": {
          "subject": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateActual": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationScheduled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationActual": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "regarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegardingDto"
            },
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ObjectiveDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CurrencyValueDto": {
        "type": "object",
        "properties": {
          "isoCode": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "formattedValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PartyRoleDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "isPrimary": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "party": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoleDto"
              }
            ],
            "nullable": true
          },
          "clientStatusType": {
            "type": "string",
            "nullable": true
          },
          "teamMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "subsidiaryTeams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "subsidiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "powerOfAttorneyFor": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "wards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "employees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "trustees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "directors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "shareholders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "correspondents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "settlors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "beneficiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "jointInvestors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "teamMembersOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "parentTeams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "parentOrganisations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "powerOfAttorneys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "parents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "guardians": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "employers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "trusteesOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "directorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "shareholdersOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "correspondentsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "settlorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "beneficiariesOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "jointInvestorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "advisers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "productProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "professionals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "friends": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "spouses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "partners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "divorcees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "widowees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "familyMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganisationDto": {
        "type": "object",
        "properties": {
          "purpose": {
            "type": "string",
            "nullable": true
          },
          "establishmentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "netWealth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyValueDto"
              }
            ],
            "nullable": true
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyDto"
              }
            ],
            "nullable": true
          },
          "countryOfIncorporation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CountryDto"
              }
            ],
            "nullable": true
          },
          "registrationNumber": {
            "type": "string",
            "nullable": true
          },
          "isRegulated": {
            "type": "boolean",
            "nullable": true
          },
          "regulatorName": {
            "type": "string",
            "nullable": true
          },
          "regulatorRegistrationNumber": {
            "type": "string",
            "nullable": true
          },
          "isFinancialInstitution": {
            "type": "boolean",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "partyType": {
            "type": "string",
            "nullable": true
          },
          "defaultEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "partyRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartyRoleDto"
            },
            "nullable": true
          },
          "contactPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactPointDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganisationDtoQueryResultDto": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganisationDto"
            },
            "nullable": true
          },
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QueryPagingDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganisationCreateDto": {
        "required": [
          "purpose"
        ],
        "type": "object",
        "properties": {
          "purpose": {
            "maxLength": 100,
            "type": "string"
          },
          "establishmentDate": {
            "type": "string",
            "format": "date-time"
          },
          "roleCode": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userRoleCode": {
            "type": "string",
            "nullable": true
          },
          "countryOfIncorporation": {
            "type": "string",
            "nullable": true
          },
          "registrationNumber": {
            "type": "string",
            "nullable": true
          },
          "isRegulated": {
            "type": "boolean",
            "nullable": true
          },
          "regulatorName": {
            "type": "string",
            "nullable": true
          },
          "regulatorRegistrationNumber": {
            "type": "string",
            "nullable": true
          },
          "isFinancialInstitution": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PartyDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "partyType": {
            "type": "string",
            "nullable": true
          },
          "defaultEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "partyRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartyRoleDto"
            },
            "nullable": true
          },
          "contactPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactPointDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PartyDtoQueryResultDto": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartyDto"
            },
            "nullable": true
          },
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QueryPagingDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ActivityPhoneCallDto": {
        "type": "object",
        "properties": {
          "direction": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActivityPartyDto"
              }
            ],
            "nullable": true
          },
          "to": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "isPinned": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "activityType": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateActual": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationScheduled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationActual": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "process": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "regarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegardingDto"
            },
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "hasFiles": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ActivityPhoneCallDtoQueryResultDto": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPhoneCallDto"
            },
            "nullable": true
          },
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QueryPagingDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ActivityTimeBookingDto": {
        "type": "object",
        "properties": {
          "bookingType": {
            "type": "string",
            "nullable": true
          },
          "costs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyValueDto"
              }
            ],
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "isPinned": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "activityType": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateActual": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationScheduled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationActual": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "process": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "regarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegardingDto"
            },
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "hasFiles": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ActivityTimeBookingDtoQueryResultDto": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityTimeBookingDto"
            },
            "nullable": true
          },
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QueryPagingDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ActivityTaskDto": {
        "type": "object",
        "properties": {
          "assignee": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "assigneeTeam": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "isPinned": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "activityType": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateActual": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationScheduled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationActual": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "process": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "regarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegardingDto"
            },
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "hasFiles": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ActivityTaskDtoQueryResultDto": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityTaskDto"
            },
            "nullable": true
          },
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QueryPagingDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkItemOutcomeDto": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 10,
            "type": "string"
          },
          "name": {
            "maxLength": 100,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "WorkItemDto": {
        "type": "object",
        "properties": {
          "assignee": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "assigneeTeam": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "processTypeCode": {
            "type": "string",
            "nullable": true
          },
          "processTypeVersion": {
            "type": "integer",
            "format": "int32"
          },
          "processStageCode": {
            "type": "string",
            "nullable": true
          },
          "workItemTypeCode": {
            "type": "string",
            "nullable": true
          },
          "outcomes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkItemOutcomeDto"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "isPinned": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "activityType": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateActual": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationScheduled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationActual": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "process": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "regarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegardingDto"
            },
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "hasFiles": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WorkItemDtoQueryResultDto": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkItemDto"
            },
            "nullable": true
          },
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QueryPagingDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProcessDto": {
        "required": [
          "dateStarted",
          "subject"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "maxLength": 200,
            "type": "string"
          },
          "dateStarted": {
            "type": "string",
            "format": "date-time"
          },
          "dateCompleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateDue": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "processTypeCode": {
            "type": "string",
            "nullable": true
          },
          "processTypeVersion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "processStageCode": {
            "type": "string",
            "nullable": true
          },
          "regarding": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RegardingDto"
              }
            ],
            "nullable": true
          },
          "owner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "storage": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelationshipMapNodeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "group": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelationshipMapEdgeDto": {
        "type": "object",
        "properties": {
          "from": {
            "type": "integer",
            "format": "int32"
          },
          "to": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelationshipMapDto": {
        "type": "object",
        "properties": {
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipMapNodeDto"
            },
            "nullable": true
          },
          "edges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipMapEdgeDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PartyRoleAccessDto": {
        "type": "object",
        "properties": {
          "party": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PartyDto"
              }
            ],
            "nullable": true
          },
          "isOwner": {
            "type": "boolean"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "addedBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "addedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PartyRoleAccessCreateDto": {
        "required": [
          "partyId",
          "reason"
        ],
        "type": "object",
        "properties": {
          "partyId": {
            "type": "integer",
            "format": "int32"
          },
          "reason": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "DocumentDto": {
        "type": "object",
        "properties": {
          "documentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DocumentTypeDto"
              }
            ],
            "nullable": true
          },
          "fileIndex": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileIndexDto"
              }
            ],
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "DocumentPurposeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "documentTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentTypeDto"
            },
            "nullable": true
          },
          "numberRequired": {
            "type": "integer",
            "format": "int32"
          },
          "numberSupplied": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentDto"
            },
            "nullable": true
          },
          "pass": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DocumentGroupDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "purposes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentPurposeDto"
            },
            "nullable": true
          },
          "pass": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DocumentCheckDto": {
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentGroupDto"
            },
            "nullable": true
          },
          "pass": {
            "type": "boolean",
            "readOnly": true
          },
          "partyRole": {
            "type": "string",
            "nullable": true
          },
          "draft": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PersonDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "middleNames": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "localeName": {
            "type": "string",
            "nullable": true
          },
          "netWealth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyValueDto"
              }
            ],
            "nullable": true
          },
          "nationality": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyDto"
              }
            ],
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "partyType": {
            "type": "string",
            "nullable": true
          },
          "defaultEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "partyRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartyRoleDto"
            },
            "nullable": true
          },
          "contactPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactPointDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PersonDtoQueryResultDto": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonDto"
            },
            "nullable": true
          },
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QueryPagingDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PersonCreateDto": {
        "required": [
          "firstName",
          "lastName",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 80,
            "type": "string"
          },
          "firstName": {
            "maxLength": 80,
            "type": "string"
          },
          "middleNames": {
            "maxLength": 95,
            "type": "string",
            "nullable": true
          },
          "code": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 80,
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "genderCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "locale": {
            "type": "string",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "roleCode": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userRoleCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AmlPersonalDetailsDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "homePhone": {
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "nationalIdentifier": {
            "type": "string",
            "nullable": true
          },
          "drivingLicence": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AmlBankDetailsDto": {
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "sortCode": {
            "type": "string",
            "nullable": true
          },
          "rollNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AmlPassportDetailsDto": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "nullable": true
          },
          "expiry": {
            "type": "string",
            "format": "date-time"
          },
          "number": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AmlAddressDetailsDto": {
        "type": "object",
        "properties": {
          "flatNumber": {
            "type": "string",
            "nullable": true
          },
          "houseNumber": {
            "type": "string",
            "nullable": true
          },
          "line1": {
            "type": "string",
            "nullable": true
          },
          "line2": {
            "type": "string",
            "nullable": true
          },
          "town": {
            "type": "string",
            "nullable": true
          },
          "county": {
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "type": "string",
            "nullable": true
          },
          "timeInMonths": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AmlRequestDto": {
        "type": "object",
        "properties": {
          "personalDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AmlPersonalDetailsDto"
              }
            ],
            "nullable": true
          },
          "bankDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AmlBankDetailsDto"
              }
            ],
            "nullable": true
          },
          "passportDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AmlPassportDetailsDto"
              }
            ],
            "nullable": true
          },
          "addressDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AmlAddressDetailsDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AmlResultDto": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AmlReportDto": {
        "type": "object",
        "properties": {
          "request": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AmlRequestDto"
              }
            ],
            "nullable": true
          },
          "dateRequested": {
            "type": "string",
            "format": "date-time"
          },
          "requestedBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "results": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AmlResultDto"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PhoneAddressDto": {
        "required": [
          "phoneType"
        ],
        "type": "object",
        "properties": {
          "number": {
            "maxLength": 35,
            "type": "string",
            "nullable": true
          },
          "e164Number": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CountryDto"
              }
            ],
            "nullable": true
          },
          "phoneType": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "contactPointType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PhoneAddressDtoQueryResultDto": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneAddressDto"
            },
            "nullable": true
          },
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QueryPagingDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PhoneAddressCreateDto": {
        "type": "object",
        "properties": {
          "number": {
            "maxLength": 35,
            "type": "string",
            "nullable": true
          },
          "phoneType": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CountryDto"
              }
            ],
            "nullable": true
          },
          "partyId": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ActivityPhoneCallCreateDto": {
        "type": "object",
        "properties": {
          "from": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActivityPartyDto"
              }
            ],
            "nullable": true
          },
          "to": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "direction": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateActual": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationScheduled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationActual": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "regarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegardingDto"
            },
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PicklistDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PicklistTypeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "pickistValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PicklistDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GeographicLocationDto": {
        "type": "object",
        "properties": {
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostalAddressDto": {
        "type": "object",
        "properties": {
          "addressType": {
            "type": "string",
            "nullable": true
          },
          "streetBuildingIdentification": {
            "maxLength": 16,
            "type": "string",
            "nullable": true
          },
          "street": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "region": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "postOfficeBox": {
            "maxLength": 35,
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CountryDto"
              }
            ],
            "nullable": true
          },
          "geographicLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeographicLocationDto"
              }
            ],
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "contactPointType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostalAddressLookupDto": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "displayText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostalAddressDtoQueryResultDto": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostalAddressDto"
            },
            "nullable": true
          },
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QueryPagingDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostalAddressCreateDto": {
        "type": "object",
        "properties": {
          "addressType": {
            "type": "string",
            "nullable": true
          },
          "streetBuildingIdentification": {
            "maxLength": 16,
            "type": "string",
            "nullable": true
          },
          "street": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "region": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "postOfficeBox": {
            "maxLength": 35,
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CountryDto"
              }
            ],
            "nullable": true
          },
          "partyId": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProcessCreateDto": {
        "required": [
          "subject"
        ],
        "type": "object",
        "properties": {
          "subject": {
            "maxLength": 200,
            "type": "string"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "regarding": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RegardingDto"
              }
            ],
            "nullable": true
          },
          "dateDue": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProcessStageDto": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 100,
            "type": "string"
          },
          "name": {
            "maxLength": 256,
            "type": "string"
          },
          "advanceWithCancelledWorkItems": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProcessActionDto": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 100,
            "type": "string"
          },
          "name": {
            "maxLength": 256,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ProcessTypeDto": {
        "required": [
          "code",
          "description",
          "name",
          "version"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 10,
            "type": "string"
          },
          "name": {
            "maxLength": 100,
            "type": "string"
          },
          "description": {
            "maxLength": 1000,
            "type": "string"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "stages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessStageDto"
            },
            "nullable": true
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessActionDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkItemTypeDto": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 10,
            "type": "string"
          },
          "name": {
            "maxLength": 100,
            "type": "string"
          },
          "duration": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "cancellable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductTypeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "needType": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "provider": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "productType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductTypeDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "providerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "typeCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProspectDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "isPrimary": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "party": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoleDto"
              }
            ],
            "nullable": true
          },
          "clientStatusType": {
            "type": "string",
            "nullable": true
          },
          "teamMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "subsidiaryTeams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "subsidiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "powerOfAttorneyFor": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "wards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "employees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "trustees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "directors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "shareholders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "correspondents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "settlors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "beneficiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "jointInvestors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "teamMembersOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "parentTeams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "parentOrganisations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "powerOfAttorneys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "parents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "guardians": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "employers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "trusteesOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "directorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "shareholdersOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "correspondentsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "settlorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "beneficiariesOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "jointInvestorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "advisers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "productProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "professionals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "friends": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "spouses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "partners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "divorcees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "widowees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          },
          "familyMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelationshipUpdateDto": {
        "type": "object",
        "properties": {
          "childRelationshipId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelationshipCreateDto": {
        "required": [
          "relationshipTypeCode"
        ],
        "type": "object",
        "properties": {
          "parentPartyRoleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "childPartyRoleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentPartyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "childPartyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relationshipTypeCode": {
            "type": "string"
          },
          "childRelationshipId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RiskLevelDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoleTypeCompactDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "partyType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelationshipTypeCompactDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isHierarchical": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelationshipTypeSimpleDto": {
        "type": "object",
        "properties": {
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoleTypeCompactDto"
              }
            ],
            "nullable": true
          },
          "relationship": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelationshipTypeCompactDto"
              }
            ],
            "nullable": true
          },
          "relatedRole": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoleTypeCompactDto"
              }
            ],
            "nullable": true
          },
          "relatedRelationship": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelationshipTypeDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GlobalSearchResultDto": {
        "type": "object",
        "properties": {
          "entityType": {
            "type": "string",
            "nullable": true
          },
          "entityId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "recordDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SocialAddressDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          },
          "addressType": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "contactPointType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SocialAddressDtoQueryResultDto": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocialAddressDto"
            },
            "nullable": true
          },
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QueryPagingDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SocialAddressCreateDto": {
        "required": [
          "addressType",
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "maxLength": 1024,
            "type": "string"
          },
          "addressType": {
            "type": "string"
          },
          "partyId": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VersionDto": {
        "type": "object",
        "properties": {
          "buildDateTimeUtc": {
            "type": "string",
            "format": "date-time"
          },
          "serverName": {
            "type": "string",
            "nullable": true
          },
          "commitSha": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "environment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThemeLogoDto": {
        "type": "object",
        "properties": {
          "fileIdentifier": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "background": {
            "type": "string",
            "nullable": true
          },
          "foreground": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThemePaletteItemDto": {
        "type": "object",
        "properties": {
          "light": {
            "type": "string",
            "nullable": true
          },
          "main": {
            "type": "string",
            "nullable": true
          },
          "dark": {
            "type": "string",
            "nullable": true
          },
          "contrastText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThemeBackgroundItemDto": {
        "type": "object",
        "properties": {
          "default": {
            "type": "string",
            "nullable": true
          },
          "paper": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThemePaletteDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "primary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ThemePaletteItemDto"
              }
            ],
            "nullable": true
          },
          "secondary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ThemePaletteItemDto"
              }
            ],
            "nullable": true
          },
          "background": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ThemeBackgroundItemDto"
              }
            ],
            "nullable": true
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ThemePaletteItemDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThemeDto": {
        "type": "object",
        "properties": {
          "logo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ThemeLogoDto"
              }
            ],
            "nullable": true
          },
          "palette": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ThemePaletteDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Item": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "icon": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Group": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NavBarDto": {
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Group"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MessageDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "messageType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SystemStatusDto": {
        "type": "object",
        "properties": {
          "inMaintenanceMode": {
            "type": "boolean"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TagEntity": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "format": "int32"
      },
      "TagCategory": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "TagDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "tagEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TagEntity"
              }
            ]
          },
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TagCategory"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "TagDtoQueryResultDto": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagDto"
            },
            "nullable": true
          },
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QueryPagingDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TagCreateDto": {
        "required": [
          "category",
          "name",
          "tagEntity"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 512,
            "type": "string"
          },
          "tagEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TagEntity"
              }
            ]
          },
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TagCategory"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "TagUpdateDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 512,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ActivityTaskCreateDto": {
        "type": "object",
        "properties": {
          "assignee": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "assigneeTeam": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "subject": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateActual": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationScheduled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationActual": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "regarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegardingDto"
            },
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TeamDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "partyType": {
            "type": "string",
            "nullable": true
          },
          "defaultEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "partyRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartyRoleDto"
            },
            "nullable": true
          },
          "contactPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactPointDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TeamDtoQueryResultDto": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeamDto"
            },
            "nullable": true
          },
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QueryPagingDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TeamCreateDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "type": "string"
          },
          "code": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "roleCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ActivityTimeBookingCreateDto": {
        "required": [
          "bookingType"
        ],
        "type": "object",
        "properties": {
          "bookingType": {
            "type": "string"
          },
          "costs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyValueDto"
              }
            ],
            "nullable": true
          },
          "subject": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateActual": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationScheduled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationActual": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "regarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegardingDto"
            },
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPartyDto"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "userType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserType"
              }
            ]
          },
          "tenant": {
            "type": "string",
            "nullable": true
          },
          "defaultTeam": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "localeName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "partyType": {
            "type": "string",
            "nullable": true
          },
          "defaultEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "partyRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartyRoleDto"
            },
            "nullable": true
          },
          "contactPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactPointDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserDtoQueryResultDto": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            },
            "nullable": true
          },
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QueryPagingDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserCreateDto": {
        "required": [
          "firstName",
          "lastName",
          "locale",
          "roleCode"
        ],
        "type": "object",
        "properties": {
          "userName": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "maxLength": 80,
            "type": "string"
          },
          "lastName": {
            "maxLength": 80,
            "type": "string"
          },
          "code": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "locale": {
            "type": "string"
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "roleCode": {
            "type": "string"
          },
          "teamId": {
            "type": "integer",
            "format": "int32"
          },
          "userType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserType"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "UserPasswordChangeDto": {
        "required": [
          "newPassword",
          "oldPassword"
        ],
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "TodayDto": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "appointments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityAppointmentDto"
            },
            "nullable": true
          },
          "recents": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true
          },
          "activeProcesses": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProcessDto"
              }
            },
            "nullable": true
          },
          "outstandingWorkItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkItemDto"
            },
            "nullable": true
          },
          "birthdays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProcessSummaryDto": {
        "type": "object",
        "properties": {
          "typeCode": {
            "type": "string",
            "nullable": true
          },
          "open": {
            "type": "integer",
            "format": "int32"
          },
          "overdue": {
            "type": "integer",
            "format": "int32"
          },
          "closedInWeek": {
            "type": "integer",
            "format": "int32"
          },
          "closedInMonth": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WorkItemSummaryDto": {
        "type": "object",
        "properties": {
          "open": {
            "type": "integer",
            "format": "int32"
          },
          "dueTomorrow": {
            "type": "integer",
            "format": "int32"
          },
          "dueToday": {
            "type": "integer",
            "format": "int32"
          },
          "dueYesterday": {
            "type": "integer",
            "format": "int32"
          },
          "overdue": {
            "type": "integer",
            "format": "int32"
          },
          "closedInWeek": {
            "type": "integer",
            "format": "int32"
          },
          "closedInMonth": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "NewBusinessSummaryDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "estimatedValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "openDate": {
            "type": "string",
            "format": "date-time"
          },
          "estimatedCloseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DashboardDto": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "processSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessSummaryDto"
            },
            "nullable": true
          },
          "workItemSummary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WorkItemSummaryDto"
              }
            ],
            "nullable": true
          },
          "newBusinessSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewBusinessSummaryDto"
            },
            "nullable": true
          },
          "outstandingWorkItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkItemDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CardDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "link": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RegardingDto"
              }
            ],
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegardingDto"
            },
            "nullable": true
          },
          "assignee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ],
            "nullable": true
          },
          "dateDue": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SystemEntity": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          17,
          18,
          19,
          20,
          22,
          23,
          24,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          -3,
          -2,
          -1
        ],
        "type": "integer",
        "format": "int32"
      },
      "AuditAction": {
        "enum": [
          0,
          1,
          2,
          3,
          10,
          11,
          12
        ],
        "type": "integer",
        "format": "int32"
      },
      "WebHookDto": {
        "required": [
          "action",
          "entityType",
          "name",
          "party",
          "secret",
          "url"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "entityType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemEntity"
              }
            ]
          },
          "action": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AuditAction"
              }
            ]
          },
          "party": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDto"
              }
            ]
          },
          "url": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "WebHookDtoQueryResultDto": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebHookDto"
            },
            "nullable": true
          },
          "paging": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QueryPagingDto"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebHookCreateDto": {
        "required": [
          "action",
          "entityType",
          "name",
          "partyId",
          "secret",
          "url"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "entityType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemEntity"
              }
            ]
          },
          "action": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AuditAction"
              }
            ]
          },
          "partyId": {
            "type": "integer",
            "format": "int32"
          },
          "url": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Operation": {
        "type": "object",
        "properties": {
          "value": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebHookUpdateDto": {
        "required": [
          "name",
          "secret",
          "url"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      },
      "ApiKey": {
        "type": "apiKey",
        "description": "API Key. Example: \"x-portemis-api-key: {token}\"",
        "name": "x-portemis-api-key",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "JWT": [],
      "ApiKey": []
    }
  ],
  "servers": []
}