{
  "openapi": "3.0.1",
  "info": {
    "title": "Portemis API",
    "description": "This documentation is still under construction",
    "version": "1.0"
  },
  "paths": {
    "/api/v{version}/account/{id}": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get a single account",
        "operationId": "Account-GetSingleAccount-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Account ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Account ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Account"
        ],
        "summary": "Update an account.",
        "operationId": "Account-UpdateAccount-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "Delete an account.",
        "operationId": "Account-DeleteAccount-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/account": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Add an account.",
        "operationId": "Account-AddAccount-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/accountgroup/{id}": {
      "get": {
        "tags": [
          "Account Group"
        ],
        "summary": "Get a single account group.",
        "operationId": "AccountGroup-GetSingleAccountGroup-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Account Group ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Account Group ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroup"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Account Group"
        ],
        "summary": "Update an account group.",
        "operationId": "AccountGroup-UpdateAccountGroup-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroup"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroup"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroup"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Account Group"
        ],
        "summary": "Delete an account group.",
        "operationId": "AccountGroup-DeleteAccountGroup-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/accountgroup/{id}/accounts": {
      "get": {
        "tags": [
          "Account Group"
        ],
        "summary": "Get all accounts for an account group.",
        "operationId": "AccountGroup-GetAllAccountsInAccountGroup-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/accountgroup": {
      "post": {
        "tags": [
          "Account Group"
        ],
        "summary": "Add an account group.",
        "operationId": "AccountGroup-AddAccountGroup-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroup"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroup"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroup"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroup"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/activity": {
      "get": {
        "tags": [
          "Activity"
        ],
        "summary": "Get all activities",
        "operationId": "Activity-GetAllActivities-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity-QueryResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Activity"
        ],
        "summary": "Delete mulitple activities",
        "operationId": "Activity-DeleteMultipleActivities-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Activity IDs",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Activity IDs",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Activity IDs",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Activity IDs",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Activity IDs",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/activity/{id}": {
      "get": {
        "tags": [
          "Activity"
        ],
        "summary": "Get a single activity",
        "operationId": "Activity-GetSingleActivity-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Activity ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Activity"
        ],
        "summary": "Delete an activity",
        "operationId": "Activity-DeleteActivity-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Activity ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/activity/{id}/file": {
      "get": {
        "tags": [
          "Activity"
        ],
        "summary": "Get all files for an activity",
        "operationId": "Activity-GetActivityFiles-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Activity ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActivityFile"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/activity/{id}/textanalysis": {
      "get": {
        "tags": [
          "Activity"
        ],
        "summary": "Get text analysis for activity",
        "operationId": "Activity-GetTextAnalysis-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Activity ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActivityFile"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/activity/{id}/history": {
      "get": {
        "tags": [
          "Activity"
        ],
        "summary": "Get a single activity's history",
        "operationId": "Activity-GetSingleActivityHistory-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Activity ID",
              "format": "int32"
            }
          },
          {
            "name": "includeProcessHistory",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "description": "",
              "default": false
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityHistory"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/activity/{id}/comment": {
      "post": {
        "tags": [
          "Activity"
        ],
        "summary": "Write to a single activity's history",
        "operationId": "Activity-WriteActivityComment-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Activity ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "ActivityCommentCreateDto",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityCommentCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityCommentCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityCommentCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityCommentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityHistory"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/activity/{id}/status/{status}": {
      "post": {
        "tags": [
          "Activity"
        ],
        "summary": "Set the status of an activity",
        "operationId": "Activity-SetStatusActivity-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Activity ID",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "in": "path",
            "description": "Status",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ActivityStatusType"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/activity/{id}/pin": {
      "patch": {
        "tags": [
          "Activity"
        ],
        "summary": "Pin an activity",
        "operationId": "Activity-Pin-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Activity ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/activity/{id}/unpin": {
      "patch": {
        "tags": [
          "Activity"
        ],
        "summary": "Un-pin an activity",
        "operationId": "Activity-Unpin-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Activity ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/appointment/{id}": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "summary": "Get a single appointment",
        "operationId": "Appointment-GetSingleAppointment-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Appointment Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Appointment Id",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityAppointment"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Appointment"
        ],
        "summary": "Update an appointment",
        "operationId": "Appointment-UpdateAppointment-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the record",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The ID of the record",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Appointment to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityAppointment"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityAppointment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityAppointment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityAppointment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityAppointment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/appointment": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "summary": "Get all appointments",
        "operationId": "Appointment-GetAllAppointments-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityAppointment-QueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Add an appointment",
        "operationId": "Appointment-AddAppointment-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Appointment to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityAppointmentCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityAppointmentCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityAppointmentCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityAppointmentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityAppointment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/audit/{recordType}/{id}": {
      "get": {
        "tags": [
          "Audit"
        ],
        "summary": "Get audit for a record",
        "operationId": "Audit-GetRecordAudit-v1",
        "parameters": [
          {
            "name": "recordType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditEvent"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/calendar/{year}/{month}": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "summary": "Get a calendar page for the current user.",
        "operationId": "Calendar-GetCalendarEvents-v1",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "month",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Activity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/calendar/{year}": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "summary": "Get the calendar definition for the current user.",
        "operationId": "Calendar-GetCalendarDefinition-v1",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/category": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Get a list of all categories",
        "operationId": "Category-GetAllCategories-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/client/{id}": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Get a single client",
        "operationId": "Client-GetSingleClient-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Clients ID (partyrole)",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Clients ID (partyrole)",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Client"
        ],
        "summary": "Update a single client",
        "operationId": "Client-UpdateClient-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Clients ID (partyrole)",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Clients ID (partyrole)",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/client": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Get all clients",
        "operationId": "Client-GetAllClients-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Client"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/client/favourite": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Get favourite clients",
        "operationId": "Client-GetFavouriteClients-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Client"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/client/recent": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Get recent clients",
        "operationId": "Client-GetRecentClients-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Client"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/client/multiple": {
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Get many clients",
        "operationId": "Client-GetMultipleClients-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Client IDs",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Client IDs",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Client IDs",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Client IDs",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Client IDs",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Client"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/complaint/{id}": {
      "get": {
        "tags": [
          "Complaint"
        ],
        "summary": "Get a single complaint record",
        "operationId": "Complaint-GetSingleComplaint-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Complaint ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Complaint ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Complaint"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Complaint"
        ],
        "summary": "Update an existing complaint",
        "operationId": "Complaint-UpdateComplaint-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Complaint"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Complaint"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Complaint"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Complaint"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Complaint"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Complaint"
        ],
        "summary": "Delete a complaint",
        "operationId": "Complaint-DeleteComplaint-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/complaint": {
      "get": {
        "tags": [
          "Complaint"
        ],
        "summary": "Get all complaint records",
        "operationId": "Complaint-GetAllComplaints-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Complaint-QueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Complaint"
        ],
        "summary": "Create a new complaint",
        "operationId": "Complaint-AddComplaint-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ComplaintCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplaintCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplaintCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ComplaintCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Complaint"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/contactpoint/lookup": {
      "get": {
        "tags": [
          "Contact Point"
        ],
        "summary": "Search contact points",
        "operationId": "ContactPoint-Lookup-v1",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ContactPointType"
            }
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LookupResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/contactpoint": {
      "get": {
        "tags": [
          "Contact Point"
        ],
        "summary": "Get all contact points",
        "operationId": "ContactPoint-GetAllContactPoints-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactPoint-QueryResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contact Point"
        ],
        "summary": "Delete contact points",
        "operationId": "ContactPoint-DeleteMultipleContactPoints-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Contact Point Ids",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Contact Point Ids",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Contact Point Ids",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Contact Point Ids",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Contact Point Ids",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/contactpoint/{id}": {
      "get": {
        "tags": [
          "Contact Point"
        ],
        "summary": "Get a single contact point",
        "operationId": "ContactPoint-GetSingleContactPoint-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Contact point Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Contact point Id",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactPoint"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contact Point"
        ],
        "summary": "Delete a contact point",
        "operationId": "ContactPoint-DeleteContactPoint-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Contact point Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Contact point Id",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/contactpoint/{id}/status/{status}": {
      "post": {
        "tags": [
          "Contact Point"
        ],
        "summary": "Set the state of a contact point",
        "operationId": "ContactPoint-SetStatusContactPoint-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Contact Point Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Contact Point Id",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "in": "path",
            "description": "Status",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/StatusType"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactPoint"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/country": {
      "get": {
        "tags": [
          "Country"
        ],
        "summary": "Get all countries",
        "operationId": "Country-GetAllCountries-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/country/{code}": {
      "get": {
        "tags": [
          "Country"
        ],
        "summary": "Get a single country",
        "operationId": "Country-GetSingleCountry-v1",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Country Code",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Country Code",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/currency": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Get all currencies",
        "operationId": "Currency-GetAllCurrencies-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Currency"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/currency/{code}": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Get a single currency",
        "operationId": "Currency-GetSingleCurrency-v1",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Currency Code",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Currency Code",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/dashboard": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get all Dashboards enabled for the users tenant",
        "operationId": "Dashboard-GetDashboards-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DashboardDefintion"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/dashboard/{key}/{id}": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get dashoard data",
        "operationId": "Dashboard-GetDashboardData-v1",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "The dashboard key",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The dashboard key",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Entity ID if applicable",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Entity ID if applicable",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "forceRefresh",
            "in": "query",
            "description": "Force live refresh of data",
            "schema": {
              "type": "boolean",
              "description": "Force live refresh of data",
              "default": false
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardData"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get dashoard data",
        "operationId": "Dashboard-GetDashboardData-v1",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "The dashboard key",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The dashboard key",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Entity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Entity ID",
              "format": "int32"
            }
          },
          {
            "name": "forceRefresh",
            "in": "query",
            "description": "Force live refresh of data",
            "schema": {
              "type": "boolean",
              "description": "Force live refresh of data",
              "default": false
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Which dashboard items are requested",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Which dashboard items are requested",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Which dashboard items are requested",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Which dashboard items are requested",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Which dashboard items are requested",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardData"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/electronicaddress/{id}": {
      "get": {
        "tags": [
          "Electronic Address"
        ],
        "summary": "Get a single electronic address",
        "operationId": "ElectronicAddress-GetSingleElectronicAddress-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Electronic address Id (if an ID will try find by id, else will try find by email address)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Electronic address Id (if an ID will try find by id, else will try find by email address)",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElectronicAddress"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Electronic Address"
        ],
        "summary": "Update an electronic address.",
        "operationId": "ElectronicAddress-UpdateElectronicAddress-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ElectronicAddress"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ElectronicAddress"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ElectronicAddress"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ElectronicAddress"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElectronicAddress"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/electronicaddress": {
      "get": {
        "tags": [
          "Electronic Address"
        ],
        "summary": "Get all electronic addresses",
        "operationId": "ElectronicAddress-GetAllElectronicAddresses-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElectronicAddress-QueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Electronic Address"
        ],
        "summary": "Add an electronic address",
        "operationId": "ElectronicAddress-AddElectronicAddress-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Electronic Address to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ElectronicAddressCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ElectronicAddressCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ElectronicAddressCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ElectronicAddressCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElectronicAddress"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/email/{id}": {
      "get": {
        "tags": [
          "Email"
        ],
        "summary": "Get a single email",
        "operationId": "Email-GetSingleEmail-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Email Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Email Id",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityEmail"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Email"
        ],
        "summary": "Update an email",
        "operationId": "Email-UpdateEmail-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the record",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The ID of the record",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Email to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityEmail"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityEmail"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityEmail"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityEmail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityEmail"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/email": {
      "get": {
        "tags": [
          "Email"
        ],
        "summary": "Get all emails",
        "operationId": "Email-GetAllEmails-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityEmail-QueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Add an email",
        "operationId": "Email-AddEmail-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Email to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityEmailCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityEmailCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityEmailCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityEmailCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityEmail"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/email/incoming": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Endpoint to revieve an email from incoming email provider",
        "operationId": "Email-ReceiveExternalEmail-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/feestructure/{id}": {
      "get": {
        "tags": [
          "Fee Structure"
        ],
        "summary": "Get a single Fee Structure",
        "operationId": "FeeStructure-GetSingleFeeStructure-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "FeeStructure ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "FeeStructure ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeeStructure"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Fee Structure"
        ],
        "summary": "Update a Fee Structure",
        "operationId": "FeeStructure-UpdateFeeStructure-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FeeStructure"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeeStructure"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FeeStructure"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FeeStructure"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeeStructure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Fee Structure"
        ],
        "summary": "Delete a Fee Structure",
        "operationId": "FeeStructure-DeleteFeeStructure-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/feestructure": {
      "get": {
        "tags": [
          "Fee Structure"
        ],
        "summary": "Get all Fee Structures",
        "operationId": "FeeStructure-GetAllFeeStructures-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeeStructure-QueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Fee Structure"
        ],
        "summary": "Add a new Fee Structure",
        "operationId": "FeeStructure-AddFeeStructure-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FeeStructure"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeeStructure"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FeeStructure"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FeeStructure"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeeStructure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/file/{fileIndex}": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "Get/download a file",
        "operationId": "File-GetFile-v1",
        "parameters": [
          {
            "name": "fileIndex",
            "in": "path",
            "description": "The file index",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The file index",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/file": {
      "post": {
        "tags": [
          "File"
        ],
        "summary": "Uploads a file",
        "operationId": "File-UploadFile-v1",
        "parameters": [
          {
            "name": "testing",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "description": "",
              "default": false
            }
          },
          {
            "name": "testFileType",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileIndex"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/formdata/{formName}/{id}": {
      "get": {
        "tags": [
          "Form Data"
        ],
        "summary": "Get form data",
        "operationId": "FormData-GetFormData-v1",
        "parameters": [
          {
            "name": "formName",
            "in": "path",
            "description": "The form name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The form name",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Entity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Entity ID",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status - If not supplied, assumes draft",
            "schema": {
              "type": "string",
              "description": "Status - If not supplied, assumes draft",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormDataInstance"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Form Data"
        ],
        "summary": "Post form data",
        "operationId": "FormData-SubmitFormData-v1",
        "parameters": [
          {
            "name": "formName",
            "in": "path",
            "description": "The form name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The form name",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Entity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Entity ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormDataInstance"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Form Data"
        ],
        "summary": "Post form data",
        "operationId": "FormData-PublishFormData-v1",
        "parameters": [
          {
            "name": "formName",
            "in": "path",
            "description": "The form name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The form name",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Entity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Entity ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/formdata/{formName}/{id}/history": {
      "get": {
        "tags": [
          "Form Data"
        ],
        "summary": "Get submission history for a form",
        "operationId": "FormData-GetHistory-v1",
        "parameters": [
          {
            "name": "formName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FormDataHistory"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/formdata/clientfile/{partyId}/role/{partyRoleId}": {
      "get": {
        "tags": [
          "Form Data"
        ],
        "summary": "Get the draft client file",
        "operationId": "FormData-GetClientFile-v1",
        "parameters": [
          {
            "name": "partyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "partyRoleId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientMaster"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/formdata/{formName}/{id}/calculate": {
      "post": {
        "tags": [
          "Form Data"
        ],
        "summary": "Performs re-calculations on form data.",
        "operationId": "FormData-RecalcFormData-v1",
        "parameters": [
          {
            "name": "formName",
            "in": "path",
            "description": "The form name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The form name",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/formdefinition/{code}": {
      "get": {
        "tags": [
          "Form Definition"
        ],
        "summary": "Get a Latest Form Definition and its schema",
        "operationId": "FormDefinition-GetLatestFormDefinition-v1",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Form Definition name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Form Definition name",
              "nullable": true
            }
          },
          {
            "name": "includeSystemProperties",
            "in": "query",
            "description": "Include system properties in schema",
            "schema": {
              "type": "boolean",
              "description": "Include system properties in schema",
              "default": false
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormDefinitionWithSchema"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/formdefinition/{code}/version/{formVersion}": {
      "get": {
        "tags": [
          "Form Definition"
        ],
        "summary": "Get specific version of a Form Definition and its schema",
        "operationId": "FormDefinition-GetFormDefinitionByVersion-v1",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Form Definition name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Form Definition name",
              "nullable": true
            }
          },
          {
            "name": "formVersion",
            "in": "path",
            "description": "Form Definition version",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Form Definition version",
              "format": "int32"
            }
          },
          {
            "name": "includeSystemProperties",
            "in": "query",
            "description": "Include system properties in schema",
            "schema": {
              "type": "boolean",
              "description": "Include system properties in schema",
              "default": false
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormDefinitionWithSchema"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/formdefinition": {
      "get": {
        "tags": [
          "Form Definition"
        ],
        "summary": "Get all Form Definitions",
        "operationId": "FormDefinition-GetAllFormDefinitions-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FormDefinition"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/formdefinition/validate": {
      "get": {
        "tags": [
          "Form Definition"
        ],
        "summary": "Get all Form Definitions",
        "operationId": "FormDefinition-ValidateFormSchemas-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/graphql": {
      "post": {
        "tags": [
          "Graph QL"
        ],
        "summary": "Execute a GraphQL query\r\n///",
        "operationId": "GraphQL-PostAsync-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GraphQLQuery"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphQLQuery"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphQLQuery"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GraphQLQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/intermediary/{id}": {
      "get": {
        "tags": [
          "Intermediary"
        ],
        "summary": "Get a single intermediary",
        "operationId": "Intermediary-GetSingleIntermediary-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Intermediaries ID (partyrole)",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Intermediaries ID (partyrole)",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Intermediary"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Intermediary"
        ],
        "summary": "Update a single intermediary",
        "operationId": "Intermediary-UpdateIntermediary-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Intermediaries ID (partyrole)",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Intermediaries ID (partyrole)",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Intermediary"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Intermediary"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Intermediary"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Intermediary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Intermediary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/intermediary": {
      "get": {
        "tags": [
          "Intermediary"
        ],
        "summary": "Get all intermediaries",
        "operationId": "Intermediary-GetAllIntermediaries-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Intermediary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/intermediary/favourite": {
      "get": {
        "tags": [
          "Intermediary"
        ],
        "summary": "Get favourite intermediaries",
        "operationId": "Intermediary-GetFavouriteIntermediaries-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Intermediary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/intermediary/recent": {
      "get": {
        "tags": [
          "Intermediary"
        ],
        "summary": "Get recent intermediaries",
        "operationId": "Intermediary-GetRecentIntermediaries-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Intermediary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/lead/{id}": {
      "get": {
        "tags": [
          "Lead"
        ],
        "summary": "Get a single lead",
        "operationId": "Lead-GetSingleLead-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Lead ID (partyrole)",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Lead ID (partyrole)",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Lead"
        ],
        "summary": "Update a single lead",
        "operationId": "Lead-UpdateLead-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Lead ID (partyrole)",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Lead ID (partyrole)",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Lead"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Lead"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Lead"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Lead"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/lead": {
      "get": {
        "tags": [
          "Lead"
        ],
        "summary": "Get all leads",
        "operationId": "Lead-GetAllLeads-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lead"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/lead/favourite": {
      "get": {
        "tags": [
          "Lead"
        ],
        "summary": "Get favourite leads",
        "operationId": "Lead-GetFavouriteLeads-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lead"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/lead/recent": {
      "get": {
        "tags": [
          "Lead"
        ],
        "summary": "Get recent leads",
        "operationId": "Lead-GetRecentLeads-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lead"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/lead/multiple": {
      "post": {
        "tags": [
          "Lead"
        ],
        "summary": "Get many leads",
        "operationId": "Lead-GetMultipleLeads-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Lead IDs",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Lead IDs",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Lead IDs",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Lead IDs",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Lead IDs",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lead"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/locale": {
      "get": {
        "tags": [
          "Locale"
        ],
        "summary": "Get all locales",
        "operationId": "Locale-GetAllLocales-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Locale"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/locale/{code}": {
      "get": {
        "tags": [
          "Locale"
        ],
        "summary": "Get a single locale",
        "operationId": "Locale-GetSingleLocale-v1",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Locale Code",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Locale Code",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Locale"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/lookup/{source}": {
      "get": {
        "tags": [
          "Lookup"
        ],
        "summary": "Get a single locale",
        "operationId": "Lookup-PerformLookup-v1",
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "description": "The lookup source",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The lookup source",
              "nullable": true
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "The search text",
            "schema": {
              "type": "string",
              "description": "The search text",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LookupFieldResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/mandate/{id}": {
      "get": {
        "tags": [
          "Mandate"
        ],
        "summary": "Get a single mandate",
        "operationId": "Mandate-GetSingleMandate-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Mandate ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Mandate ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Mandate"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Mandate"
        ],
        "summary": "Update a Mandate",
        "operationId": "Mandate-UpdateMandate-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Mandate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Mandate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Mandate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Mandate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Mandate"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Mandate"
        ],
        "summary": "Delete a Mandate",
        "operationId": "Mandate-DeleteMandate-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/mandate": {
      "get": {
        "tags": [
          "Mandate"
        ],
        "summary": "Get all mandates",
        "operationId": "Mandate-GetAllMandates-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Mandate"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Mandate"
        ],
        "summary": "Add a new Mandate",
        "operationId": "Mandate-AddMandate-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Mandate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Mandate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Mandate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Mandate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Mandate"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/newbusiness/{id}": {
      "get": {
        "tags": [
          "New Business"
        ],
        "summary": "Get a single new business record",
        "operationId": "NewBusiness-GetSingleNewBusiness-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "NewBusiness ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "NewBusiness ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewBusiness"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "New Business"
        ],
        "summary": "Update a New Business record",
        "operationId": "NewBusiness-UpdateNewBusiness-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NewBusinessCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBusinessCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBusinessCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewBusinessCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewBusiness"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "New Business"
        ],
        "summary": "Delete a New Business record",
        "operationId": "NewBusiness-DeleteNewBusiness-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewBusiness"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/newbusiness": {
      "get": {
        "tags": [
          "New Business"
        ],
        "summary": "Get all new business records",
        "operationId": "NewBusiness-GetAllNewBusiness-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewBusiness-QueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "New Business"
        ],
        "summary": "Add a New Busines record",
        "operationId": "NewBusiness-AddNewBusiness-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NewBusinessCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBusinessCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBusinessCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewBusinessCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewBusiness"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/note/{id}": {
      "get": {
        "tags": [
          "Note"
        ],
        "summary": "Get a single note",
        "operationId": "Note-GetSingleNote-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Note Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Note Id",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityNote"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Note"
        ],
        "summary": "Update a note",
        "operationId": "Note-UpdateNote-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the record",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The ID of the record",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Note to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityNote"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityNote"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityNote"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityNote"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityNote"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/note": {
      "get": {
        "tags": [
          "Note"
        ],
        "summary": "Get all notes",
        "operationId": "Note-GetAllNotes-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityNote-QueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Note"
        ],
        "summary": "Add a note",
        "operationId": "Note-AddNote-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Note to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityNoteCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityNoteCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityNoteCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityNoteCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityNote"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/objective/{id}": {
      "get": {
        "tags": [
          "Objective"
        ],
        "summary": "Get a single objective",
        "operationId": "Objective-GetSingleObjective-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Objective ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Objective ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Objective"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Objective"
        ],
        "summary": "Update an Objective",
        "operationId": "Objective-UpdateObjective-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Objective"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Objective"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Objective"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Objective"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Objective"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Objective"
        ],
        "summary": "Delete an Object",
        "operationId": "Objective-DeleteObjective-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/objective": {
      "get": {
        "tags": [
          "Objective"
        ],
        "summary": "Get all objectives",
        "operationId": "Objective-GetAllObjectives-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Objective"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Objective"
        ],
        "summary": "Add an Objective",
        "operationId": "Objective-AddObjective-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Objective"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Objective"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Objective"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Objective"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Objective"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/organisation/{id}": {
      "get": {
        "tags": [
          "Organisation"
        ],
        "summary": "Get a single Organisation",
        "operationId": "Organisation-GetSingleOrganisation-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Organisation ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Organisation ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/organisation": {
      "get": {
        "tags": [
          "Organisation"
        ],
        "summary": "Serach organisations",
        "operationId": "Organisation-SearchOrganisations-v1",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation-QueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Organisation"
        ],
        "summary": "Add an organisation",
        "operationId": "Organisation-AddOrganisation-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Organisation to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Party"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/organisation/recent": {
      "get": {
        "tags": [
          "Organisation"
        ],
        "summary": "Get Recent Organisations",
        "operationId": "Organisation-GetRecentOrganisations-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organisation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/organisation/favourite": {
      "get": {
        "tags": [
          "Organisation"
        ],
        "summary": "Get Favourite Organisations",
        "operationId": "Organisation-GetFavouriteOrganisations-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organisation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/party/{id}/avatar": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Get a single party avatar",
        "operationId": "Party-GetSinglePartyAvatar-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "User ID",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32",
              "default": 128
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Party"
        ],
        "summary": "Set single party avatar",
        "operationId": "Party-SetSinglePartyAvatar-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "testing",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Party"
        ],
        "summary": "Delete single party avatar",
        "operationId": "Party-DeleteSinglePartyAvatar-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/party/{id}": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Get a single party",
        "operationId": "Party-GetSingleParty-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Party ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Party ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Party"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Party"
        ],
        "summary": "Delete a party",
        "operationId": "Party-DeleteParty-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Party ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Party ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/party": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Search parties",
        "operationId": "Party-SearchParties-v1",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Party-QueryResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Party"
        ],
        "summary": "Delete parties",
        "operationId": "Party-DeleteMultipleParties-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Party IDs",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Party IDs",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Party IDs",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Party IDs",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Party IDs",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/party/{id}/role": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Get all roles for a party",
        "operationId": "Party-GetPartyRolesForParty-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Party"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/party/{id}/contactpoint": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Get all contact points for a party",
        "operationId": "Party-GetContactPointsForParty-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactPoint"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/party/{id}/activities": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Get all activities for a party",
        "operationId": "Party-GetActivities-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity-QueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/party/{id}/note": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Get all notes for a party",
        "operationId": "Party-GetNotes-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityNote-QueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/party/{id}/phonecall": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Get all phone calls for a party",
        "operationId": "Party-GetPhoneCalls-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityPhoneCall-QueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/party/{id}/email": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Get all emails for a party",
        "operationId": "Party-GetEmails-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityEmail-QueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/party/{id}/appointment": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Get all appointments for a party",
        "operationId": "Party-GetAppointments-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityAppointment-QueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/party/{id}/timebooking": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Get all time bookings for a party",
        "operationId": "Party-GetTimeBookings-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityTimeBooking-QueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/party/{id}/task": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Get all tasks for a party",
        "operationId": "Party-GetTasks-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityTask-QueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/party/{id}/workitem": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Get all work items for a party",
        "operationId": "Party-GetWorkItems-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItem-QueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/party/{id}/access": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Get Party Role Access records for a party",
        "operationId": "Party-GetPartyRoleAccess-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Party"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/party/{id}/status/{status}": {
      "post": {
        "tags": [
          "Party"
        ],
        "summary": "Set the state a party",
        "operationId": "Party-SetStatusParty-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Party ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Party ID",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "in": "path",
            "description": "Status",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/StatusType"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Party"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/party/{id}/role/{rolecode}": {
      "post": {
        "tags": [
          "Party"
        ],
        "summary": "Add a role to a party (to create a party role)",
        "operationId": "Party-AddRoleToParty-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Party ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Party ID",
              "format": "int32"
            }
          },
          {
            "name": "rolecode",
            "in": "path",
            "description": "Role ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Role ID",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartyRole"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}": {
      "get": {
        "tags": [
          "Party Role"
        ],
        "summary": "Get a single partyrole",
        "operationId": "PartyRole-GetSinglePartyRole-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "PartyRole ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "PartyRole ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartyRole"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Party Role"
        ],
        "summary": "Delete a single party role",
        "operationId": "PartyRole-DeletePartyRole-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Party Role ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Party Role ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/form/{category}": {
      "get": {
        "tags": [
          "Party Role"
        ],
        "summary": "Get the form defintion for a party role + category",
        "operationId": "PartyRole-GetPartyRoleFormDefintion-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "PartyRole ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "PartyRole ID",
              "format": "int32"
            }
          },
          {
            "name": "category",
            "in": "path",
            "description": "Form Category",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Form Category",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormDefinitionWithSchema"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/accounts": {
      "get": {
        "tags": [
          "Party Role"
        ],
        "summary": "Get all accounts for a party role.",
        "operationId": "PartyRole-GetAllAccountsForPartyRole-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/processes": {
      "get": {
        "tags": [
          "Party Role"
        ],
        "summary": "Get all processes on the specified party role.",
        "operationId": "PartyRole-GetProcessesForPartyRole-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Party Role ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Party Role ID",
              "format": "int32"
            }
          },
          {
            "name": "loadRegardingObject",
            "in": "query",
            "description": "Load the full regarding object",
            "schema": {
              "type": "boolean",
              "description": "Load the full regarding object",
              "default": false
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Process"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/activities": {
      "get": {
        "tags": [
          "Party Role"
        ],
        "summary": "Get all activities for a party role",
        "operationId": "PartyRole-GetActivitiesForPartyRole-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity-QueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/note": {
      "get": {
        "tags": [
          "Party Role"
        ],
        "summary": "Get all notes for a party role",
        "operationId": "PartyRole-GetNotesForPartyRole-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityNote-QueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/phonecall": {
      "get": {
        "tags": [
          "Party Role"
        ],
        "summary": "Get all phone calls for a party role",
        "operationId": "PartyRole-GetPhoneCallsForPartyRole-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityPhoneCall-QueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/email": {
      "get": {
        "tags": [
          "Party Role"
        ],
        "summary": "Get all emails for a party role",
        "operationId": "PartyRole-GetEmailsForPartyRole-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityEmail-QueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/appointment": {
      "get": {
        "tags": [
          "Party Role"
        ],
        "summary": "Get all appointments for a party role",
        "operationId": "PartyRole-GetAppointmentsForPartyRole-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityAppointment-QueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/timebooking": {
      "get": {
        "tags": [
          "Party Role"
        ],
        "summary": "Get all time bookings for a party role",
        "operationId": "PartyRole-GetTimeBookingsForPartyRole-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityTimeBooking-QueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/task": {
      "get": {
        "tags": [
          "Party Role"
        ],
        "summary": "Get all tasks for a party role",
        "operationId": "PartyRole-GetTasksForPartyRole-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityTask-QueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/workitem": {
      "get": {
        "tags": [
          "Party Role"
        ],
        "summary": "Get all work items for a party role",
        "operationId": "PartyRole-GetWorkItemsForPartyRole-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItem-QueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/relationshiptypes": {
      "get": {
        "tags": [
          "Party Role"
        ],
        "summary": "Get all applicable relationship types for a party role",
        "operationId": "PartyRole-GetAvailableRelationshipTypesForPartyRole-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/relationshipmap": {
      "get": {
        "tags": [
          "Party Role"
        ],
        "summary": "Get relationship map",
        "operationId": "PartyRole-GetPartyRoleRelationshipMap-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipMap"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/access": {
      "get": {
        "tags": [
          "Party Role"
        ],
        "summary": "Get Party Role Access records for a party role",
        "operationId": "PartyRole-GetPartyRoleAccess-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartyRoleAccess"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Party Role"
        ],
        "summary": "Add Party Role Access records for a party role",
        "operationId": "PartyRole-AddPartyRoleAccess-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Party Role Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Party Role Id",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The access to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PartyRoleAccessCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartyRoleAccessCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PartyRoleAccessCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PartyRoleAccessCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Party Role"
        ],
        "summary": "Delete Party Role Access records for a party role",
        "operationId": "PartyRole-DeletePartyRoleAccess-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Party Role Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Party Role Id",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Array of Party IDs",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Array of Party IDs",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Array of Party IDs",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Array of Party IDs",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Array of Party IDs",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/document": {
      "get": {
        "tags": [
          "Party Role"
        ],
        "summary": "Get Client Documents",
        "operationId": "PartyRole-GetClientDocuments-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Document"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/documents/checklist": {
      "get": {
        "tags": [
          "Party Role"
        ],
        "summary": "Get all Mandatory Documents",
        "operationId": "PartyRole-GetMandatoryDocuments-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "draft",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentCheck"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/partyrole/{id}/status/{status}": {
      "post": {
        "tags": [
          "Party Role"
        ],
        "summary": "Set the state of a party role",
        "operationId": "PartyRole-SetStatusPartyRole-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Party Role ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Party Role ID",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "in": "path",
            "description": "Status",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/StatusType"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/person/{id}": {
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Get a single person",
        "operationId": "Person-GetSinglePerson-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Person ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Person ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/person": {
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Serach people",
        "operationId": "Person-SearchPeople-v1",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person-QueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Person"
        ],
        "summary": "Add a person",
        "operationId": "Person-AddPerson-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Person to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PersonCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PersonCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Party"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/person/recent": {
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Get Recent People",
        "operationId": "Person-GetRecentPeople-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/person/favourite": {
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Get Recent People",
        "operationId": "Person-GetFavouritePeople-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/person/{id}/aml": {
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Get a single person's AML",
        "operationId": "Person-GetSinglePersonAml-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Person ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Person ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmlReport"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Person"
        ],
        "summary": "Calculate single person's AML",
        "operationId": "Person-UpdateSinglePersonAml-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Person ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Person ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmlReport"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/person/{id}/aml/request": {
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Get single person's AML request",
        "operationId": "Person-GetSinglePersonAmlRequest-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Person ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Person ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmlReport"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/phoneaddress/{id}": {
      "get": {
        "tags": [
          "Phone Address"
        ],
        "summary": "Get a single phone address",
        "operationId": "PhoneAddress-GetSinglePhoneAddress-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Phone address Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Phone address Id",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneAddress"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Phone Address"
        ],
        "summary": "Update a phone address.",
        "operationId": "PhoneAddress-UpdatePhoneAddress-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneAddress"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneAddress"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneAddress"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneAddress"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneAddress"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/phoneaddress": {
      "get": {
        "tags": [
          "Phone Address"
        ],
        "summary": "Get all phone addresses",
        "operationId": "PhoneAddress-GetAllPhoneAddresses-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneAddress-QueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Phone Address"
        ],
        "summary": "Add a phone number",
        "operationId": "PhoneAddress-AddPhoneAddress-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Phone Address to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneAddressCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneAddressCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneAddressCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneAddressCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneAddress"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/phonecall/{id}": {
      "get": {
        "tags": [
          "Phone Call"
        ],
        "summary": "Get a single phone call",
        "operationId": "PhoneCall-GetSinglePhoneCall-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Phone address Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Phone address Id",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityPhoneCall"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Phone Call"
        ],
        "summary": "Update a phone call",
        "operationId": "PhoneCall-UpdatePhoneCall-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the record",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The ID of the record",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Phone Call to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityPhoneCall"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityPhoneCall"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityPhoneCall"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityPhoneCall"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityPhoneCall"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/phonecall": {
      "get": {
        "tags": [
          "Phone Call"
        ],
        "summary": "Get all phone calls",
        "operationId": "PhoneCall-GetAllPhoneCalls-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityPhoneCall-QueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Phone Call"
        ],
        "summary": "Add a phone call",
        "operationId": "PhoneCall-AddPhoneCall-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Phone Call to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityPhoneCallCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityPhoneCallCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityPhoneCallCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityPhoneCallCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityPhoneCall"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/picklist/{name}": {
      "get": {
        "tags": [
          "Picklist"
        ],
        "summary": "Get a single picklist",
        "operationId": "Picklist-GetSinglePicklistType-v1",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Picklist name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Picklist name",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PicklistType"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/picklist": {
      "get": {
        "tags": [
          "Picklist"
        ],
        "summary": "Get all Picklists",
        "operationId": "Picklist-GetAllPicklistTypes-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PicklistType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/postaladdress/{id}": {
      "get": {
        "tags": [
          "Postal Address"
        ],
        "summary": "Get a single postal address",
        "operationId": "PostalAddress-GetSinglePostalAddress-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Postal address Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Postal address Id",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostalAddress"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Postal Address"
        ],
        "summary": "Update a postal address.",
        "operationId": "PostalAddress-UpdatePostalAddress-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PostalAddress"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostalAddress"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PostalAddress"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PostalAddress"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostalAddress"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/postaladdress/lookup": {
      "get": {
        "tags": [
          "Postal Address"
        ],
        "summary": "Do an address search against external address lookup provider",
        "operationId": "PostalAddress-LookupAddress-v1",
        "parameters": [
          {
            "name": "houseNumber",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "postalCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PostalAddressLookup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/postaladdress/lookup/{id}": {
      "get": {
        "tags": [
          "Postal Address"
        ],
        "summary": "Get a specific address from external address service",
        "operationId": "PostalAddress-GetLookupAddressResult-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostalAddress"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/postaladdress": {
      "get": {
        "tags": [
          "Postal Address"
        ],
        "summary": "Get all postal addresses",
        "operationId": "PostalAddress-GetAllPostalAddresses-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostalAddress-QueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Postal Address"
        ],
        "summary": "Add a postal address",
        "operationId": "PostalAddress-AddPostalAddress-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Postal Address to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PostalAddressCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostalAddressCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PostalAddressCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PostalAddressCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostalAddress"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/postaladdress/{id}/nearby": {
      "get": {
        "tags": [
          "Postal Address"
        ],
        "summary": "Get addresses nearby another address",
        "operationId": "PostalAddress-GetNearbyPostalAddresses-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "miles",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 5
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostalAddress-QueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/process/{id}": {
      "get": {
        "tags": [
          "Process"
        ],
        "summary": "Get a single process",
        "operationId": "Process-GetSingleProcess-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Process ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Process ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Process"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Process"
        ],
        "summary": "Delete a process.",
        "operationId": "Process-DeleteProcess-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Process ID to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Process ID to delete",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/process/{id}/storage": {
      "get": {
        "tags": [
          "Process"
        ],
        "summary": "Get a single process' storage",
        "operationId": "Process-GetSingleProcessStorage-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Process ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Process ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Process"
        ],
        "summary": "Update a single process' storage",
        "operationId": "Process-UpdateSingleProcessStorage-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Process ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Process ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "description": "",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "description": "",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "description": "",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "description": "",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/process/{id}/workitems": {
      "get": {
        "tags": [
          "Process"
        ],
        "summary": "Get tasks by process",
        "operationId": "Process-GetWorkItemsByProcess-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Process ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Process ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/process/{id}/history": {
      "get": {
        "tags": [
          "Process"
        ],
        "summary": "Get a single activity's history",
        "operationId": "Process-GetProcessHistory-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Activity ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityHistory"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/process": {
      "get": {
        "tags": [
          "Process"
        ],
        "summary": "Get all processes on the specified object.",
        "operationId": "Process-GetProcessesByRegarding-v1",
        "parameters": [
          {
            "name": "regardingType",
            "in": "query",
            "description": "Regarding Object Type",
            "schema": {
              "type": "string",
              "description": "Regarding Object Type",
              "nullable": true
            }
          },
          {
            "name": "regardingId",
            "in": "query",
            "description": "Regarding Object ID",
            "schema": {
              "type": "integer",
              "description": "Regarding Object ID",
              "format": "int32"
            }
          },
          {
            "name": "loadRegardingObject",
            "in": "query",
            "description": "Load the full regarding object",
            "schema": {
              "type": "boolean",
              "description": "Load the full regarding object",
              "default": false
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Process"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Process"
        ],
        "summary": "Start a process.",
        "operationId": "Process-StartProcess-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Process to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Process"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/process/{id}/cancel": {
      "patch": {
        "tags": [
          "Process"
        ],
        "summary": "Cancel a process.",
        "operationId": "Process-CancelProcess-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Process ID to target",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Process ID to target",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/process/{id}/action/{code}": {
      "patch": {
        "tags": [
          "Process"
        ],
        "summary": "Perform an action on a process.",
        "operationId": "Process-PerformActionOnProcess-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Process ID to target",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Process ID to target",
              "format": "int32"
            }
          },
          {
            "name": "code",
            "in": "path",
            "description": "The code of the action to perform",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The code of the action to perform",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/processtype": {
      "get": {
        "tags": [
          "Process Type"
        ],
        "summary": "Get all process types",
        "operationId": "ProcessType-GetProcessTypes-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProcessType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/processtype/{code}": {
      "get": {
        "tags": [
          "Process Type"
        ],
        "summary": "Get a single process type",
        "operationId": "ProcessType-GetProcessType-v1",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Process Type Code",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Process Type Code",
              "nullable": true
            }
          },
          {
            "name": "processVersion",
            "in": "query",
            "description": "Optionally specify a specific process version",
            "schema": {
              "type": "integer",
              "description": "Optionally specify a specific process version",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessType"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/processtype/{code}/processes": {
      "get": {
        "tags": [
          "Process Type"
        ],
        "summary": "Get all processes by type",
        "operationId": "ProcessType-GetProcessesByType-v1",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "loadRegardingObject",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "description": "",
              "default": false
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Process"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/processtype/{code}/workitems": {
      "get": {
        "tags": [
          "Process Type"
        ],
        "summary": "Get all active work items by process type",
        "operationId": "ProcessType-GetWorkItemsByProcessType-v1",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "loadRegardingObject",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "description": "",
              "default": false
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/processtype/{code}/stages": {
      "get": {
        "tags": [
          "Process Type"
        ],
        "summary": "Get all stages for a process type",
        "operationId": "ProcessType-GetProcessStages-v1",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Process Type Code",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Process Type Code",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "Optionally specify a specific process version",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Optionally specify a specific process version",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProcessStage"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/processtype/{code}/stage/{stage}": {
      "get": {
        "tags": [
          "Process Type"
        ],
        "summary": "Get a specific stage for a process type",
        "operationId": "ProcessType-GetProcessStage-v1",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Process Type Code",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Process Type Code",
              "nullable": true
            }
          },
          {
            "name": "stage",
            "in": "path",
            "description": "Process Stage Code",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Process Stage Code",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "Optionally specify a specific process version",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Optionally specify a specific process version",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProcessStage"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/processtype/{code}/stage/{stage}/workitems": {
      "get": {
        "tags": [
          "Process Type"
        ],
        "summary": "Get all tasks for a process stage",
        "operationId": "ProcessType-GetProcessStageWorkItems-v1",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Process Type Code",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Process Type Code",
              "nullable": true
            }
          },
          {
            "name": "stage",
            "in": "path",
            "description": "Process Stage Code",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Process Stage Code",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "Optionally specify a specific process version",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Optionally specify a specific process version",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItemType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/processtype/{code}/stage/{stage}/workitem/{task}": {
      "get": {
        "tags": [
          "Process Type"
        ],
        "summary": "Get a specific task for a process stage",
        "operationId": "ProcessType-GetProcessStageWorkItem-v1",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Process Type Code",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Process Type Code",
              "nullable": true
            }
          },
          {
            "name": "stage",
            "in": "path",
            "description": "Process Stage Code",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Process Stage Code",
              "nullable": true
            }
          },
          {
            "name": "task",
            "in": "path",
            "description": "Task Type Code",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Task Type Code",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "Optionally specify a specific process version",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Optionally specify a specific process version",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemType"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/product/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get a single product",
        "operationId": "Product-GetSingleProduct-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Product ID",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update a Product",
        "operationId": "Product-UpdateProduct-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Delete a Product",
        "operationId": "Product-DeleteProduct-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/product": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get all products",
        "operationId": "Product-GetAllProducts-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Add a Product",
        "operationId": "Product-AddProduct-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/producttype/{code}": {
      "get": {
        "tags": [
          "Product Type"
        ],
        "summary": "Get a single Product Type",
        "operationId": "ProductType-GetSingleProductType-v1",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Product Type Code",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Product Type Code",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductType"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/producttype": {
      "get": {
        "tags": [
          "Product Type"
        ],
        "summary": "Get all Product Types",
        "operationId": "ProductType-GetAllProductTypes-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/prospect/{id}": {
      "get": {
        "tags": [
          "Prospect"
        ],
        "summary": "Get a single prospect",
        "operationId": "Prospect-GetSingleProspect-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Prospects ID (partyrole)",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Prospects ID (partyrole)",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prospect"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Prospect"
        ],
        "summary": "Update a single prospect",
        "operationId": "Prospect-UpdateProspect-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Prospects ID (partyrole)",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Prospects ID (partyrole)",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Prospect"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Prospect"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Prospect"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Prospect"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prospect"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/prospect": {
      "get": {
        "tags": [
          "Prospect"
        ],
        "summary": "Get all prospects",
        "operationId": "Prospect-GetAllProspects-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Prospect"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/prospect/favourite": {
      "get": {
        "tags": [
          "Prospect"
        ],
        "summary": "Get favourite prospects",
        "operationId": "Prospect-GetFavouriteProspects-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Prospect"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/prospect/recent": {
      "get": {
        "tags": [
          "Prospect"
        ],
        "summary": "Get recent prospects",
        "operationId": "Prospect-GetRecentProspects-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Prospect"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/prospect/multiple": {
      "post": {
        "tags": [
          "Prospect"
        ],
        "summary": "Get many prospects",
        "operationId": "Prospect-GetMultipleProspects-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Prospect IDs",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Prospect IDs",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Prospect IDs",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Prospect IDs",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Prospect IDs",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Prospect"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/relationship/{id}": {
      "get": {
        "tags": [
          "Relationship"
        ],
        "summary": "Get a single relationship",
        "operationId": "Relationship-GetSingleRelationship-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Relationship ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Relationship ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Relationship"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Relationship"
        ],
        "summary": "Update a Relationship",
        "operationId": "Relationship-UpdateRelationship-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipUpdate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Relationship"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Relationship"
        ],
        "summary": "Delete a Relationship",
        "operationId": "Relationship-DeleteRelationship-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/relationship": {
      "post": {
        "tags": [
          "Relationship"
        ],
        "summary": "Create a Relationship",
        "operationId": "Relationship-AddRelationship-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Relationship"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/relationshiptype/{code}": {
      "get": {
        "tags": [
          "Relationship Type"
        ],
        "summary": "Get a single RelationshipType",
        "operationId": "RelationshipType-GetSingleRelationshipType-v1",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "RelationshipType ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "RelationshipType ID",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipType"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/relationshiptype": {
      "get": {
        "tags": [
          "Relationship Type"
        ],
        "summary": "Get all RelationshipTypes",
        "operationId": "RelationshipType-GetAllRelationshipTypes-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RelationshipType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/risklevel/{id}": {
      "get": {
        "tags": [
          "Risk Level"
        ],
        "summary": "Get a single riskLevel",
        "operationId": "RiskLevel-GetSingleRiskLevel-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "RiskLevel ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "RiskLevel ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RiskLevel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Risk Level"
        ],
        "summary": "Update a Risk Level",
        "operationId": "RiskLevel-UpdateRiskLevel-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RiskLevel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RiskLevel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RiskLevel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RiskLevel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RiskLevel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Risk Level"
        ],
        "summary": "Delete a Risk Level",
        "operationId": "RiskLevel-DeleteRiskLevel-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/risklevel": {
      "get": {
        "tags": [
          "Risk Level"
        ],
        "summary": "Get all riskLevels",
        "operationId": "RiskLevel-GetAllRiskLevels-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RiskLevel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Risk Level"
        ],
        "summary": "Add a Risk Level",
        "operationId": "RiskLevel-AddRiskLevel-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RiskLevel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RiskLevel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RiskLevel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RiskLevel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RiskLevel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/role/{code}": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Get a single Role",
        "operationId": "Role-GetSingleRole-v1",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Role Code",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Role Code",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/role/{code}/relationshiptypes": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Get relationships that are applicable for a role.",
        "operationId": "Role-GetRoleRelationshipTypes-v1",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Role Code",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Role Code",
              "nullable": true
            }
          },
          {
            "name": "relatedPartyType",
            "in": "query",
            "description": "Filter the relationship types where there related to a specific party type e.g. Person",
            "schema": {
              "type": "string",
              "description": "Filter the relationship types where there related to a specific party type e.g. Person",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipTypeSimple"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/role/relationshiptypes": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Get relationships that are applicable for all roles.",
        "operationId": "Role-GetAllRoleRelationshipTypes-v1",
        "parameters": [
          {
            "name": "relatedPartyType",
            "in": "query",
            "description": "Filter the relationship types where there related to a specific party type e.g. Person",
            "schema": {
              "type": "string",
              "description": "Filter the relationship types where there related to a specific party type e.g. Person",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipTypeSimple"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/role": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Get all Roles",
        "operationId": "Role-GetAllRoles-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/search": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Perform a Global Text Search across Portemis",
        "operationId": "Search-GlobalSearch-v1",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "description": "Search string in Google format",
            "schema": {
              "type": "string",
              "description": "Search string in Google format",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GlobalSearchResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/socialaddress/{id}": {
      "get": {
        "tags": [
          "Social Address"
        ],
        "summary": "Get a single social address",
        "operationId": "SocialAddress-GetSingleSocialAddress-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Social address Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Social address Id",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SocialAddress"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Social Address"
        ],
        "summary": "Update a social address.",
        "operationId": "SocialAddress-UpdateSocialAddress-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SocialAddress"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SocialAddress"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SocialAddress"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SocialAddress"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SocialAddress"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/socialaddress": {
      "get": {
        "tags": [
          "Social Address"
        ],
        "summary": "Get all social addresses",
        "operationId": "SocialAddress-GetAllSocialAddresses-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SocialAddress-QueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Social Address"
        ],
        "summary": "Add an social address",
        "operationId": "SocialAddress-AddSocialAddress-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Social Address to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SocialAddressCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SocialAddressCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SocialAddressCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SocialAddressCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SocialAddress"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/system/version": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Gets version info",
        "operationId": "System-GetVersion-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Version"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/system/exchangerate/{currency}": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get latest exchange rate for a currency",
        "operationId": "System-GetExchangeRate-v1",
        "parameters": [
          {
            "name": "currency",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/system/theme": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get theme info",
        "operationId": "System-GetTheme-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Theme"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/system/navbar": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get navbar configuration",
        "operationId": "System-GetNavbar-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NavBar"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/system/setting/{key}": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get a public configuration setting",
        "operationId": "System-GetPublicSetting-v1",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/system/setting/{type}/{key}": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get a public configuration setting (by type)",
        "operationId": "System-GetPublicSettingByType-v1",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/system/status": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get system status and messages",
        "operationId": "System-GetSystemStatus-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/tag": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Get all Tags",
        "operationId": "Tag-GetAllTags-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag-QueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tag"
        ],
        "summary": "Add a tag",
        "operationId": "Tag-AddTag-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Tag to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TagCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TagCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TagCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagCreate"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/tag/category": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Get all Tag Categories",
        "operationId": "Tag-GetAllTagCategories-v1",
        "parameters": [
          {
            "name": "entityType",
            "in": "query",
            "description": "Filter to specific entity type",
            "schema": {
              "type": "string",
              "description": "Filter to specific entity type",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TagCategory"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/tag/category/{category}/suggested": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Get Suggested Tags for Category",
        "operationId": "Tag-GetSuggestedTags-v1",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "all",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/tag/category/{categoryId}": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Get all Tags for an category",
        "operationId": "Tag-GetTagsForCategory-v1",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tag"
        ],
        "summary": "Create tags in bulk",
        "operationId": "Tag-CreateBulkTags-v1",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/tag/category/{category}": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Get all Tags for an category (by name)",
        "operationId": "Tag-GetTagsForCategoryString-v1",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v{version}/tag/{entity}/{id}/category/{categoryId}": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Get all Tags aginst an specific record + Category",
        "operationId": "Tag-GetTagsForSpecificCategoryAndRecord-v1",
        "parameters": [
          {
            "name": "entity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tag"
        ],
        "summary": "Create Tag against a ecord",
        "operationId": "Tag-CreateTagForSpecificRecord-v1",
        "parameters": [
          {
            "name": "entity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Tag"
        ],
        "summary": "Delete Tag for a specific record",
        "operationId": "Tag-DeleteTagForSpecificRecord-v1",
        "parameters": [
          {
            "name": "entity",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "categoryId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/tag/{entity}/{id}/category/{category}": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Get all Tags for a specific Entity + Category",
        "operationId": "Tag-GetTagsForSpecificCategoryAndRecordString-v1",
        "parameters": [
          {
            "name": "entity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "post": {
        "tags": [
          "Tag"
        ],
        "summary": "Create Tag against a record (by category name)",
        "operationId": "Tag-CreateTagForSpecificRecordString-v1",
        "parameters": [
          {
            "name": "entity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "tag",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "deprecated": true
      },
      "delete": {
        "tags": [
          "Tag"
        ],
        "summary": "Delete Tag for a specific record  (by category name)",
        "operationId": "Tag-DeleteTagForSpecificRecordString-v1",
        "parameters": [
          {
            "name": "entity",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "category",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "deprecated": true
      }
    },
    "/api/v{version}/tag/{entity}/{id}": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Get all Tags against a specific record",
        "operationId": "Tag-GetTagsForSpecificRecord-v1",
        "parameters": [
          {
            "name": "entity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/tag/{id}": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Get a single tag",
        "operationId": "Tag-GetSingleTag-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tag ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Tag ID",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tag"
        ],
        "summary": "Update a Tag",
        "operationId": "Tag-UpdateTag-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tag ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Tag ID",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Tag DTO",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TagUpdate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TagUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TagUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tag"
        ],
        "summary": "Delete a Tag",
        "operationId": "Tag-DeleteTag-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tag ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Tag ID",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/task/{id}": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Get a single task",
        "operationId": "Task-GetSingleTask-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Task Id",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityTask"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Task"
        ],
        "summary": "Update a task",
        "operationId": "Task-UpdateTask-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Task to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTask"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTask"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTask"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTask"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityTask"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/task": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Get all tasks",
        "operationId": "Task-GetAllTasks-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityTask-QueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Add a task",
        "operationId": "Task-AddTask-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Task to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTaskCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTaskCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTaskCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTaskCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityTask"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/team/{id}": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Get a single team",
        "operationId": "Team-GetSingleTeam-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Team ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Party"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/team/{id}/members": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Get a single team's members",
        "operationId": "Team-GetSingleTeamMembers-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Team ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Party"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/team": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Serach teams",
        "operationId": "Team-SearchTeams-v1",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team-QueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "Add a team",
        "operationId": "Team-AddTeam-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Team to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TeamCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TeamCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Party"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/team/{id}/workitems": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Get work items by assigned team",
        "operationId": "Team-GetWorkItemsByAssignedTeam-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Process ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Process ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/team/{id}/user/{userId}": {
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "Add user to a team",
        "operationId": "Team-AddUserToTeam-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Team ID",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User (party role) ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "User (party role) ID",
              "format": "int32"
            }
          },
          {
            "name": "isPrincipalTeam",
            "in": "query",
            "description": "Is this Principal Team for the User",
            "schema": {
              "type": "boolean",
              "description": "Is this Principal Team for the User",
              "default": false
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Party"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Team"
        ],
        "summary": "Remove user from a team",
        "operationId": "Team-RemoveUserFromTeam-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Team ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Team ID",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User (party role) ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "User (party role) ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Party"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/timebooking/{id}": {
      "get": {
        "tags": [
          "Time Booking"
        ],
        "summary": "Get a single timebooking",
        "operationId": "TimeBooking-GetSingleTimeBooking-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "TimeBooking Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "TimeBooking Id",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityTimeBooking"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Time Booking"
        ],
        "summary": "Update a timebooking",
        "operationId": "TimeBooking-UpdateTimeBooking-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the record",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The ID of the record",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "TimeBooking to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTimeBooking"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTimeBooking"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTimeBooking"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTimeBooking"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityTimeBooking"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/timebooking": {
      "get": {
        "tags": [
          "Time Booking"
        ],
        "summary": "Get all timebookings",
        "operationId": "TimeBooking-GetAllTimeBookings-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityTimeBooking-QueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Time Booking"
        ],
        "summary": "Add a timebooking",
        "operationId": "TimeBooking-AddTimeBooking-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "TimeBooking to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTimeBookingCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTimeBookingCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTimeBookingCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityTimeBookingCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityTimeBooking"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/user/{id}/avatar": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get a single user avatar",
        "operationId": "User-GetSingleUserAvatar-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "User ID",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32",
              "default": 128
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get a single user",
        "operationId": "User-GetSingleUser-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "User ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Party"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Serach users",
        "operationId": "User-SearchUsers-v1",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User-QueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Add a user",
        "operationId": "User-AddUser-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "User to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Party"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/user/me": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Who am I?",
        "operationId": "User-WhoAmI-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/user/me/tenant": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get a list of My Tenants",
        "operationId": "User-MyTenants-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserTenant"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/user/me/today": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user's today view",
        "operationId": "User-GetMyTodayView-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Today"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/user/me/dashboard": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user's dashboard view",
        "operationId": "User-GetMyDashboardView-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dashboard"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/user/me/cards": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all action cards assigned to the current user.",
        "operationId": "User-GetMyActionCards-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Card"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/user/me/workitems": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get work items assigned to the current user",
        "operationId": "User-GetWorkItemsAssignedToMe-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/user/{id}/workitems": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get work items by assignee",
        "operationId": "User-GetWorkItemsByAssignee-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "User ID",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/user/me/password": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Change my password",
        "operationId": "User-ChangePassword-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordChange"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordChange"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordChange"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordChange"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Party"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/user/me/avatar": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Set current user avatar",
        "operationId": "User-SetMyAvatar-v1",
        "parameters": [
          {
            "name": "testing",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete current user avatar",
        "operationId": "User-DeleteMyAvatar-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/user/me/tenant/{tenant}/default": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Set a users default tenant",
        "operationId": "User-SetMyDefaultTenant-v1",
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/useraction/favourite/entity/{entityType}/{recordId}": {
      "get": {
        "tags": [
          "User Action"
        ],
        "summary": "Gets the Favourite \"state\" of a record",
        "operationId": "UserAction-GetFavouriteState-v1",
        "parameters": [
          {
            "name": "entityType",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "recordId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/useraction/{userAction}/entity/{entityType}/{recordId}": {
      "patch": {
        "tags": [
          "User Action"
        ],
        "summary": "Submits a user action against a record",
        "operationId": "UserAction-ProcessAction-v1",
        "parameters": [
          {
            "name": "userAction",
            "in": "path",
            "description": "The Action (See UserAction enum)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Action (See UserAction enum)",
              "nullable": true
            }
          },
          {
            "name": "entityType",
            "in": "path",
            "description": "The Entity Type (See SystemEntity enum)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The Entity Type (See SystemEntity enum)",
              "nullable": true
            }
          },
          {
            "name": "recordId",
            "in": "path",
            "description": "The Record Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The Record Id",
              "format": "int32"
            }
          },
          {
            "name": "additional",
            "in": "query",
            "description": "Additional - Field/Document name",
            "schema": {
              "type": "string",
              "description": "Additional - Field/Document name",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/webhook": {
      "get": {
        "tags": [
          "Web Hook"
        ],
        "summary": "Get all WebHooks",
        "operationId": "WebHook-GetAllWebHooks-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebHook-QueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Web Hook"
        ],
        "summary": "Add a web hook",
        "operationId": "WebHook-AddWebHook-v1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "WebHook to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebHookCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebHookCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebHookCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebHookCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebHookCreate"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/webhook/{id}": {
      "get": {
        "tags": [
          "Web Hook"
        ],
        "summary": "Get a single webhook",
        "operationId": "WebHook-GetSingleWebHook-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "WebHook ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "WebHook ID",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebHook"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Web Hook"
        ],
        "summary": "Partially update a WebHook using JsonPatch",
        "operationId": "WebHook-PartiallyUpdateWebHook-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of WebHook",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id of WebHook",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Patch values",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                },
                "description": "Patch values",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                },
                "description": "Patch values",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                },
                "description": "Patch values",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                },
                "description": "Patch values",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebHook"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Web Hook"
        ],
        "summary": "Update a Web Hook",
        "operationId": "WebHook-UpdateWebHook-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "WebHook ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "WebHook ID",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "WebHook DTO",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebHookUpdate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebHookUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebHookUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebHookUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebHook"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Web Hook"
        ],
        "summary": "Delete a WebHook",
        "operationId": "WebHook-DeleteWebHook-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "WebHook ID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "WebHook ID",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/workitem/{id}": {
      "get": {
        "tags": [
          "Work Item"
        ],
        "summary": "Get a single work item",
        "operationId": "WorkItem-GetSingleWorkItem-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Work Item Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Work Item Id",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/workitem/{id}/start": {
      "patch": {
        "tags": [
          "Work Item"
        ],
        "summary": "Starts a work item.",
        "operationId": "WorkItem-StartWorkItem-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Work Item Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Work Item Id",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/workitem/{id}/cancel": {
      "patch": {
        "tags": [
          "Work Item"
        ],
        "summary": "Cancels a work item",
        "operationId": "WorkItem-CancelWorkItem-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Work Item Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Work Item Id",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/workitem/{id}/assign": {
      "patch": {
        "tags": [
          "Work Item"
        ],
        "summary": "Assigns a work item",
        "operationId": "WorkItem-AssignWorkItem-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Work Item Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Work Item Id",
              "format": "int32"
            }
          },
          {
            "name": "user",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "team",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/workitem/{id}/complete": {
      "patch": {
        "tags": [
          "Work Item"
        ],
        "summary": "Completes a work item",
        "operationId": "WorkItem-CompleteWorkItem-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Work Item Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Work Item Id",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/workitem/{id}/outcome/{code}": {
      "patch": {
        "tags": [
          "Work Item"
        ],
        "summary": "Performs a work item outcome",
        "operationId": "WorkItem-PerformWorkItemOutcome-v1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Work Item Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Work Item Id",
              "format": "int32"
            }
          },
          {
            "name": "code",
            "in": "path",
            "description": "The outcome code to trigger",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The outcome code to trigger",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Reference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "dateOpened": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateClosed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateLive": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "productCode": {
            "type": "string",
            "nullable": true
          },
          "mandateCode": {
            "type": "string",
            "nullable": true
          },
          "riskLevelCode": {
            "type": "string",
            "nullable": true
          },
          "objectiveCode": {
            "type": "string",
            "nullable": true
          },
          "feeStructureCode": {
            "type": "string",
            "nullable": true
          },
          "serviceType": {
            "type": "string",
            "nullable": true
          },
          "timeHorizon": {
            "type": "string",
            "nullable": true
          },
          "purpose": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "latestValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "latestValueBase": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "beneficialOwner": {
            "$ref": "#/components/schemas/Reference"
          },
          "group": {
            "$ref": "#/components/schemas/Reference"
          },
          "cherishedHoldings": {
            "type": "string",
            "nullable": true
          },
          "restrictions": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AccountCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "productCode": {
            "type": "string",
            "nullable": true
          },
          "mandateCode": {
            "type": "string",
            "nullable": true
          },
          "riskLevelCode": {
            "type": "string",
            "nullable": true
          },
          "objectiveCode": {
            "type": "string",
            "nullable": true
          },
          "feeStructureCode": {
            "type": "string",
            "nullable": true
          },
          "serviceType": {
            "type": "string",
            "nullable": true
          },
          "timeHorizon": {
            "type": "string",
            "nullable": true
          },
          "purpose": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "beneficialOwner": {
            "$ref": "#/components/schemas/Reference"
          },
          "group": {
            "$ref": "#/components/schemas/Reference"
          }
        }
      },
      "AccountGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "groupType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Regarding": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "regardingObject": {
            "type": "object",
            "nullable": true
          }
        }
      },
      "ActivityParty": {
        "type": "object",
        "properties": {
          "party": {
            "$ref": "#/components/schemas/Reference"
          },
          "partyRole": {
            "$ref": "#/components/schemas/Reference"
          },
          "contactPoint": {
            "$ref": "#/components/schemas/Reference"
          }
        }
      },
      "Activity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "isPinned": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "activityType": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateActual": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationScheduled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationActual": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dateImportantUntil": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "process": {
            "$ref": "#/components/schemas/Reference"
          },
          "regarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Regarding"
            },
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "hasFiles": {
            "type": "boolean"
          }
        }
      },
      "QueryPaging": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Activity-QueryResult": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Activity"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPaging"
          }
        }
      },
      "ActivityFile": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "fileIndex": {
            "type": "string",
            "nullable": true
          },
          "sizeInBytes": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "MinimalParty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "partyType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ActivityHistory": {
        "type": "object",
        "properties": {
          "activity": {
            "$ref": "#/components/schemas/Reference"
          },
          "action": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "recordedBy": {
            "$ref": "#/components/schemas/MinimalParty"
          },
          "dateRecorded": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ActivityCommentCreate": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ActivityStatusType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "ActivityAppointment": {
        "type": "object",
        "properties": {
          "organiser": {
            "$ref": "#/components/schemas/ActivityParty"
          },
          "required": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "optional": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "isPinned": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "activityType": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateActual": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationScheduled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationActual": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dateImportantUntil": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "process": {
            "$ref": "#/components/schemas/Reference"
          },
          "regarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Regarding"
            },
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "hasFiles": {
            "type": "boolean"
          }
        }
      },
      "ActivityAppointment-QueryResult": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityAppointment"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPaging"
          }
        }
      },
      "ActivityAppointmentCreate": {
        "type": "object",
        "properties": {
          "organiser": {
            "$ref": "#/components/schemas/ActivityParty"
          },
          "required": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "optional": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "sendInvite": {
            "type": "boolean"
          },
          "inviteHtml": {
            "type": "string",
            "nullable": true
          },
          "invitePlainText": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateActual": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationScheduled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationActual": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dateImportantUntil": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "regarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Regarding"
            },
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isPinned": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "AuditEventChange": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "nullable": true
          },
          "oldValue": {
            "type": "string",
            "nullable": true
          },
          "newValue": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AuditEvent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "action": {
            "type": "string",
            "nullable": true
          },
          "eventTime": {
            "type": "string",
            "format": "date-time"
          },
          "who": {
            "$ref": "#/components/schemas/Reference"
          },
          "additional": {
            "type": "string",
            "nullable": true
          },
          "changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditEventChange"
            },
            "nullable": true
          }
        }
      },
      "CalendarDay": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Calendar": {
        "type": "object",
        "properties": {
          "firstDayOfWeek": {
            "type": "string",
            "nullable": true
          },
          "standardWorkingDays": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "nonWorkingDays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalendarDay"
            },
            "nullable": true
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "typeCode": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "colour": {
            "type": "string",
            "nullable": true
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "span": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "Currency": {
        "required": [
          "isoCode"
        ],
        "type": "object",
        "properties": {
          "isoCode": {
            "maxLength": 3,
            "type": "string"
          },
          "name": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "partyType": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "qualifyingRelationshipTypeCode": {
            "type": "string",
            "nullable": true
          },
          "canBeClient": {
            "type": "boolean"
          }
        }
      },
      "RelationshipType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "reciprocalName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "isHierarchical": {
            "type": "boolean"
          },
          "parentPartyType": {
            "type": "string",
            "nullable": true
          },
          "parentRoleType": {
            "$ref": "#/components/schemas/Role"
          },
          "childPartyType": {
            "type": "string",
            "nullable": true
          },
          "childRoleType": {
            "$ref": "#/components/schemas/Role"
          },
          "childRelationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          }
        }
      },
      "Relationship": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "isPrincipalTeam": {
            "type": "boolean"
          },
          "parentPartyRole": {
            "$ref": "#/components/schemas/Reference"
          },
          "parentParty": {
            "$ref": "#/components/schemas/Reference"
          },
          "childPartyRole": {
            "$ref": "#/components/schemas/Reference"
          },
          "childParty": {
            "$ref": "#/components/schemas/Reference"
          },
          "relatedPartyRole": {
            "$ref": "#/components/schemas/Reference"
          },
          "relatedParty": {
            "$ref": "#/components/schemas/Reference"
          },
          "childRelationship": {
            "$ref": "#/components/schemas/Reference"
          },
          "relationshipType": {
            "$ref": "#/components/schemas/RelationshipType"
          }
        }
      },
      "Client": {
        "type": "object",
        "properties": {
          "dateLastReview": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateNextReview": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "totalValueInvested": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "isPrimary": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "party": {
            "$ref": "#/components/schemas/Reference"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "clientStatusType": {
            "type": "string",
            "nullable": true
          },
          "teamMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "subsidiaryTeams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "subsidiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "powerOfAttorneyFor": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "wards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "employees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "trustees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "directors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "shareholders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "correspondents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "settlors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "beneficiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "jointInvestors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "teamMembersOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "parentTeams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "parentOrganisations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "powerOfAttorneys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "parents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "guardians": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "employers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "trusteesOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "directorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "shareholdersOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "correspondentsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "settlorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "beneficiariesOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "jointInvestorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "advisers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "productProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "professionals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "friends": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "spouses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "partners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "divorcees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "widowees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "familyMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          }
        }
      },
      "Complaint": {
        "required": [
          "complainant",
          "reason",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "resolution": {
            "type": "string",
            "nullable": true
          },
          "originator": {
            "$ref": "#/components/schemas/Reference"
          },
          "complainant": {
            "$ref": "#/components/schemas/Reference"
          },
          "dateOpened": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateClosed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "process": {
            "$ref": "#/components/schemas/Reference"
          }
        }
      },
      "Complaint-QueryResult": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Complaint"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPaging"
          }
        }
      },
      "ComplaintCreate": {
        "required": [
          "complainant",
          "reason",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string"
          },
          "complainant": {
            "$ref": "#/components/schemas/Reference"
          }
        }
      },
      "ContactPointType": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "LookupResult": {
        "type": "object",
        "properties": {
          "partyId": {
            "type": "integer",
            "format": "int32"
          },
          "partyType": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "contactPointId": {
            "type": "integer",
            "format": "int32"
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ContactPoint": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "contactPointType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ContactPoint-QueryResult": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactPoint"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPaging"
          }
        }
      },
      "StatusType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "Country": {
        "required": [
          "isoCode"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "isoCode": {
            "maxLength": 2,
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          }
        }
      },
      "DashboardDefintion": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DashboardData": {
        "type": "object",
        "properties": {
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "expiresOn": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "type": "object",
            "nullable": true
          }
        }
      },
      "ElectronicAddress": {
        "type": "object",
        "properties": {
          "emailAddress": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "addressType": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "contactPointType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ElectronicAddress-QueryResult": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ElectronicAddress"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPaging"
          }
        }
      },
      "ElectronicAddressCreate": {
        "required": [
          "addressType",
          "emailAddress"
        ],
        "type": "object",
        "properties": {
          "emailAddress": {
            "maxLength": 255,
            "type": "string"
          },
          "isDefaultForParty": {
            "type": "boolean"
          },
          "addressType": {
            "type": "string"
          },
          "partyId": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ActivityEmail": {
        "type": "object",
        "properties": {
          "from": {
            "$ref": "#/components/schemas/ActivityParty"
          },
          "to": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "cc": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "bcc": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "isPinned": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "activityType": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateActual": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationScheduled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationActual": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dateImportantUntil": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "process": {
            "$ref": "#/components/schemas/Reference"
          },
          "regarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Regarding"
            },
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "hasFiles": {
            "type": "boolean"
          }
        }
      },
      "ActivityEmail-QueryResult": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityEmail"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPaging"
          }
        }
      },
      "ActivityEmailCreate": {
        "type": "object",
        "properties": {
          "from": {
            "$ref": "#/components/schemas/ActivityParty"
          },
          "to": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "cc": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "bcc": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "subject": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateActual": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationScheduled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationActual": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dateImportantUntil": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "regarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Regarding"
            },
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isPinned": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "FeeStructure": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "FeeStructure-QueryResult": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeeStructure"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPaging"
          }
        }
      },
      "FileIndex": {
        "type": "object",
        "properties": {
          "fileIndex": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "sizeInBytes": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "FormDataInstance": {
        "type": "object",
        "properties": {
          "formVersion": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "object",
            "nullable": true
          },
          "lastUpdatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdatedBy": {
            "type": "string",
            "nullable": true
          },
          "publishedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "publishedBy": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "FormDataHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "formVersion": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "updatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "publishedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "publishedBy": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ClientMaster": {
        "type": "object",
        "properties": {
          "assets": {
            "type": "object",
            "nullable": true
          },
          "income": {
            "type": "object",
            "nullable": true
          },
          "needsAssessment": {
            "type": "object",
            "nullable": true
          },
          "sourceOfWealth": {
            "type": "object",
            "nullable": true
          },
          "attitudeToRisk": {
            "type": "object",
            "nullable": true
          },
          "liabilities": {
            "type": "object",
            "nullable": true
          },
          "expenses": {
            "type": "object",
            "nullable": true
          }
        }
      },
      "FieldDefinitionOption": {
        "type": "object",
        "properties": {
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "isDisabled": {
            "type": "boolean"
          },
          "iconName": {
            "type": "string",
            "nullable": true
          },
          "colour": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DisplayProperty": {
        "type": "object",
        "properties": {
          "singularName": {
            "type": "string",
            "nullable": true
          },
          "pluralName": {
            "type": "string",
            "nullable": true
          },
          "displayNameFormat": {
            "type": "string",
            "nullable": true
          },
          "secondaryNameFormat": {
            "type": "string",
            "nullable": true
          },
          "dynamicIconField": {
            "type": "string",
            "nullable": true
          },
          "defaultIconName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DocumentType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "guidanceNotes": {
            "type": "string",
            "nullable": true
          },
          "metadataSchema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldDefinition"
            },
            "nullable": true
          }
        }
      },
      "FieldDefinition": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "fieldType": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "placeholder": {
            "type": "string",
            "nullable": true
          },
          "isRequired": {
            "type": "boolean"
          },
          "lines": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isHidden": {
            "type": "boolean"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldDefinitionOption"
            },
            "nullable": true
          },
          "childSchema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldDefinition"
            },
            "nullable": true
          },
          "displayProperties": {
            "$ref": "#/components/schemas/DisplayProperty"
          },
          "renderInline": {
            "type": "boolean",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "selectSourceApi": {
            "type": "string",
            "nullable": true
          },
          "lookupSource": {
            "type": "string",
            "nullable": true
          },
          "inputMaskRegEx": {
            "type": "string",
            "nullable": true
          },
          "inputMaskDescription": {
            "type": "string",
            "nullable": true
          },
          "min": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "max": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dateRestrictionType": {
            "type": "string",
            "nullable": true
          },
          "isCalculated": {
            "type": "boolean",
            "nullable": true
          },
          "isCalculationTrigger": {
            "type": "boolean"
          },
          "isSensitive": {
            "type": "boolean"
          },
          "guidanceText": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "object",
            "nullable": true
          },
          "previousTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "lookupAllowCreateNew": {
            "type": "boolean",
            "nullable": true
          },
          "documentType": {
            "$ref": "#/components/schemas/DocumentType"
          }
        }
      },
      "FormDefinitionWithSchema": {
        "type": "object",
        "properties": {
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldDefinition"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "entityType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "FormDefinition": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "entityType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GraphQLQuery": {
        "type": "object",
        "properties": {
          "operationName": {
            "type": "string",
            "nullable": true
          },
          "query": {
            "type": "string",
            "nullable": true
          },
          "variables": {
            "type": "object",
            "nullable": true
          }
        }
      },
      "Intermediary": {
        "type": "object",
        "properties": {
          "capacityCode": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "totalValueIntroduced": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalValueManaged": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "isPrimary": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "party": {
            "$ref": "#/components/schemas/Reference"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "clientStatusType": {
            "type": "string",
            "nullable": true
          },
          "teamMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "subsidiaryTeams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "subsidiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "powerOfAttorneyFor": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "wards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "employees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "trustees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "directors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "shareholders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "correspondents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "settlors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "beneficiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "jointInvestors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "teamMembersOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "parentTeams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "parentOrganisations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "powerOfAttorneys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "parents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "guardians": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "employers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "trusteesOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "directorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "shareholdersOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "correspondentsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "settlorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "beneficiariesOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "jointInvestorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "advisers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "productProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "professionals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "friends": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "spouses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "partners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "divorcees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "widowees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "familyMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          }
        }
      },
      "Lead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "isPrimary": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "party": {
            "$ref": "#/components/schemas/Reference"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "clientStatusType": {
            "type": "string",
            "nullable": true
          },
          "teamMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "subsidiaryTeams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "subsidiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "powerOfAttorneyFor": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "wards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "employees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "trustees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "directors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "shareholders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "correspondents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "settlors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "beneficiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "jointInvestors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "teamMembersOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "parentTeams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "parentOrganisations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "powerOfAttorneys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "parents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "guardians": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "employers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "trusteesOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "directorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "shareholdersOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "correspondentsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "settlorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "beneficiariesOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "jointInvestorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "advisers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "productProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "professionals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "friends": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "spouses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "partners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "divorcees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "widowees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "familyMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          }
        }
      },
      "DateTimeFormat": {
        "type": "object",
        "properties": {
          "fullDateTimePattern": {
            "type": "string",
            "nullable": true
          },
          "longDatePattern": {
            "type": "string",
            "nullable": true
          },
          "longTimePattern": {
            "type": "string",
            "nullable": true
          },
          "shortDatePattern": {
            "type": "string",
            "nullable": true
          },
          "shortTimePattern": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "NumberFormat": {
        "type": "object",
        "properties": {
          "numberDecimalSeparator": {
            "type": "string",
            "nullable": true
          },
          "numberGroupSeparator": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Locale": {
        "type": "object",
        "properties": {
          "englishName": {
            "type": "string",
            "nullable": true
          },
          "nativeName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "lcid": {
            "type": "integer",
            "format": "int32"
          },
          "dateTimeFormat": {
            "$ref": "#/components/schemas/DateTimeFormat"
          },
          "numberFormat": {
            "$ref": "#/components/schemas/NumberFormat"
          }
        }
      },
      "LookupFieldResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Mandate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "NewBusiness": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "estimatedValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "estimatedCloseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "lead": {
            "$ref": "#/components/schemas/Reference"
          },
          "client": {
            "$ref": "#/components/schemas/Reference"
          },
          "isUnknownClient": {
            "type": "boolean"
          },
          "origin": {
            "type": "string",
            "nullable": true
          },
          "process": {
            "$ref": "#/components/schemas/Reference"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "processStage": {
            "type": "string",
            "nullable": true
          },
          "clientType": {
            "$ref": "#/components/schemas/Role"
          }
        }
      },
      "NewBusinessParty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "lookupType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "NewBusinessPhoneNumber": {
        "type": "object",
        "properties": {
          "phoneType": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "NewBusinessEmail": {
        "type": "object",
        "properties": {
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "addressType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "NewBusinessAddress": {
        "required": [
          "city",
          "postCode",
          "street",
          "streetBuildingIdentification"
        ],
        "type": "object",
        "properties": {
          "streetBuildingIdentification": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "postOfficeBox": {
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "type": "string"
          }
        }
      },
      "NewBusinessEstimatedValue": {
        "type": "object",
        "properties": {
          "isoCode": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "NewBusinessCreate": {
        "required": [
          "clientType",
          "isUnknownClient",
          "name",
          "owner",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "isUnknownClient": {
            "type": "boolean"
          },
          "estimatedCompletionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "owner": {
            "$ref": "#/components/schemas/NewBusinessParty"
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "primaryContact": {
            "$ref": "#/components/schemas/NewBusinessParty"
          },
          "clientType": {
            "type": "string"
          },
          "company": {
            "$ref": "#/components/schemas/NewBusinessParty"
          },
          "organisationPhoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewBusinessPhoneNumber"
            },
            "nullable": true
          },
          "organisationEmails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewBusinessEmail"
            },
            "nullable": true
          },
          "organisationAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewBusinessAddress"
            },
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "estimatedValue": {
            "$ref": "#/components/schemas/NewBusinessEstimatedValue"
          }
        }
      },
      "NewBusiness-QueryResult": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewBusiness"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPaging"
          }
        }
      },
      "ActivityNote": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "isPinned": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "activityType": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateActual": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationScheduled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationActual": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dateImportantUntil": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "process": {
            "$ref": "#/components/schemas/Reference"
          },
          "regarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Regarding"
            },
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "hasFiles": {
            "type": "boolean"
          }
        }
      },
      "ActivityNote-QueryResult": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityNote"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPaging"
          }
        }
      },
      "ActivityNoteCreate": {
        "type": "object",
        "properties": {
          "subject": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateActual": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationScheduled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationActual": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dateImportantUntil": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "regarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Regarding"
            },
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isPinned": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "Objective": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CurrencyValue": {
        "type": "object",
        "properties": {
          "isoCode": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "baseValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "formattedValue": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PartyRole": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "isPrimary": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "party": {
            "$ref": "#/components/schemas/Reference"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "clientStatusType": {
            "type": "string",
            "nullable": true
          },
          "teamMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "subsidiaryTeams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "subsidiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "powerOfAttorneyFor": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "wards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "employees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "trustees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "directors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "shareholders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "correspondents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "settlors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "beneficiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "jointInvestors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "teamMembersOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "parentTeams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "parentOrganisations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "powerOfAttorneys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "parents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "guardians": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "employers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "trusteesOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "directorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "shareholdersOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "correspondentsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "settlorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "beneficiariesOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "jointInvestorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "advisers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "productProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "professionals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "friends": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "spouses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "partners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "divorcees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "widowees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "familyMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          }
        }
      },
      "Organisation": {
        "type": "object",
        "properties": {
          "purpose": {
            "type": "string",
            "nullable": true
          },
          "establishmentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "netWealth": {
            "$ref": "#/components/schemas/CurrencyValue"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "countryOfIncorporation": {
            "$ref": "#/components/schemas/Country"
          },
          "registrationNumber": {
            "type": "string",
            "nullable": true
          },
          "isRegulated": {
            "type": "boolean",
            "nullable": true
          },
          "regulatorName": {
            "type": "string",
            "nullable": true
          },
          "regulatorRegistrationNumber": {
            "type": "string",
            "nullable": true
          },
          "isFinancialInstitution": {
            "type": "boolean",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "partyType": {
            "type": "string",
            "nullable": true
          },
          "defaultEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "partyRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartyRole"
            },
            "nullable": true
          },
          "contactPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactPoint"
            },
            "nullable": true
          }
        }
      },
      "Organisation-QueryResult": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Organisation"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPaging"
          }
        }
      },
      "OrganisationCreate": {
        "required": [
          "purpose"
        ],
        "type": "object",
        "properties": {
          "purpose": {
            "maxLength": 100,
            "type": "string"
          },
          "establishmentDate": {
            "type": "string",
            "format": "date-time"
          },
          "roleCode": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userRoleCode": {
            "type": "string",
            "nullable": true
          },
          "countryOfIncorporation": {
            "type": "string",
            "nullable": true
          },
          "registrationNumber": {
            "type": "string",
            "nullable": true
          },
          "isRegulated": {
            "type": "boolean",
            "nullable": true
          },
          "regulatorName": {
            "type": "string",
            "nullable": true
          },
          "regulatorRegistrationNumber": {
            "type": "string",
            "nullable": true
          },
          "isFinancialInstitution": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Party": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "partyType": {
            "type": "string",
            "nullable": true
          },
          "defaultEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "partyRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartyRole"
            },
            "nullable": true
          },
          "contactPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactPoint"
            },
            "nullable": true
          }
        }
      },
      "Party-QueryResult": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Party"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPaging"
          }
        }
      },
      "ActivityPhoneCall": {
        "type": "object",
        "properties": {
          "direction": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "$ref": "#/components/schemas/ActivityParty"
          },
          "to": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "isPinned": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "activityType": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateActual": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationScheduled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationActual": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dateImportantUntil": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "process": {
            "$ref": "#/components/schemas/Reference"
          },
          "regarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Regarding"
            },
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "hasFiles": {
            "type": "boolean"
          }
        }
      },
      "ActivityPhoneCall-QueryResult": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityPhoneCall"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPaging"
          }
        }
      },
      "ActivityTimeBooking": {
        "type": "object",
        "properties": {
          "bookingType": {
            "type": "string",
            "nullable": true
          },
          "costs": {
            "$ref": "#/components/schemas/CurrencyValue"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "isPinned": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "activityType": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateActual": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationScheduled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationActual": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dateImportantUntil": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "process": {
            "$ref": "#/components/schemas/Reference"
          },
          "regarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Regarding"
            },
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "hasFiles": {
            "type": "boolean"
          }
        }
      },
      "ActivityTimeBooking-QueryResult": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityTimeBooking"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPaging"
          }
        }
      },
      "ActivityTask": {
        "type": "object",
        "properties": {
          "assignee": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "assigneeTeam": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "isPinned": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "activityType": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateActual": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationScheduled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationActual": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dateImportantUntil": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "process": {
            "$ref": "#/components/schemas/Reference"
          },
          "regarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Regarding"
            },
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "hasFiles": {
            "type": "boolean"
          }
        }
      },
      "ActivityTask-QueryResult": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityTask"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPaging"
          }
        }
      },
      "WorkItemOutcome": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 10,
            "type": "string"
          },
          "name": {
            "maxLength": 100,
            "type": "string"
          }
        }
      },
      "WorkItem": {
        "type": "object",
        "properties": {
          "assignee": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "assigneeTeam": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "processTypeCode": {
            "type": "string",
            "nullable": true
          },
          "processTypeVersion": {
            "type": "integer",
            "format": "int32"
          },
          "processStageCode": {
            "type": "string",
            "nullable": true
          },
          "workItemTypeCode": {
            "type": "string",
            "nullable": true
          },
          "outcomes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkItemOutcome"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "isPinned": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "activityType": {
            "type": "string",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateActual": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationScheduled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationActual": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dateImportantUntil": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "process": {
            "$ref": "#/components/schemas/Reference"
          },
          "regarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Regarding"
            },
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "hasFiles": {
            "type": "boolean"
          }
        }
      },
      "WorkItem-QueryResult": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkItem"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPaging"
          }
        }
      },
      "Process": {
        "required": [
          "dateStarted",
          "subject"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "maxLength": 200,
            "type": "string"
          },
          "dateStarted": {
            "type": "string",
            "format": "date-time"
          },
          "dateCompleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateDue": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "processTypeCode": {
            "type": "string",
            "nullable": true
          },
          "processTypeVersion": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "processStageCode": {
            "type": "string",
            "nullable": true
          },
          "regarding": {
            "$ref": "#/components/schemas/Regarding"
          },
          "owner": {
            "$ref": "#/components/schemas/Reference"
          },
          "storage": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "nullable": true
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "currencyValue": {
            "$ref": "#/components/schemas/CurrencyValue"
          }
        }
      },
      "RelationshipMapNode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "group": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RelationshipMapEdge": {
        "type": "object",
        "properties": {
          "from": {
            "type": "integer",
            "format": "int32"
          },
          "to": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RelationshipMap": {
        "type": "object",
        "properties": {
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipMapNode"
            },
            "nullable": true
          },
          "edges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationshipMapEdge"
            },
            "nullable": true
          }
        }
      },
      "PartyRoleAccess": {
        "type": "object",
        "properties": {
          "party": {
            "$ref": "#/components/schemas/Party"
          },
          "isOwner": {
            "type": "boolean"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "addedBy": {
            "$ref": "#/components/schemas/Reference"
          },
          "addedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "PartyRoleAccessCreate": {
        "required": [
          "partyId",
          "reason"
        ],
        "type": "object",
        "properties": {
          "partyId": {
            "type": "integer",
            "format": "int32"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "Document": {
        "type": "object",
        "properties": {
          "documentType": {
            "$ref": "#/components/schemas/DocumentType"
          },
          "fileIndex": {
            "$ref": "#/components/schemas/FileIndex"
          },
          "metadata": {
            "type": "object",
            "nullable": true
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DocumentPurpose": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "documentTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentType"
            },
            "nullable": true
          },
          "numberRequired": {
            "type": "integer",
            "format": "int32"
          },
          "numberSupplied": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            },
            "nullable": true
          },
          "pass": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "DocumentGroup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "purposes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentPurpose"
            },
            "nullable": true
          },
          "pass": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "DocumentCheck": {
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentGroup"
            },
            "nullable": true
          },
          "pass": {
            "type": "boolean",
            "readOnly": true
          },
          "partyRole": {
            "type": "string",
            "nullable": true
          },
          "draft": {
            "type": "boolean"
          }
        }
      },
      "Person": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "middleNames": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "localeName": {
            "type": "string",
            "nullable": true
          },
          "netWealth": {
            "$ref": "#/components/schemas/CurrencyValue"
          },
          "nationality": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "age": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "partyType": {
            "type": "string",
            "nullable": true
          },
          "defaultEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "partyRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartyRole"
            },
            "nullable": true
          },
          "contactPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactPoint"
            },
            "nullable": true
          }
        }
      },
      "Person-QueryResult": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Person"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPaging"
          }
        }
      },
      "PersonCreate": {
        "required": [
          "firstName",
          "lastName",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 80,
            "type": "string"
          },
          "firstName": {
            "maxLength": 80,
            "type": "string"
          },
          "middleNames": {
            "maxLength": 95,
            "type": "string",
            "nullable": true
          },
          "code": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 80,
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "genderCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "locale": {
            "type": "string",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "roleCode": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userRoleCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AmlPersonalDetails": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "homePhone": {
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "nationalIdentifier": {
            "type": "string",
            "nullable": true
          },
          "drivingLicence": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AmlBankDetails": {
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "sortCode": {
            "type": "string",
            "nullable": true
          },
          "rollNumber": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AmlPassportDetails": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "nullable": true
          },
          "expiry": {
            "type": "string",
            "format": "date-time"
          },
          "number": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AmlAddressDetails": {
        "type": "object",
        "properties": {
          "flatNumber": {
            "type": "string",
            "nullable": true
          },
          "houseNumber": {
            "type": "string",
            "nullable": true
          },
          "line1": {
            "type": "string",
            "nullable": true
          },
          "line2": {
            "type": "string",
            "nullable": true
          },
          "town": {
            "type": "string",
            "nullable": true
          },
          "county": {
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "type": "string",
            "nullable": true
          },
          "timeInMonths": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "AmlRequest": {
        "type": "object",
        "properties": {
          "personalDetails": {
            "$ref": "#/components/schemas/AmlPersonalDetails"
          },
          "bankDetails": {
            "$ref": "#/components/schemas/AmlBankDetails"
          },
          "passportDetails": {
            "$ref": "#/components/schemas/AmlPassportDetails"
          },
          "addressDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AmlAddressDetails"
            },
            "nullable": true
          }
        }
      },
      "AmlResult": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AmlReport": {
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/components/schemas/AmlRequest"
          },
          "dateRequested": {
            "type": "string",
            "format": "date-time"
          },
          "requestedBy": {
            "$ref": "#/components/schemas/Reference"
          },
          "results": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AmlResult"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        }
      },
      "PhoneAddress": {
        "required": [
          "phoneType"
        ],
        "type": "object",
        "properties": {
          "number": {
            "maxLength": 35,
            "type": "string",
            "nullable": true
          },
          "e164Number": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "phoneType": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "contactPointType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PhoneAddress-QueryResult": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneAddress"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPaging"
          }
        }
      },
      "PhoneAddressCreate": {
        "type": "object",
        "properties": {
          "number": {
            "maxLength": 35,
            "type": "string",
            "nullable": true
          },
          "phoneType": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "partyId": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ActivityPhoneCallCreate": {
        "type": "object",
        "properties": {
          "from": {
            "$ref": "#/components/schemas/ActivityParty"
          },
          "to": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "direction": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateActual": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationScheduled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationActual": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dateImportantUntil": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "regarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Regarding"
            },
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isPinned": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "Picklist": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PicklistType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "pickistValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Picklist"
            },
            "nullable": true
          }
        }
      },
      "GeographicLocation": {
        "type": "object",
        "properties": {
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        }
      },
      "PostalAddress": {
        "type": "object",
        "properties": {
          "addressType": {
            "type": "string",
            "nullable": true
          },
          "streetBuildingIdentification": {
            "maxLength": 16,
            "type": "string",
            "nullable": true
          },
          "street": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "region": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "postOfficeBox": {
            "maxLength": 35,
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "geographicLocation": {
            "$ref": "#/components/schemas/GeographicLocation"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "contactPointType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PostalAddressLookup": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "displayText": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PostalAddress-QueryResult": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostalAddress"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPaging"
          }
        }
      },
      "PostalAddressCreate": {
        "type": "object",
        "properties": {
          "addressType": {
            "type": "string",
            "nullable": true
          },
          "streetBuildingIdentification": {
            "maxLength": 16,
            "type": "string",
            "nullable": true
          },
          "street": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "region": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "postOfficeBox": {
            "maxLength": 35,
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "partyId": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProcessCreate": {
        "required": [
          "subject"
        ],
        "type": "object",
        "properties": {
          "subject": {
            "maxLength": 200,
            "type": "string"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "regarding": {
            "$ref": "#/components/schemas/Regarding"
          },
          "dateDue": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ProcessStage": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 100,
            "type": "string"
          },
          "name": {
            "maxLength": 256,
            "type": "string"
          },
          "advanceWithCancelledWorkItems": {
            "type": "boolean"
          }
        }
      },
      "ProcessAction": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 100,
            "type": "string"
          },
          "name": {
            "maxLength": 256,
            "type": "string"
          }
        }
      },
      "ProcessGateway": {
        "required": [
          "code",
          "type"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 100,
            "type": "string"
          },
          "type": {
            "maxLength": 256,
            "type": "string"
          }
        }
      },
      "WorkItemType": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 10,
            "type": "string"
          },
          "name": {
            "maxLength": 100,
            "type": "string"
          },
          "stage": {
            "type": "string",
            "nullable": true
          },
          "duration": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "cancellable": {
            "type": "boolean"
          }
        }
      },
      "ProcessType": {
        "required": [
          "code",
          "description",
          "name",
          "version"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 10,
            "type": "string"
          },
          "name": {
            "maxLength": 100,
            "type": "string"
          },
          "description": {
            "maxLength": 1000,
            "type": "string"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "stages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessStage"
            },
            "nullable": true
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessAction"
            },
            "nullable": true
          },
          "gateways": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessGateway"
            },
            "nullable": true
          },
          "activities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkItemType"
            },
            "nullable": true
          }
        }
      },
      "Reference2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProductType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "needType": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "provider": {
            "$ref": "#/components/schemas/Reference2"
          },
          "productType": {
            "$ref": "#/components/schemas/ProductType"
          }
        }
      },
      "ProductCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "providerId": {
            "type": "string",
            "nullable": true
          },
          "typeCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Prospect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "isPrimary": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "party": {
            "$ref": "#/components/schemas/Reference"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "clientStatusType": {
            "type": "string",
            "nullable": true
          },
          "teamMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "subsidiaryTeams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "subsidiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "powerOfAttorneyFor": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "wards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "employees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "trustees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "directors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "shareholders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "correspondents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "settlors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "beneficiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "jointInvestors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "teamMembersOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "parentTeams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "parentOrganisations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "powerOfAttorneys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "parents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "guardians": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "employers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "trusteesOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "directorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "shareholdersOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "correspondentsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "settlorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "beneficiariesOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "jointInvestorsOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "advisers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "productProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "professionals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "friends": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "spouses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "partners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "divorcees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "widowees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          },
          "familyMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            },
            "nullable": true
          }
        }
      },
      "RelationshipUpdate": {
        "type": "object",
        "properties": {
          "childRelationshipId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "RelationshipCreate": {
        "required": [
          "relationshipTypeCode"
        ],
        "type": "object",
        "properties": {
          "parentPartyRoleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "childPartyRoleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentPartyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "childPartyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relationshipTypeCode": {
            "type": "string"
          },
          "childRelationshipId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "RiskLevel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "RoleTypeCompact": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "partyType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RelationshipTypeCompact": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isHierarchical": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RelationshipTypeSimple": {
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/RoleTypeCompact"
          },
          "relationship": {
            "$ref": "#/components/schemas/RelationshipTypeCompact"
          },
          "relatedRole": {
            "$ref": "#/components/schemas/RoleTypeCompact"
          },
          "relatedRelationship": {
            "$ref": "#/components/schemas/RelationshipType"
          }
        }
      },
      "GlobalSearchResult": {
        "type": "object",
        "properties": {
          "entityType": {
            "type": "string",
            "nullable": true
          },
          "entityId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "recordDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "SocialAddress": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          },
          "addressType": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "contactPointType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SocialAddress-QueryResult": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocialAddress"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPaging"
          }
        }
      },
      "SocialAddressCreate": {
        "required": [
          "addressType",
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "maxLength": 1024,
            "type": "string"
          },
          "addressType": {
            "type": "string"
          },
          "partyId": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Version": {
        "type": "object",
        "properties": {
          "buildDateTimeUtc": {
            "type": "string",
            "format": "date-time"
          },
          "serverName": {
            "type": "string",
            "nullable": true
          },
          "commitSha": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "environment": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ThemeLogo": {
        "type": "object",
        "properties": {
          "fileIdentifier": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "background": {
            "type": "string",
            "nullable": true
          },
          "foreground": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ThemePaletteItem": {
        "type": "object",
        "properties": {
          "light": {
            "type": "string",
            "nullable": true
          },
          "main": {
            "type": "string",
            "nullable": true
          },
          "dark": {
            "type": "string",
            "nullable": true
          },
          "contrastText": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ThemeBackgroundItem": {
        "type": "object",
        "properties": {
          "default": {
            "type": "string",
            "nullable": true
          },
          "paper": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ThemePalette": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "primary": {
            "$ref": "#/components/schemas/ThemePaletteItem"
          },
          "secondary": {
            "$ref": "#/components/schemas/ThemePaletteItem"
          },
          "background": {
            "$ref": "#/components/schemas/ThemeBackgroundItem"
          },
          "error": {
            "$ref": "#/components/schemas/ThemePaletteItem"
          }
        }
      },
      "Theme": {
        "type": "object",
        "properties": {
          "logo": {
            "$ref": "#/components/schemas/ThemeLogo"
          },
          "palette": {
            "$ref": "#/components/schemas/ThemePalette"
          }
        }
      },
      "Item": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "icon": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Group": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            },
            "nullable": true
          }
        }
      },
      "NavBar": {
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Group"
            },
            "nullable": true
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "messageType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SystemStatus": {
        "type": "object",
        "properties": {
          "inMaintenanceMode": {
            "type": "boolean"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "nullable": true
          }
        }
      },
      "TagCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/TagCategory"
          }
        }
      },
      "Tag-QueryResult": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPaging"
          }
        }
      },
      "TagCreate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 512,
            "type": "string"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TagUpdate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 512,
            "type": "string"
          }
        }
      },
      "ActivityTaskCreate": {
        "type": "object",
        "properties": {
          "assignee": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "assigneeTeam": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "subject": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateActual": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationScheduled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationActual": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dateImportantUntil": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "regarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Regarding"
            },
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isPinned": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "Team": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "partyType": {
            "type": "string",
            "nullable": true
          },
          "defaultEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "partyRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartyRole"
            },
            "nullable": true
          },
          "contactPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactPoint"
            },
            "nullable": true
          }
        }
      },
      "Team-QueryResult": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Team"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPaging"
          }
        }
      },
      "TeamCreate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "type": "string"
          },
          "code": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "roleCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ActivityTimeBookingCreate": {
        "required": [
          "bookingType"
        ],
        "type": "object",
        "properties": {
          "bookingType": {
            "type": "string"
          },
          "costs": {
            "$ref": "#/components/schemas/CurrencyValue"
          },
          "subject": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "dateScheduled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateActual": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationScheduled": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "durationActual": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dateImportantUntil": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "regarding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Regarding"
            },
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParty"
            },
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isPinned": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "UserType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "User": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "userType": {
            "$ref": "#/components/schemas/UserType"
          },
          "tenant": {
            "type": "string",
            "nullable": true
          },
          "defaultTeam": {
            "$ref": "#/components/schemas/Reference"
          },
          "localeName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "partyType": {
            "type": "string",
            "nullable": true
          },
          "defaultEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "partyRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartyRole"
            },
            "nullable": true
          },
          "contactPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactPoint"
            },
            "nullable": true
          }
        }
      },
      "User-QueryResult": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPaging"
          }
        }
      },
      "UserCreate": {
        "required": [
          "firstName",
          "lastName",
          "locale",
          "roleCode"
        ],
        "type": "object",
        "properties": {
          "userName": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "maxLength": 80,
            "type": "string"
          },
          "lastName": {
            "maxLength": 80,
            "type": "string"
          },
          "code": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "locale": {
            "type": "string"
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "roleCode": {
            "type": "string"
          },
          "teamId": {
            "type": "integer",
            "format": "int32"
          },
          "userType": {
            "$ref": "#/components/schemas/UserType"
          }
        }
      },
      "UserTenant": {
        "type": "object",
        "properties": {
          "tenantCode": {
            "type": "string",
            "nullable": true
          },
          "tenantName": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          }
        }
      },
      "Today": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "appointments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityAppointment"
            },
            "nullable": true
          },
          "recents": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "nullable": true
          },
          "activeProcesses": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Process"
              }
            },
            "nullable": true
          },
          "outstandingWorkItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkItem"
            },
            "nullable": true
          },
          "birthdays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Person"
            },
            "nullable": true
          }
        }
      },
      "ProcessSummary": {
        "type": "object",
        "properties": {
          "typeCode": {
            "type": "string",
            "nullable": true
          },
          "open": {
            "type": "integer",
            "format": "int32"
          },
          "overdue": {
            "type": "integer",
            "format": "int32"
          },
          "closedInWeek": {
            "type": "integer",
            "format": "int32"
          },
          "closedInMonth": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WorkItemSummary": {
        "type": "object",
        "properties": {
          "open": {
            "type": "integer",
            "format": "int32"
          },
          "dueTomorrow": {
            "type": "integer",
            "format": "int32"
          },
          "dueToday": {
            "type": "integer",
            "format": "int32"
          },
          "dueYesterday": {
            "type": "integer",
            "format": "int32"
          },
          "overdue": {
            "type": "integer",
            "format": "int32"
          },
          "closedInWeek": {
            "type": "integer",
            "format": "int32"
          },
          "closedInMonth": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "NewBusinessSummary": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "estimatedValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "openDate": {
            "type": "string",
            "format": "date-time"
          },
          "estimatedCloseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "Dashboard": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "processSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessSummary"
            },
            "nullable": true
          },
          "workItemSummary": {
            "$ref": "#/components/schemas/WorkItemSummary"
          },
          "newBusinessSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewBusinessSummary"
            },
            "nullable": true
          },
          "outstandingWorkItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkItem"
            },
            "nullable": true
          }
        }
      },
      "Card": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "link": {
            "$ref": "#/components/schemas/Regarding"
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "related": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Regarding"
            },
            "nullable": true
          },
          "assignee": {
            "$ref": "#/components/schemas/Reference"
          },
          "dateDue": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "UserPasswordChange": {
        "required": [
          "newPassword",
          "oldPassword"
        ],
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        }
      },
      "SystemEntity": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          17,
          18,
          19,
          20,
          22,
          23,
          24,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          -3,
          -2,
          -1
        ],
        "type": "integer",
        "format": "int32"
      },
      "AuditAction": {
        "enum": [
          0,
          1,
          2,
          3,
          10,
          11,
          12
        ],
        "type": "integer",
        "format": "int32"
      },
      "WebHook": {
        "required": [
          "action",
          "entityType",
          "name",
          "party",
          "secret",
          "url"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "entityType": {
            "$ref": "#/components/schemas/SystemEntity"
          },
          "action": {
            "$ref": "#/components/schemas/AuditAction"
          },
          "party": {
            "$ref": "#/components/schemas/Reference2"
          },
          "url": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          }
        }
      },
      "WebHook-QueryResult": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebHook"
            },
            "nullable": true
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPaging"
          }
        }
      },
      "WebHookCreate": {
        "required": [
          "action",
          "entityType",
          "name",
          "partyId",
          "secret",
          "url"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "entityType": {
            "$ref": "#/components/schemas/SystemEntity"
          },
          "action": {
            "$ref": "#/components/schemas/AuditAction"
          },
          "partyId": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          }
        }
      },
      "Operation": {
        "type": "object",
        "properties": {
          "value": {
            "type": "object",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WebHookUpdate": {
        "required": [
          "name",
          "secret",
          "url"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      },
      "ApiKey": {
        "type": "apiKey",
        "description": "API Key. Example: \"x-portemis-api-key: {token}\"",
        "name": "x-portemis-api-key",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "JWT": [ ],
      "ApiKey": [ ]
    }
  ]
}