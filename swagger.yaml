openapi: 3.0.1
info:
  title: CLMi API
  description: This documentation is still under construction
  termsOfService: https://www.clmi.io
  contact:
    name: CLMi Developer Support
    url: https://www.clmi.io
    email: developers@clmi.io
  license:
    name: Licence desc
    url: https://www.clmi.io
  version: '1.0'
servers:
  - url: http://api-dev.portemis.net
paths:
  /api/Activity:
    get:
      tags:
        - Activities
      summary: Get all activities
      description: "Please don't overwrite this description!\n** It is too good**\nIt is really"
      operationId: Activity-GetAllActivities-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityQueryResult'
      x-clmi-tags:
        x-primary: Activities
    delete:
      tags:
        - Activities
      summary: Delete mulitple activities
      description: STOP DOING THIS!
      operationId: Activity-DeleteMultipleActivities-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Activity IDs
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: string
          application/json:
            schema:
              type: array
              items:
                type: string
          text/json:
            schema:
              type: array
              items:
                type: string
          application/*+json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Activities
  '/api/Activity/{id}':
    get:
      tags:
        - Activities
      summary: Get a single activity
      operationId: Activity-GetSingleActivity-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
      x-clmi-tags:
        x-primary: Activities
    delete:
      tags:
        - Activities
      summary: Delete an activity
      operationId: Activity-DeleteActivity-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Activities
    parameters:
      - name: id
        in: path
        description: Activity ID
        required: true
        schema:
          type: string
  /api/Activity/recent:
    get:
      tags:
        - Activities
      summary: Get Recent Activities
      operationId: Activity-GetRecentActivities-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecentRecord'
      x-clmi-tags:
        x-primary: Activities
  '/api/Activity/{id}/file':
    get:
      tags:
        - Activities
      summary: Get all files for an activity
      operationId: Activity-GetActivityFiles-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityFile'
      x-clmi-tags:
        x-primary: Activities
    parameters:
      - name: id
        in: path
        description: Activity ID
        required: true
        schema:
          type: string
  '/api/Activity/{id}/textanalysis':
    get:
      tags:
        - Activities
      summary: Get text analysis for activity
      operationId: Activity-GetTextAnalysis-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityFile'
      x-clmi-tags:
        x-primary: Activities
    parameters:
      - name: id
        in: path
        description: Activity ID
        required: true
        schema:
          type: string
  '/api/Activity/{id}/history':
    get:
      tags:
        - Activities
      summary: Get a single activity's history
      operationId: Activity-GetSingleActivityHistory-v1
      parameters:
        - name: includeProcessHistory
          in: query
          description: ''
          schema:
            type: boolean
            default: false
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityHistory'
      x-clmi-tags:
        x-primary: Activities
    parameters:
      - name: id
        in: path
        description: Activity ID
        required: true
        schema:
          type: string
  '/api/Activity/{id}/chat':
    get:
      tags:
        - Activities
      summary: Get a single activity's chat messages
      operationId: Activity-GetSingleActivityChat-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityChat'
      x-clmi-tags:
        x-primary: Activities
    post:
      tags:
        - Activities
      summary: Add a chat to an activity
      operationId: Activity-CreateActivityChat-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: The Chat object
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ActivityChatCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityChatCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/ActivityChatCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ActivityChatCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityChat'
      x-clmi-tags:
        x-primary: Activities
    parameters:
      - name: id
        in: path
        description: Activity ID
        required: true
        schema:
          type: string
  '/api/Activity/{id}/comment':
    post:
      tags:
        - Activities
      summary: Write to a single activity's history
      operationId: Activity-WriteActivityComment-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ActivityCommentCreateDto
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ActivityCommentCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityCommentCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/ActivityCommentCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ActivityCommentCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityHistory'
      x-clmi-tags:
        x-primary: Activities
    parameters:
      - name: id
        in: path
        description: Activity ID
        required: true
        schema:
          type: string
  '/api/Activity/{id}/status/{status}':
    post:
      tags:
        - Activities
      summary: Set the status of an activity
      operationId: Activity-SetStatusActivity-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
      x-clmi-tags:
        x-primary: Activities
    parameters:
      - name: id
        in: path
        description: Activity ID
        required: true
        schema:
          type: string
      - name: status
        in: path
        description: Status
        required: true
        schema:
          $ref: '#/components/schemas/ActivityStatusType'
  '/api/Activity/{id}/pin':
    patch:
      tags:
        - Activities
      summary: Pin an activity
      operationId: Activity-Pin-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Activities
    parameters:
      - name: id
        in: path
        description: Activity ID
        required: true
        schema:
          type: string
  '/api/Activity/{id}/unpin':
    patch:
      tags:
        - Activities
      summary: Un-pin an activity
      operationId: Activity-Unpin-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Activities
    parameters:
      - name: id
        in: path
        description: Activity ID
        required: true
        schema:
          type: string
  '/api/Adviser/{id}':
    get:
      tags:
        - Advisers
      summary: Get a single adviser
      operationId: Adviser-GetSingleAdviser-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Adviser'
      x-clmi-tags:
        x-primary: Advisers
    put:
      tags:
        - Advisers
      summary: Update a single adviser
      operationId: Adviser-UpdateAdviser-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Adviser'
          application/json:
            schema:
              $ref: '#/components/schemas/Adviser'
          text/json:
            schema:
              $ref: '#/components/schemas/Adviser'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Adviser'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Adviser'
      x-clmi-tags:
        x-primary: Advisers
    delete:
      tags:
        - Advisers
      summary: Delete an adviser
      operationId: Adviser-DeleteAdviser-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Advisers
    parameters:
      - name: id
        in: path
        description: Advisers ID (partyrole)
        required: true
        schema:
          type: string
  /api/Adviser:
    get:
      tags:
        - Advisers
      summary: Get all advisers
      operationId: Adviser-GetAllAdvisers-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Adviser'
      x-clmi-tags:
        x-primary: Advisers
    post:
      tags:
        - Advisers
      summary: "Add an adviser (brand new)\r\nWill create a person in the role of Adviser"
      operationId: Adviser-AddAdviser-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Adviser to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AdviserCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/AdviserCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/AdviserCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AdviserCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Party'
      x-clmi-tags:
        x-primary: Advisers
  /api/Adviser/favourite:
    get:
      tags:
        - Advisers
      summary: Get favourite advisers
      operationId: Adviser-GetFavouriteAdvisers-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Adviser'
      x-clmi-tags:
        x-primary: Advisers
  /api/Adviser/recent:
    get:
      tags:
        - Advisers
      summary: Get recent advisers
      operationId: Adviser-GetRecentAdvisers-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecentRecord'
      x-clmi-tags:
        x-primary: Advisers
  /api/Adviser/search:
    post:
      tags:
        - Advisers
      summary: Search advisers
      operationId: Adviser-SearchAdvisersWithFilter-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Adviser Filter
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AdviserFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/AdviserFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/AdviserFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AdviserFilter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdviserQueryResult'
      x-clmi-tags:
        x-primary: Advisers
  '/api/Appointment/{id}':
    get:
      tags:
        - Activities
        - Appointments
      summary: Get a single appointment
      operationId: Appointment-GetSingleAppointment-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityAppointment'
      x-clmi-tags:
        x-primary: Activities
    put:
      tags:
        - Activities
        - Appointments
      summary: Update an appointment
      operationId: Appointment-UpdateAppointment-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Appointment to update
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ActivityAppointment'
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityAppointment'
          text/json:
            schema:
              $ref: '#/components/schemas/ActivityAppointment'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ActivityAppointment'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityAppointment'
      x-clmi-tags:
        x-primary: Activities
    parameters:
      - name: id
        in: path
        description: Appointment Id
        required: true
        schema:
          type: string
  /api/Appointment:
    get:
      tags:
        - Activities
        - Appointments
      summary: Get all appointments
      operationId: Appointment-GetAllAppointments-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityAppointmentQueryResult'
      x-clmi-tags:
        x-primary: Activities
    post:
      tags:
        - Activities
        - Appointments
      summary: Add an appointment
      operationId: Appointment-AddAppointment-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Appointment to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ActivityAppointmentCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityAppointmentCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/ActivityAppointmentCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ActivityAppointmentCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityAppointment'
      x-clmi-tags:
        x-primary: Activities
  '/api/AppStatus/{id}':
    get:
      tags:
        - Applications
      summary: Get a single App Status
      operationId: AppStatus-GetSingleAppStatus-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppStatus'
      x-clmi-tags:
        x-primary: Applications
    patch:
      tags:
        - Applications
      summary: Set an app status's status
      operationId: AppStatus-SetAppStatusStatus-v1
      parameters:
        - name: status
          in: query
          description: Status
          schema:
            $ref: '#/components/schemas/AppStatusType'
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppStatus'
      x-clmi-tags:
        x-primary: Applications
    parameters:
      - name: id
        in: path
        description: AppStatus ID
        required: true
        schema:
          type: string
  /api/AppStatus:
    get:
      tags:
        - Applications
      summary: Get all App Statuses
      operationId: AppStatus-GetAllAppStatuses-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppStatus'
      x-clmi-tags:
        x-primary: Applications
  '/api/AppStatus/{id}/aml':
    get:
      tags:
        - Applications
      summary: Get an AML for an App
      operationId: AppStatus-GetAmlForApp-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmlReport'
      x-clmi-tags:
        x-primary: Applications
    patch:
      tags:
        - Applications
      summary: Run Due Diligence checks (AML) for an App and its related Party
      operationId: AppStatus-RunAmlForApp-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmlReport'
      x-clmi-tags:
        x-primary: Applications
    parameters:
      - name: id
        in: path
        description: App ID
        required: true
        schema:
          type: string
  '/api/AppStatus/{id}/testaml':
    get:
      tags:
        - Applications
      summary: Test the AML provider
      operationId: AppStatus-TestAml-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AmlPersonalDetails'
          application/json:
            schema:
              $ref: '#/components/schemas/AmlPersonalDetails'
          text/json:
            schema:
              $ref: '#/components/schemas/AmlPersonalDetails'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AmlPersonalDetails'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmlResponse'
      x-clmi-tags:
        x-primary: Applications
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /api/AppStatus/amlhit:
    post:
      tags:
        - Applications
      summary: Update an AML Hit status
      operationId: AppStatus-UpdateAmlHit-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AmlHitUpdate'
          application/json:
            schema:
              $ref: '#/components/schemas/AmlHitUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/AmlHitUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AmlHitUpdate'
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Applications
  '/api/Article/{id}':
    get:
      tags:
        - Articles
      summary: Get a single Article
      operationId: Article-GetSingleArticle-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
      x-clmi-tags:
        x-primary: Articles
    put:
      tags:
        - Articles
      summary: Update an article
      operationId: Article-UpdateArticle-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Article to udpate
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ArticleUpdate'
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/ArticleUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ArticleUpdate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
      x-clmi-tags:
        x-primary: Articles
    delete:
      tags:
        - Articles
      summary: Delete an article
      operationId: Article-DeleteArticle-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Articles
    parameters:
      - name: id
        in: path
        description: Article id
        required: true
        schema:
          type: string
  '/api/Article/{id}/image/{token}':
    get:
      tags:
        - Articles
      summary: Get a single party avatar using a temporary token rather than Auth header
      operationId: Article-GetArticleImageAnon-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Articles
    parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: string
      - name: token
        in: path
        description: ''
        required: true
        schema:
          type: string
  /api/Article:
    get:
      tags:
        - Articles
      summary: Get all Articles
      operationId: Article-GetAllArticles-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleQueryResult'
      x-clmi-tags:
        x-primary: Articles
    post:
      tags:
        - Articles
      summary: Create a article
      operationId: Article-AddArticle-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ArticleDto
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ArticleCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/ArticleCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ArticleCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
      x-clmi-tags:
        x-primary: Articles
  /api/Article/recent:
    get:
      tags:
        - Articles
      summary: Get recent articles
      operationId: Article-GetRecentArticles-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecentRecord'
      x-clmi-tags:
        x-primary: Articles
  '/api/Article/{id}/matchingclients':
    get:
      tags:
        - Articles
      summary: Get clients with matching tags
      operationId: Article-GetClientsWithMatchingTags-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
      x-clmi-tags:
        x-primary: Articles
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/api/Article/{id}/feedclients':
    get:
      tags:
        - Articles
      summary: Get all clients that have nudges against them (for this article)
      operationId: Article-GetClientsOnFeedForArticle-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
      x-clmi-tags:
        x-primary: Articles
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/Article/{id}/targetted':
    get:
      tags:
        - Articles
      summary: Return people that have been targetted to see this article
      operationId: Article-GetTargetted-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
      x-clmi-tags:
        x-primary: Articles
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/api/Article/{id}/viewed':
    get:
      tags:
        - Articles
      summary: Return people that have viewed the article (having been targetted)
      operationId: Article-GetArticleViews-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
      x-clmi-tags:
        x-primary: Articles
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/api/Article/{id}/comments':
    get:
      tags:
        - Articles
      summary: Return the comments against the article
      operationId: Article-GetArticleComments-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityChat'
      x-clmi-tags:
        x-primary: Articles
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /api/Article/fromurl:
    post:
      tags:
        - Articles
      summary: "Create an article from a Web URL\r\nOptionally create it now, otherwise it is returned unsaved for\r\nthe caller to amend/discard before passing to the main \"Create\" API"
      operationId: Article-FromUrl-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ArticleParseDto
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ArticleParse'
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleParse'
          text/json:
            schema:
              $ref: '#/components/schemas/ArticleParse'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ArticleParse'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
      x-clmi-tags:
        x-primary: Articles
  '/api/Article/{id}/status/{status}':
    post:
      tags:
        - Articles
      summary: Set the status of an article
      operationId: Article-SetStatusArticle-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
      x-clmi-tags:
        x-primary: Articles
    parameters:
      - name: id
        in: path
        description: Article ID
        required: true
        schema:
          type: string
      - name: status
        in: path
        description: Status
        required: true
        schema:
          $ref: '#/components/schemas/ArticleStatusType'
  /api/Article/search:
    post:
      tags:
        - Articles
      summary: Search articles
      operationId: Article-SearchArticlesWithFilter-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Article Filter
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ArticleFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/ArticleFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ArticleFilter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleQueryResult'
      x-clmi-tags:
        x-primary: Articles
  '/api/Article/{id}/image':
    post:
      tags:
        - Articles
      summary: Upload an image against an article
      operationId: Article-AddArticleImage-v1
      parameters:
        - name: fileIndex
          in: query
          description: ''
          schema:
            type: string
        - name: isPrimary
          in: query
          description: ''
          schema:
            type: boolean
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
      x-clmi-tags:
        x-primary: Articles
    delete:
      tags:
        - Articles
      summary: Delete an image against an article
      operationId: Article-DeleteArticleImage-v1
      parameters:
        - name: fileIndex
          in: query
          description: ''
          schema:
            type: string
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Articles
    parameters:
      - name: id
        in: path
        description: Article id
        required: true
        schema:
          type: string
  '/api/Article/{id}/file/{fileIndex}':
    post:
      tags:
        - Articles
      summary: Upload an file against an article
      operationId: Article-AddArticleFile-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Articles
    delete:
      tags:
        - Articles
      summary: Delete a file against an article
      operationId: Article-DeleteArticleFile-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Articles
    parameters:
      - name: id
        in: path
        description: Article id
        required: true
        schema:
          type: string
      - name: fileIndex
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/Article/{id}/image/primary/{fileIndex}':
    patch:
      tags:
        - Articles
      summary: Set an article image as the primary image
      operationId: Article-SetArticleImagePrimary-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Articles
    parameters:
      - name: id
        in: path
        description: Article id
        required: true
        schema:
          type: string
      - name: fileIndex
        in: path
        description: The index of the file to set as primary
        required: true
        schema:
          type: string
  '/api/Audit/{recordType}/{id}':
    get:
      tags:
        - Auditing
      summary: Get audit for a record
      operationId: Audit-GetRecordAudit-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditEvent'
      x-clmi-tags:
        x-primary: Auditing
    parameters:
      - name: recordType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SystemEntity'
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/api/BankAccount/{id}':
    get:
      tags:
        - Client Products
        - Bank Accounts4
      summary: Get a single BankAccount
      operationId: BankAccount-GetSingleBankAccount-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
      x-clmi-tags:
        x-primary: Client Products
    put:
      tags:
        - Client Products
        - Bank Accounts4
      summary: Update a Bank Account.
      operationId: BankAccount-UpdateBankAccount-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BankAccountUpdate'
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccountUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/BankAccountUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BankAccountUpdate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
      x-clmi-tags:
        x-primary: Client Products
    delete:
      tags:
        - Client Products
        - Bank Accounts4
      summary: Delete a Bank Account.
      operationId: BankAccount-DeleteBankAccount-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Client Products
    parameters:
      - name: id
        in: path
        description: BankAccount ID
        required: true
        schema:
          type: string
  /api/BankAccount:
    post:
      tags:
        - Client Products
        - Bank Accounts4
      summary: Add a Bank Account
      operationId: BankAccount-AddBankAccount-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BankAccountCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccountCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/BankAccountCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BankAccountCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
      x-clmi-tags:
        x-primary: Client Products
  '/api/Benchmark/{id}':
    get:
      tags:
        - Reference Data
        - Benchmarks
      summary: Get a single benchmark
      operationId: Benchmark-GetSingleBenchmark-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Benchmark'
      x-clmi-tags:
        x-primary: Reference Data
    put:
      tags:
        - Reference Data
        - Benchmarks
      summary: Update a Benchmark
      operationId: Benchmark-UpdateBenchmark-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Benchmark'
          application/json:
            schema:
              $ref: '#/components/schemas/Benchmark'
          text/json:
            schema:
              $ref: '#/components/schemas/Benchmark'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Benchmark'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Benchmark'
      x-clmi-tags:
        x-primary: Reference Data
    delete:
      tags:
        - Reference Data
        - Benchmarks
      summary: Delete a Benchmark
      operationId: Benchmark-DeleteBenchmark-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Reference Data
    parameters:
      - name: id
        in: path
        description: benchmark ID
        required: true
        schema:
          type: string
  /api/Benchmark:
    get:
      tags:
        - Reference Data
        - Benchmarks
      summary: Get all benchmarks
      operationId: Benchmark-GetAllBenchmarks-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Benchmark'
      x-clmi-tags:
        x-primary: Reference Data
    post:
      tags:
        - Reference Data
        - Benchmarks
      summary: Add a Benchmark
      operationId: Benchmark-AddBenchmark-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Benchmark'
          application/json:
            schema:
              $ref: '#/components/schemas/Benchmark'
          text/json:
            schema:
              $ref: '#/components/schemas/Benchmark'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Benchmark'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Benchmark'
      x-clmi-tags:
        x-primary: Reference Data
    delete:
      tags:
        - Reference Data
        - Benchmarks
      summary: Delete benchmarks
      operationId: Benchmark-DeleteMultipleBenchmarks-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Benchmark IDs
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: string
          application/json:
            schema:
              type: array
              items:
                type: string
          text/json:
            schema:
              type: array
              items:
                type: string
          application/*+json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Reference Data
  '/api/Calendar/{year}/{month}':
    get:
      tags:
        - Calendar
      summary: Get a calendar page for the current user.
      operationId: Calendar-GetCalendarEvents-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity'
      x-clmi-tags:
        x-primary: Calendar
    parameters:
      - name: year
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: month
        in: path
        required: true
        schema:
          type: integer
          format: int32
  '/api/Case/{id}':
    get:
      tags:
        - Cases
      summary: Get a single case
      operationId: Case-GetSingleCase-v1
      parameters:
        - name: activeWorkItemsOnly
          in: query
          description: Active work items only
          schema:
            type: boolean
            default: false
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
      x-clmi-tags:
        x-primary: Cases
    patch:
      tags:
        - Cases
      summary: Recalc Case (or all cases)
      operationId: Case-RecalcCase-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
      deprecated: true
      x-clmi-tags:
        x-primary: Cases
    delete:
      tags:
        - Cases
      summary: Delete a Case
      operationId: Case-DeleteCase-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Cases
    parameters:
      - name: id
        in: path
        description: Case ID
        required: true
        schema:
          type: string
  '/api/Case/{id}/history':
    get:
      tags:
        - Cases
      summary: Get case history
      operationId: Case-GetCaseHistory-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkItem'
      x-clmi-tags:
        x-primary: Cases
    parameters:
      - name: id
        in: path
        description: Case ID
        required: true
        schema:
          type: string
  /api/Case/favourite:
    get:
      tags:
        - Cases
      summary: Get Favourite Cases
      operationId: Case-GetFavouriteCases-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Case'
      x-clmi-tags:
        x-primary: Cases
  /api/Case:
    get:
      tags:
        - Cases
      summary: Get all cases
      operationId: Case-GetAllCases-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Case'
      x-clmi-tags:
        x-primary: Cases
  /api/Case/search:
    post:
      tags:
        - Cases
      summary: Search cases
      operationId: Case-SearchCasesWithFilter-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Case Filter
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProcessFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/ProcessFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProcessFilter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseQueryResult'
      x-clmi-tags:
        x-primary: Cases
  /api/CaseType:
    get:
      tags:
        - Reference Data
        - Cases
        - Case Types
      summary: Get all case types
      operationId: CaseType-GetCaseTypes-v1
      parameters:
        - name: activeOnly
          in: query
          description: ''
          schema:
            type: boolean
            default: false
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CaseType'
      x-clmi-tags:
        x-primary: Reference Data
  '/api/CaseType/{code}':
    get:
      tags:
        - Reference Data
        - Cases
        - Case Types
      summary: Get a single case type
      operationId: CaseType-GetCaseType-v1
      parameters:
        - name: caseVersion
          in: query
          description: Optionally specify a specific case type version
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseType'
      x-clmi-tags:
        x-primary: Reference Data
    parameters:
      - name: code
        in: path
        description: Case Type Code
        required: true
        schema:
          type: string
  '/api/CaseType/{code}/cases':
    get:
      tags:
        - Reference Data
        - Cases
        - Case Types
      summary: Get all cases by type
      operationId: CaseType-GetCasesByType-v1
      parameters:
        - name: loadRegardingObject
          in: query
          description: ''
          schema:
            type: boolean
            default: false
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Case'
      x-clmi-tags:
        x-primary: Reference Data
    parameters:
      - name: code
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/Client/{id}':
    get:
      tags:
        - Clients
      summary: Get a single client
      operationId: Client-GetSingleClient-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
      x-clmi-tags:
        x-primary: Clients
    put:
      tags:
        - Clients
      summary: Update a single client
      operationId: Client-UpdateClient-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Client'
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
          text/json:
            schema:
              $ref: '#/components/schemas/Client'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
      x-clmi-tags:
        x-primary: Clients
    parameters:
      - name: id
        in: path
        description: Clients ID (partyrole)
        required: true
        schema:
          type: string
  /api/Client:
    get:
      tags:
        - Clients
      summary: Get all clients
      operationId: Client-GetAllClients-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
      x-clmi-tags:
        x-primary: Clients
  /api/Client/favourite:
    get:
      tags:
        - Clients
      summary: Get favourite clients
      operationId: Client-GetFavouriteClients-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
      x-clmi-tags:
        x-primary: Clients
  /api/Client/recent:
    get:
      tags:
        - Clients
      summary: Get recent clients
      operationId: Client-GetRecentClients-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecentRecord'
      x-clmi-tags:
        x-primary: Clients
  '/api/Client/{id}/productgroups':
    get:
      tags:
        - Clients
      summary: Get all product groups for a client
      operationId: Client-GetProductGroupsForClient-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductGroup'
      x-clmi-tags:
        x-primary: Clients
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/Client/{id}/portfolio':
    get:
      tags:
        - Clients
      summary: Get all portfolios for a client
      operationId: Client-GetPortfoliosForClient-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductGroup'
      x-clmi-tags:
        x-primary: Clients
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/Client/{id}/products':
    get:
      tags:
        - Clients
      summary: Get all products for a client
      operationId: Client-GetAllProductsForClient-v1
      parameters:
        - name: excludeInPortfolios
          in: query
          description: True if only want to return products that aren't also in portfolios
          schema:
            type: boolean
            default: true
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientProduct'
      x-clmi-tags:
        x-primary: Clients
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/Client/{id}/accountholder':
    get:
      tags:
        - Clients
      summary: "Get the account holders for a client\r\nWill usually be the client themselves, but for a joint-client will include all joint-investors"
      operationId: Client-GetAccountHoldersForClient-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PartyRoleRelationship'
      x-clmi-tags:
        x-primary: Clients
    parameters:
      - name: id
        in: path
        description: Party ID
        required: true
        schema:
          type: string
  '/api/Client/{id}/authorisedparty':
    get:
      tags:
        - Clients
      summary: "Get the authorised parties for a client\r\nusually includes director, trustee etc."
      operationId: Client-GetAuthorisedPartiesForClient-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PartyRoleRelationship'
      x-clmi-tags:
        x-primary: Clients
    parameters:
      - name: id
        in: path
        description: Party ID
        required: true
        schema:
          type: string
  '/api/Client/{id}/otherparty':
    get:
      tags:
        - Clients
      summary: "Get the other parties for a client\r\n\"Other parties\" include the relationships that are not controlling and are the not the client themselves"
      operationId: Client-GetOtherPartiesForClient-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PartyRoleRelationship'
      x-clmi-tags:
        x-primary: Clients
    parameters:
      - name: id
        in: path
        description: Party ID
        required: true
        schema:
          type: string
  '/api/Client/{id}/family':
    get:
      tags:
        - Clients
      summary: Get the "family" relationships for a client
      operationId: Client-GetClientFamilyRoles-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PartyRoleRelationship'
      x-clmi-tags:
        x-primary: Clients
    parameters:
      - name: id
        in: path
        description: Party ID
        required: true
        schema:
          type: string
  '/api/Client/{id}/feed':
    get:
      tags:
        - Clients
      summary: Get all open feed nudges for a client
      operationId: Client-GetFeedForClient-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feed'
      x-clmi-tags:
        x-primary: Clients
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/Client/{id}/case':
    get:
      tags:
        - Clients
      summary: Get Client cases
      operationId: Client-GetClientCases-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Case'
      x-clmi-tags:
        x-primary: Clients
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/Client/{id}/heatmap':
    get:
      tags:
        - Clients
      summary: Get app statuses for a client
      operationId: Client-GetClientHeatMap-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientHeatMap'
      x-clmi-tags:
        x-primary: Clients
    parameters:
      - name: id
        in: path
        description: Client ID
        required: true
        schema:
          type: string
  '/api/Client/{id}/documents/checklist':
    get:
      tags:
        - Clients
      summary: "Return the document checklist for a client\r\nIncluding all client-roles"
      operationId: Client-GetClientMandatoryDocuments-v1
      parameters:
        - name: draft
          in: query
          schema:
            type: boolean
            default: true
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentGroup'
      x-clmi-tags:
        x-primary: Clients
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/api/Client/{id}/app/{appId}':
    get:
      tags:
        - Clients
      summary: Load client app summary information
      operationId: Client-GetClientApp-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppStatus'
      x-clmi-tags:
        x-primary: Clients
    parameters:
      - name: id
        in: path
        description: Client ID
        required: true
        schema:
          type: string
      - name: appId
        in: path
        description: App Status ID
        required: true
        schema:
          type: string
  '/api/Client/{id}/applicableRoles':
    get:
      tags:
        - Clients
      summary: Get applicable relationship/roles for a client
      operationId: Client-GetApplicableClientRelationships-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelationshipTypeSimple'
      x-clmi-tags:
        x-primary: Clients
    parameters:
      - name: id
        in: path
        description: Client ID
        required: true
        schema:
          type: string
  '/api/Client/{id}/applicableFamilyRoles':
    get:
      tags:
        - Clients
      summary: Get applicable "family" relationship/roles for a client
      operationId: Client-GetApplicableClientFamilyRelationships-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelationshipTypeSimple'
      x-clmi-tags:
        x-primary: Clients
    parameters:
      - name: id
        in: path
        description: Client ID
        required: true
        schema:
          type: string
  /api/Client/multiple:
    post:
      tags:
        - Clients
      summary: Get many clients
      operationId: Client-GetMultipleClients-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Client IDs
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: string
          application/json:
            schema:
              type: array
              items:
                type: string
          text/json:
            schema:
              type: array
              items:
                type: string
          application/*+json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
      x-clmi-tags:
        x-primary: Clients
  /api/Client/search:
    post:
      tags:
        - Clients
      summary: Search clients
      operationId: Client-SearchClientsWithFilter-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Client Filter
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ClientFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/ClientFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/ClientFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ClientFilter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientQueryResult'
      x-clmi-tags:
        x-primary: Clients
  '/api/Client/{id}/apps':
    patch:
      tags:
        - Clients
      summary: Create apps for a client
      operationId: Client-CreateClientApps-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppStatus'
      x-clmi-tags:
        x-primary: Clients
    parameters:
      - name: id
        in: path
        description: Client ID
        required: true
        schema:
          type: string
  /api/ClientDocument/search:
    post:
      tags:
        - Client Documents
      summary: Search client documents
      operationId: ClientDocument-SearchClientDocumentsWithFilter-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Client Documents Filter
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DocumentFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/DocumentFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DocumentFilter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentQueryResult'
      x-clmi-tags:
        x-primary: Client Documents
  '/api/ClientProduct/{id}':
    get:
      tags:
        - Client Products
      summary: Get a single Client Product
      operationId: ClientProduct-GetSingleClientProduct-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProduct'
      x-clmi-tags:
        x-primary: Client Products
    delete:
      tags:
        - Client Products
      summary: Delete a Client Product.
      operationId: ClientProduct-DeleteClientProduct-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Client Products
    parameters:
      - name: id
        in: path
        description: ClientProduct ID
        required: true
        schema:
          type: string
  /api/ClientProduct:
    get:
      tags:
        - Client Products
      summary: Get all Client Products
      operationId: ClientProduct-GetAllClientProducts-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientProduct'
      x-clmi-tags:
        x-primary: Client Products
    delete:
      tags:
        - Client Products
      summary: Delete a list of Client Products
      operationId: ClientProduct-DeleteClientProducts-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: string
          application/json:
            schema:
              type: array
              items:
                type: string
          text/json:
            schema:
              type: array
              items:
                type: string
          application/*+json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Client Products
  '/api/ClientProduct/{id}/feed':
    get:
      tags:
        - Client Products
      summary: "Get all open feed nudges for a product\r\n(Where the nudge originated from that product, or one of it's sub-accounts)"
      operationId: ClientProduct-GetFeedForProduct-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feed'
      x-clmi-tags:
        x-primary: Client Products
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/ClientProduct/{id}/cases':
    get:
      tags:
        - Client Products
      summary: Get all cases for the product
      operationId: ClientProduct-GetCasesForClientProduct-v1
      parameters:
        - name: loadRegardingObject
          in: query
          description: Load the full regarding object
          schema:
            type: boolean
            default: false
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Case'
      x-clmi-tags:
        x-primary: Client Products
    parameters:
      - name: id
        in: path
        description: Party Role ID
        required: true
        schema:
          type: string
  '/api/ClientProduct/{id}/roles':
    get:
      tags:
        - Client Products
      summary: Get the parties that play a role in respect of the client product
      operationId: ClientProduct-GetRolesForProduct-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientProductRole'
      x-clmi-tags:
        x-primary: Client Products
    parameters:
      - name: id
        in: path
        description: Party ID
        required: true
        schema:
          type: string
  '/api/ClientProduct/{id}/activities':
    get:
      tags:
        - Client Products
      summary: Get all activities linked to a client product
      operationId: ClientProduct-GetActivitiesForClientProduct-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityQueryResult'
      x-clmi-tags:
        x-primary: Client Products
    parameters:
      - name: id
        in: path
        description: Client Product Id
        required: true
        schema:
          type: string
  '/api/ClientProduct/{id}/note':
    get:
      tags:
        - Client Products
      summary: Get all notes for a client product
      operationId: ClientProduct-GetNotesForClientProduct-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityNoteQueryResult'
      x-clmi-tags:
        x-primary: Client Products
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/ClientProduct/{id}/document':
    get:
      tags:
        - Client Products
      summary: Get Documents (for the client related to the product)
      operationId: ClientProduct-GetDocumentsForClientProduct-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
      x-clmi-tags:
        x-primary: Client Products
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/Complaint/{id}':
    get:
      tags:
        - Complaints
      summary: Get a single complaint record
      operationId: Complaint-GetSingleComplaint-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Complaint'
      x-clmi-tags:
        x-primary: Complaints
    put:
      tags:
        - Complaints
      summary: Update an existing complaint
      operationId: Complaint-UpdateComplaint-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Complaint'
          application/json:
            schema:
              $ref: '#/components/schemas/Complaint'
          text/json:
            schema:
              $ref: '#/components/schemas/Complaint'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Complaint'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Complaint'
      x-clmi-tags:
        x-primary: Complaints
    delete:
      tags:
        - Complaints
      summary: Delete a complaint
      operationId: Complaint-DeleteComplaint-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Complaints
    parameters:
      - name: id
        in: path
        description: Complaint ID
        required: true
        schema:
          type: string
  /api/Complaint:
    get:
      tags:
        - Complaints
      summary: Get all complaint records
      operationId: Complaint-GetAllComplaints-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplaintQueryResult'
      x-clmi-tags:
        x-primary: Complaints
    post:
      tags:
        - Complaints
      summary: Create a new complaint
      operationId: Complaint-AddComplaint-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ComplaintCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/ComplaintCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/ComplaintCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ComplaintCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Complaint'
      x-clmi-tags:
        x-primary: Complaints
  /api/ContactPoint/lookup:
    get:
      tags:
        - Contact Points
      summary: Search contact points
      operationId: ContactPoint-Lookup-v1
      parameters:
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/ContactPointType'
        - name: query
          in: query
          schema:
            type: string
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LookupResult'
      x-clmi-tags:
        x-primary: Contact Points
  /api/ContactPoint:
    get:
      tags:
        - Contact Points
      summary: Get all contact points
      operationId: ContactPoint-GetAllContactPoints-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactPointQueryResult'
      x-clmi-tags:
        x-primary: Contact Points
    delete:
      tags:
        - Contact Points
      summary: Delete contact points
      operationId: ContactPoint-DeleteMultipleContactPoints-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Contact Point Ids
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: string
          application/json:
            schema:
              type: array
              items:
                type: string
          text/json:
            schema:
              type: array
              items:
                type: string
          application/*+json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Contact Points
  '/api/ContactPoint/{id}':
    get:
      tags:
        - Contact Points
      summary: Get a single contact point
      operationId: ContactPoint-GetSingleContactPoint-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactPoint'
      x-clmi-tags:
        x-primary: Contact Points
    delete:
      tags:
        - Contact Points
      summary: Delete a contact point
      operationId: ContactPoint-DeleteContactPoint-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Contact Points
    parameters:
      - name: id
        in: path
        description: Contact point Id
        required: true
        schema:
          type: string
  '/api/ContactPoint/{id}/status/{status}':
    post:
      tags:
        - Contact Points
      summary: Set the state of a contact point
      operationId: ContactPoint-SetStatusContactPoint-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactPoint'
      x-clmi-tags:
        x-primary: Contact Points
    parameters:
      - name: id
        in: path
        description: Contact Point Id
        required: true
        schema:
          type: string
      - name: status
        in: path
        description: Status
        required: true
        schema:
          $ref: '#/components/schemas/StatusType'
  /api/Country:
    get:
      tags:
        - Reference Data
        - Countries
      summary: Get all countries
      operationId: Country-GetAllCountries-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Country'
      x-clmi-tags:
        x-primary: Reference Data
  '/api/Country/{code}':
    get:
      tags:
        - Reference Data
        - Countries
      summary: Get a single country
      operationId: Country-GetSingleCountry-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
      x-clmi-tags:
        x-primary: Reference Data
    parameters:
      - name: code
        in: path
        description: Country Code
        required: true
        schema:
          type: string
  /api/Currency:
    get:
      tags:
        - Reference Data
        - Currencies
      summary: Get all currencies
      operationId: Currency-GetAllCurrencies-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Currency'
      x-clmi-tags:
        x-primary: Reference Data
  '/api/Currency/{code}':
    get:
      tags:
        - Reference Data
        - Currencies
      summary: Get a single currency
      operationId: Currency-GetSingleCurrency-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Currency'
      x-clmi-tags:
        x-primary: Reference Data
    parameters:
      - name: code
        in: path
        description: Currency Code
        required: true
        schema:
          type: string
  /api/Dashboard:
    get:
      tags:
        - Dashboards
      summary: Get all Dashboards enabled for the users tenant
      operationId: Dashboard-GetDashboards-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DashboardDefintion'
      x-clmi-tags:
        x-primary: Dashboards
  '/api/Dashboard/{key}/{id}':
    get:
      tags:
        - Dashboards
      summary: Get dashoard data
      operationId: Dashboard-GetDashboardData-v1
      parameters:
        - name: forceRefresh
          in: query
          description: Force live refresh of data
          schema:
            type: boolean
            default: false
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardData'
      x-clmi-tags:
        x-primary: Dashboards
    post:
      tags:
        - Dashboards
      summary: Get dashoard data
      operationId: Dashboard-GetDashboardDataWithItems-v1
      parameters:
        - name: forceRefresh
          in: query
          description: Force live refresh of data
          schema:
            type: boolean
            default: false
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Which dashboard items are requested
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: string
          application/json:
            schema:
              type: array
              items:
                type: string
          text/json:
            schema:
              type: array
              items:
                type: string
          application/*+json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardData'
      x-clmi-tags:
        x-primary: Dashboards
    parameters:
      - name: key
        in: path
        description: The dashboard key
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: Entity ID if applicable
        required: true
        schema:
          type: string
  '/api/DataLock/{id}':
    get:
      tags:
        - System
        - Data Locks
      summary: Get a single DataLock
      operationId: DataLock-GetSingleDataLock-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLock'
      x-clmi-tags:
        x-primary: System
    delete:
      tags:
        - System
        - Data Locks
      summary: Delete a DataLock
      operationId: DataLock-DeleteDataLock-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: System
    parameters:
      - name: id
        in: path
        description: DataLock ID
        required: true
        schema:
          type: string
  /api/DataLock:
    get:
      tags:
        - System
        - Data Locks
      summary: Get all Data Locks
      operationId: DataLock-GetAllDataLocks-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataLock'
      x-clmi-tags:
        x-primary: System
    post:
      tags:
        - System
        - Data Locks
      summary: Add a new DataLock
      operationId: DataLock-AddDataLock-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DataLockCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/DataLockCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/DataLockCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DataLockCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLock'
      x-clmi-tags:
        x-primary: System
  '/api/Decision/{decisionType}':
    get:
      tags:
        - Decisions
      summary: Get a single Decision
      operationId: Decision-GetSingleDecision-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Decision'
      x-clmi-tags:
        x-primary: Decisions
    parameters:
      - name: decisionType
        in: path
        description: Decision Type
        required: true
        schema:
          $ref: '#/components/schemas/DecisionType'
  '/api/Decision/entity/{entity}':
    get:
      tags:
        - Decisions
      summary: Get decisions by entity
      operationId: Decision-GetDecisionsByEntity-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Decision'
      x-clmi-tags:
        x-primary: Decisions
    parameters:
      - name: entity
        in: path
        description: Entity
        required: true
        schema:
          $ref: '#/components/schemas/SystemEntity'
  /api/Decision:
    get:
      tags:
        - Decisions
      summary: Get all Decisions
      operationId: Decision-GetAllDecisions-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Decision'
      x-clmi-tags:
        x-primary: Decisions
  '/api/Decision/{decisionType}/entity/{entity}/{id}':
    post:
      tags:
        - Decisions
      summary: Evaluate a single decision
      operationId: Decision-EvaluateDecision-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Optional JSON object containing the variables the decision is to be evaluated with. Each key corresponds to a variable name and each value to a variable value.   https://docs.camunda.org/manual/latest/reference/rest/decision-definition/post-evaluate/
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DecisionVariables'
          application/json:
            schema:
              $ref: '#/components/schemas/DecisionVariables'
          text/json:
            schema:
              $ref: '#/components/schemas/DecisionVariables'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DecisionVariables'
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Decisions
    parameters:
      - name: entity
        in: path
        description: Entity
        required: true
        schema:
          $ref: '#/components/schemas/SystemEntity'
      - name: decisionType
        in: path
        description: Decision Type
        required: true
        schema:
          $ref: '#/components/schemas/DecisionType'
      - name: id
        in: path
        description: Id
        required: true
        schema:
          type: string
  '/api/Decision/{decisionType}/client/{id}/entity/{entity}/{entityId}':
    post:
      tags:
        - Decisions
      summary: 'Evaluate a single decision - for a client and something, e.g. a partyrole or a product'
      operationId: Decision-EvaluateDecisionForClient-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Optional JSON object containing the variables the decision is to be evaluated with. Each key corresponds to a variable name and each value to a variable value.   https://docs.camunda.org/manual/latest/reference/rest/decision-definition/post-evaluate/
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DecisionVariables'
          application/json:
            schema:
              $ref: '#/components/schemas/DecisionVariables'
          text/json:
            schema:
              $ref: '#/components/schemas/DecisionVariables'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DecisionVariables'
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Decisions
    parameters:
      - name: entity
        in: path
        description: Entity
        required: true
        schema:
          $ref: '#/components/schemas/SystemEntity'
      - name: decisionType
        in: path
        description: Decision Type
        required: true
        schema:
          $ref: '#/components/schemas/DecisionType'
      - name: id
        in: path
        description: Client Id
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        description: Entity Id
        required: true
        schema:
          type: string
  /api/DecisionDefinition:
    get:
      tags:
        - Decisions
        - Decision Definitions
      summary: Get all decision definitions
      operationId: DecisionDefinition-GetDecisionDefinitions-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DecisionDefinition'
      x-clmi-tags:
        x-primary: Decisions
  '/api/DecisionDefinition/{code}':
    get:
      tags:
        - Decisions
        - Decision Definitions
      summary: Get a single decision definition
      operationId: DecisionDefinition-GetDecisionDefinition-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DecisionDefinition'
      x-clmi-tags:
        x-primary: Decisions
    parameters:
      - name: code
        in: path
        description: Decision Definition Key
        required: true
        schema:
          type: string
  '/api/DecisionDefinition/{code}/evaluate':
    post:
      tags:
        - Decisions
        - Decision Definitions
      summary: Evaluate a single decision definition.
      operationId: DecisionDefinition-Evaluate-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: A JSON object containing the variables the decision is to be evaluated with. Each key corresponds to a variable name and each value to a variable value.   https://docs.camunda.org/manual/latest/reference/rest/decision-definition/post-evaluate/
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DecisionVariables'
          application/json:
            schema:
              $ref: '#/components/schemas/DecisionVariables'
          text/json:
            schema:
              $ref: '#/components/schemas/DecisionVariables'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DecisionVariables'
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Decisions
    parameters:
      - name: code
        in: path
        description: Decision Definition Key
        required: true
        schema:
          type: string
  /api/DecisionDefinition/deploy:
    post:
      tags:
        - Decisions
        - Decision Definitions
      summary: Deploy decision
      operationId: DecisionDefinition-DeployDecision-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: deployDMN
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DecisionDeploy'
          application/json:
            schema:
              $ref: '#/components/schemas/DecisionDeploy'
          text/json:
            schema:
              $ref: '#/components/schemas/DecisionDeploy'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DecisionDeploy'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DecisionDefinition'
      x-clmi-tags:
        x-primary: Decisions
  '/api/Duplicate/{id}/notduplicate':
    post:
      tags:
        - Duplicates
      summary: Mark a potential duplicate record as not duplicates
      operationId: Duplicate-MarkNotDuplicates-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PotentialDuplicate'
      x-clmi-tags:
        x-primary: Duplicates
    parameters:
      - name: id
        in: path
        description: Potential Duplicate ID
        required: true
        schema:
          type: string
  '/api/Duplicate/{id}/merge/{targetId}':
    post:
      tags:
        - Duplicates
      summary: Merge the records of a potential duplicate record
      operationId: Duplicate-MergeDuplicates-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PotentialDuplicate'
      x-clmi-tags:
        x-primary: Duplicates
    parameters:
      - name: id
        in: path
        description: Potential Duplicate ID
        required: true
        schema:
          type: string
      - name: targetId
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/DuplicateDetectorType/{code}':
    get:
      tags:
        - Reference Data
        - Duplicates
        - Duplicate Detector Types
      summary: Get a single Duplicate Detector Type
      operationId: DuplicateDetectorType-GetSingleDuplicateDetectorType-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateDetectorType'
      x-clmi-tags:
        x-primary: Reference Data
    parameters:
      - name: code
        in: path
        description: Duplicate Detector Type Code
        required: true
        schema:
          type: string
  /api/DuplicateDetectorType:
    get:
      tags:
        - Reference Data
        - Duplicates
        - Duplicate Detector Types
      summary: Get all Duplicate Detector Types
      operationId: DuplicateDetectorType-GetAllDuplicateDetectorTypes-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DuplicateDetectorType'
      x-clmi-tags:
        x-primary: Reference Data
  '/api/ElectronicAddress/{id}':
    get:
      tags:
        - Contact Points
        - Electronic Addresses
      summary: Get a single electronic address
      operationId: ElectronicAddress-GetSingleElectronicAddress-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElectronicAddress'
      x-clmi-tags:
        x-primary: Contact Points
    put:
      tags:
        - Contact Points
        - Electronic Addresses
      summary: Update an electronic address.
      operationId: ElectronicAddress-UpdateElectronicAddress-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ElectronicAddress'
          application/json:
            schema:
              $ref: '#/components/schemas/ElectronicAddress'
          text/json:
            schema:
              $ref: '#/components/schemas/ElectronicAddress'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ElectronicAddress'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElectronicAddress'
      x-clmi-tags:
        x-primary: Contact Points
    parameters:
      - name: id
        in: path
        description: 'Electronic address Id (if an ID will try find by id, else will try find by email address)'
        required: true
        schema:
          type: string
  /api/ElectronicAddress:
    get:
      tags:
        - Contact Points
        - Electronic Addresses
      summary: Get all electronic addresses
      operationId: ElectronicAddress-GetAllElectronicAddresses-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElectronicAddressQueryResult'
      x-clmi-tags:
        x-primary: Contact Points
    post:
      tags:
        - Contact Points
        - Electronic Addresses
      summary: Add an electronic address
      operationId: ElectronicAddress-AddElectronicAddress-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Electronic Address to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ElectronicAddressCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/ElectronicAddressCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/ElectronicAddressCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ElectronicAddressCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElectronicAddress'
      x-clmi-tags:
        x-primary: Contact Points
  '/api/Email/{id}':
    get:
      tags:
        - Activities
        - Emails
      summary: Get a single email
      operationId: Email-GetSingleEmail-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityEmail'
      x-clmi-tags:
        x-primary: Activities
    put:
      tags:
        - Activities
        - Emails
      summary: Update an email
      operationId: Email-UpdateEmail-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Email to update
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ActivityEmail'
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityEmail'
          text/json:
            schema:
              $ref: '#/components/schemas/ActivityEmail'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ActivityEmail'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityEmail'
      x-clmi-tags:
        x-primary: Activities
    parameters:
      - name: id
        in: path
        description: Email Id
        required: true
        schema:
          type: string
  /api/Email:
    get:
      tags:
        - Activities
        - Emails
      summary: Get all emails
      operationId: Email-GetAllEmails-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityEmailQueryResult'
      x-clmi-tags:
        x-primary: Activities
    post:
      tags:
        - Activities
        - Emails
      summary: Add an email
      operationId: Email-AddEmail-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Email to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ActivityEmailCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityEmailCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/ActivityEmailCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ActivityEmailCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityEmail'
      x-clmi-tags:
        x-primary: Activities
  /api/Email/incoming:
    post:
      tags:
        - Activities
        - Emails
      summary: Endpoint to revieve an email from incoming email provider
      operationId: Email-ReceiveExternalEmail-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Activities
  /api/Feed:
    post:
      tags:
        - Feed
      summary: Get the feed for clients
      operationId: Feed-GetFeed-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Filtering options
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FeedFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/FeedFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/FeedFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FeedFilter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedQueryResult'
      x-clmi-tags:
        x-primary: Feed
  '/api/FeeStructure/{id}':
    get:
      tags:
        - Reference Data
        - Fee Structures
      summary: Get a single Fee Structure
      operationId: FeeStructure-GetSingleFeeStructure-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeStructure'
      x-clmi-tags:
        x-primary: Reference Data
    put:
      tags:
        - Reference Data
        - Fee Structures
      summary: Update a Fee Structure
      operationId: FeeStructure-UpdateFeeStructure-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FeeStructure'
          application/json:
            schema:
              $ref: '#/components/schemas/FeeStructure'
          text/json:
            schema:
              $ref: '#/components/schemas/FeeStructure'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FeeStructure'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeStructure'
      x-clmi-tags:
        x-primary: Reference Data
    delete:
      tags:
        - Reference Data
        - Fee Structures
      summary: Delete a Fee Structure
      operationId: FeeStructure-DeleteFeeStructure-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Reference Data
    parameters:
      - name: id
        in: path
        description: FeeStructure ID
        required: true
        schema:
          type: string
  /api/FeeStructure:
    get:
      tags:
        - Reference Data
        - Fee Structures
      summary: Get all Fee Structures
      operationId: FeeStructure-GetAllFeeStructures-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeStructureQueryResult'
      x-clmi-tags:
        x-primary: Reference Data
    post:
      tags:
        - Reference Data
        - Fee Structures
      summary: Add a new Fee Structure
      operationId: FeeStructure-AddFeeStructure-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FeeStructure'
          application/json:
            schema:
              $ref: '#/components/schemas/FeeStructure'
          text/json:
            schema:
              $ref: '#/components/schemas/FeeStructure'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FeeStructure'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeStructure'
      x-clmi-tags:
        x-primary: Reference Data
    delete:
      tags:
        - Reference Data
        - Fee Structures
      summary: Delete fee structures
      operationId: FeeStructure-DeleteMultipleFeeStructures-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Fee Structure IDs
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: string
          application/json:
            schema:
              type: array
              items:
                type: string
          text/json:
            schema:
              type: array
              items:
                type: string
          application/*+json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Reference Data
  '/api/File/{fileIndex}':
    get:
      tags:
        - Files
      summary: Get/download a file
      operationId: File-GetFile-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Files
    parameters:
      - name: fileIndex
        in: path
        description: The file index
        required: true
        schema:
          type: string
  /api/File:
    post:
      tags:
        - Files
      summary: Uploads a file
      operationId: File-UploadFile-v1
      parameters:
        - name: testing
          in: query
          description: ''
          schema:
            type: boolean
            default: false
        - name: testFileType
          in: query
          description: ''
          schema:
            type: string
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileIndex'
      x-clmi-tags:
        x-primary: Files
  '/api/FormData/{formName}/{id}':
    get:
      tags:
        - Forms
        - Form Data
      summary: Get form data
      operationId: FormData-GetFormData-v1
      parameters:
        - name: status
          in: query
          description: 'Status - If not supplied, assumes draft'
          schema:
            type: string
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDataInstance'
      x-clmi-tags:
        x-primary: Forms
    post:
      tags:
        - Forms
        - Form Data
      summary: Post form data
      operationId: FormData-SubmitFormData-v1
      parameters:
        - name: publish
          in: query
          description: ''
          schema:
            type: boolean
            default: false
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDataInstance'
      x-clmi-tags:
        x-primary: Forms
    patch:
      tags:
        - Forms
        - Form Data
      summary: Post form data
      operationId: FormData-PublishFormData-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Forms
    parameters:
      - name: formName
        in: path
        description: The form name
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: Entity ID
        required: true
        schema:
          type: string
  '/api/FormData/dummydata/{formName}':
    get:
      tags:
        - Forms
        - Form Data
      summary: Get dummy data for a form
      operationId: FormData-GetDummyFormData-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDataInstance'
      x-clmi-tags:
        x-primary: Forms
    parameters:
      - name: formName
        in: path
        description: Form Definition name
        required: true
        schema:
          type: string
  '/api/FormData/{formName}/initialisation':
    get:
      tags:
        - Forms
        - Form Data
      summary: Get blank/initialisation form data for a form
      operationId: FormData-GetInitialisationData-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDataInstance'
      x-clmi-tags:
        x-primary: Forms
    parameters:
      - name: formName
        in: path
        required: true
        schema:
          type: string
  '/api/FormData/{formName}/{id}/history':
    get:
      tags:
        - Forms
        - Form Data
      summary: Get submission history for a form
      operationId: FormData-GetHistory-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormDataHistory'
      x-clmi-tags:
        x-primary: Forms
    parameters:
      - name: formName
        in: path
        description: ''
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/FormData/clientfile/{partyId}/role/{partyRoleId}':
    get:
      tags:
        - Forms
        - Form Data
      summary: Get the draft client file
      operationId: FormData-GetClientFile-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientMaster'
      x-clmi-tags:
        x-primary: Forms
    parameters:
      - name: partyId
        in: path
        description: ''
        required: true
        schema:
          type: integer
          format: int32
      - name: partyRoleId
        in: path
        description: ''
        required: true
        schema:
          type: integer
          format: int32
  '/api/FormData/{formName}/function/{functionName}':
    patch:
      tags:
        - Forms
        - Form Data
      summary: Runs a serverside function on a form
      operationId: FormData-RunFunction-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormFunctionResult'
      x-clmi-tags:
        x-primary: Forms
    parameters:
      - name: formName
        in: path
        description: The form name
        required: true
        schema:
          type: string
      - name: functionName
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/FormDefinition/{code}':
    get:
      tags:
        - Forms
        - Form Definitions
      summary: Get a Latest Form Definition and its schema
      operationId: FormDefinition-GetLatestFormDefinition-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDefinitionWithSchema'
      x-clmi-tags:
        x-primary: Forms
    parameters:
      - name: code
        in: path
        description: Form Definition name
        required: true
        schema:
          type: string
  '/api/FormDefinition/{code}/conditions':
    get:
      tags:
        - Forms
        - Form Definitions
      summary: Get a human readable list of the form conditions
      operationId: FormDefinition-GetFormConditionsMarkdown-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
      x-clmi-tags:
        x-primary: Forms
    parameters:
      - name: code
        in: path
        description: Form Definition name
        required: true
        schema:
          type: string
  '/api/FormDefinition/{code}/version/{formVersion}':
    get:
      tags:
        - Forms
        - Form Definitions
      summary: Get specific version of a Form Definition and its schema
      operationId: FormDefinition-GetFormDefinitionByVersion-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDefinitionWithSchema'
      x-clmi-tags:
        x-primary: Forms
    parameters:
      - name: code
        in: path
        description: Form Definition name
        required: true
        schema:
          type: string
      - name: formVersion
        in: path
        description: Form Definition version
        required: true
        schema:
          type: integer
          format: int32
  /api/FormDefinition:
    get:
      tags:
        - Forms
        - Form Definitions
      summary: Get all Form Definitions
      operationId: FormDefinition-GetAllFormDefinitions-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormDefinition'
      x-clmi-tags:
        x-primary: Forms
  /api/FormDefinition/validate:
    get:
      tags:
        - Forms
        - Form Definitions
      summary: Get all Form Definitions
      operationId: FormDefinition-ValidateFormSchemas-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      x-clmi-tags:
        x-primary: Forms
  '/api/FormLayout/{form}':
    get:
      tags:
        - Forms
        - Form Layouts
      summary: Get a Latest Form Layout
      operationId: FormLayout-GetLayout-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormLayout'
      x-clmi-tags:
        x-primary: Forms
    parameters:
      - name: form
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/FormLayout/{form}/version/{formVersion}':
    get:
      tags:
        - Forms
        - Form Layouts
      summary: Get specific version of a Form Layout
      operationId: FormLayout-GetFormLayoutsByVersion-v1
      parameters:
        - name: includeSystemProperties
          in: query
          description: Include system properties in schema
          schema:
            type: boolean
            default: false
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDefinitionWithSchema'
      x-clmi-tags:
        x-primary: Forms
    parameters:
      - name: form
        in: path
        description: Form name
        required: true
        schema:
          type: string
      - name: formVersion
        in: path
        description: Form version
        required: true
        schema:
          type: integer
          format: int32
  '/api/GoalType/{code}':
    get:
      tags:
        - Reference Data
        - Goal Types
      summary: Get a single Goal Type
      operationId: GoalType-GetSingleGoalType-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalType'
      x-clmi-tags:
        x-primary: Reference Data
    parameters:
      - name: code
        in: path
        description: Goal Type Code
        required: true
        schema:
          type: string
  /api/GoalType:
    get:
      tags:
        - Reference Data
        - Goal Types
      summary: Get all Goal Types
      operationId: GoalType-GetAllGoalTypes-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GoalType'
      x-clmi-tags:
        x-primary: Reference Data
  /api/GraphQL:
    post:
      tags:
        - GraphQL
      summary: "Execute a GraphQL query\r\n///"
      operationId: GraphQL-PostAsync-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          application/json:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: GraphQL
  '/api/InsuranceAccount/{id}':
    get:
      tags:
        - Client Products
        - Insurance Accounts
      summary: Get a single InsuranceAccount
      operationId: InsuranceAccount-GetSingleInsuranceAccount-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsuranceAccount'
      x-clmi-tags:
        x-primary: Client Products
    put:
      tags:
        - Client Products
        - Insurance Accounts
      summary: Update a Insurance Account.
      operationId: InsuranceAccount-UpdateInsuranceAccount-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/InsuranceAccountUpdate'
          application/json:
            schema:
              $ref: '#/components/schemas/InsuranceAccountUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/InsuranceAccountUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/InsuranceAccountUpdate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsuranceAccount'
      x-clmi-tags:
        x-primary: Client Products
    delete:
      tags:
        - Client Products
        - Insurance Accounts
      summary: Delete a Insurance Account.
      operationId: InsuranceAccount-DeleteInsuranceAccount-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Client Products
    parameters:
      - name: id
        in: path
        description: InsuranceAccount ID
        required: true
        schema:
          type: string
  /api/InsuranceAccount:
    post:
      tags:
        - Client Products
        - Insurance Accounts
      summary: Add a Insurance Account
      operationId: InsuranceAccount-AddInsuranceAccount-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/InsuranceAccountCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/InsuranceAccountCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/InsuranceAccountCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/InsuranceAccountCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsuranceAccount'
      x-clmi-tags:
        x-primary: Client Products
  '/api/Intermediary/{id}':
    get:
      tags:
        - Intermediaries
      summary: Get a single intermediary
      operationId: Intermediary-GetSingleIntermediary-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Intermediary'
      x-clmi-tags:
        x-primary: Intermediaries
    put:
      tags:
        - Intermediaries
      summary: Update a single intermediary
      operationId: Intermediary-UpdateIntermediary-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Intermediary'
          application/json:
            schema:
              $ref: '#/components/schemas/Intermediary'
          text/json:
            schema:
              $ref: '#/components/schemas/Intermediary'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Intermediary'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Intermediary'
      x-clmi-tags:
        x-primary: Intermediaries
    delete:
      tags:
        - Intermediaries
      summary: Delete an intermediary
      operationId: Intermediary-DeleteIntermediary-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Intermediaries
    parameters:
      - name: id
        in: path
        description: Intermediaries ID (partyrole)
        required: true
        schema:
          type: string
  /api/Intermediary:
    get:
      tags:
        - Intermediaries
      summary: Get all intermediaries
      operationId: Intermediary-GetAllIntermediaries-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Intermediary'
      x-clmi-tags:
        x-primary: Intermediaries
    post:
      tags:
        - Intermediaries
      summary: Add an intermediary
      operationId: Intermediary-AddIntermediary-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Intermediary to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/IntermediaryCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/IntermediaryCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/IntermediaryCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IntermediaryCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Party'
      x-clmi-tags:
        x-primary: Intermediaries
  /api/Intermediary/favourite:
    get:
      tags:
        - Intermediaries
      summary: Get favourite intermediaries
      operationId: Intermediary-GetFavouriteIntermediaries-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Intermediary'
      x-clmi-tags:
        x-primary: Intermediaries
  /api/Intermediary/recent:
    get:
      tags:
        - Intermediaries
      summary: Get recent intermediaries
      operationId: Intermediary-GetRecentIntermediaries-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecentRecord'
      x-clmi-tags:
        x-primary: Intermediaries
  /api/Intermediary/search:
    post:
      tags:
        - Intermediaries
      summary: Search intermediaries
      operationId: Intermediary-SearchIntermediariesWithFilter-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Intermediary Filter
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/IntermediaryFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/IntermediaryFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/IntermediaryFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IntermediaryFilter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntermediaryQueryResult'
      x-clmi-tags:
        x-primary: Intermediaries
  '/api/InvestmentAccount/{id}':
    get:
      tags:
        - Client Products
        - Investment Accounts
      summary: Get a single Investment Account
      operationId: InvestmentAccount-GetSingleInvestmentAccount-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestmentAccount'
      x-clmi-tags:
        x-primary: Client Products
    put:
      tags:
        - Client Products
        - Investment Accounts
      summary: Update an Investment Account.
      operationId: InvestmentAccount-UpdateInvestmentAccount-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/InvestmentAccountUpdate'
          application/json:
            schema:
              $ref: '#/components/schemas/InvestmentAccountUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/InvestmentAccountUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/InvestmentAccountUpdate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestmentAccount'
      x-clmi-tags:
        x-primary: Client Products
    delete:
      tags:
        - Client Products
        - Investment Accounts
      summary: Delete an Investment Account.
      operationId: InvestmentAccount-DeleteInvestmentAccount-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Client Products
    parameters:
      - name: id
        in: path
        description: Investment Account ID
        required: true
        schema:
          type: string
  /api/InvestmentAccount:
    post:
      tags:
        - Client Products
        - Investment Accounts
      summary: Add an investment account
      operationId: InvestmentAccount-AddInvestmentAccount-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/InvestmentAccountCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/InvestmentAccountCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/InvestmentAccountCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/InvestmentAccountCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestmentAccount'
      x-clmi-tags:
        x-primary: Client Products
  '/api/InvestmentData/{level}/{id}/valuation':
    get:
      tags:
        - Investment Data
      summary: Get the Latest Valution for an Account/Client/Group
      operationId: InvestmentData-GetLatestValuation-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValuationHeader'
      x-clmi-tags:
        x-primary: Investment Data
    parameters:
      - name: level
        in: path
        description: ''
        required: true
        schema:
          $ref: '#/components/schemas/ValuationLevel'
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/InvestmentData/{level}/{id}/valuation/{chart}':
    get:
      tags:
        - Investment Data
      summary: Get the Valution Summary for an Account/Client/Group
      operationId: InvestmentData-GetValuationSummary-v1
      parameters:
        - name: maxSegments
          in: query
          description: ''
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KeyValuePoint'
      x-clmi-tags:
        x-primary: Investment Data
    parameters:
      - name: level
        in: path
        description: ''
        required: true
        schema:
          $ref: '#/components/schemas/ValuationLevel'
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
      - name: chart
        in: path
        description: ''
        required: true
        schema:
          $ref: '#/components/schemas/ValuationSummaryChartType'
  '/api/InvestmentData/{level}/{id}/valuationhistory/{period}':
    get:
      tags:
        - Investment Data
      summary: Get the Valution History for an Account/Client/Group
      operationId: InvestmentData-GetValuationHistory-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValuationHistory'
      x-clmi-tags:
        x-primary: Investment Data
    parameters:
      - name: level
        in: path
        description: ''
        required: true
        schema:
          $ref: '#/components/schemas/ValuationLevel'
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
      - name: period
        in: path
        description: ''
        required: true
        schema:
          $ref: '#/components/schemas/PerformancePeriod'
  '/api/InvestmentData/{level}/{id}/performance/{period}':
    get:
      tags:
        - Investment Data
      summary: Get the Performance Returns for an Account/Client/Group
      operationId: InvestmentData-GetPerformance-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Performance'
      x-clmi-tags:
        x-primary: Investment Data
    parameters:
      - name: level
        in: path
        description: ''
        required: true
        schema:
          $ref: '#/components/schemas/ValuationLevel'
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
      - name: period
        in: path
        description: ''
        required: true
        schema:
          $ref: '#/components/schemas/PerformancePeriod'
  '/api/InvestmentData/{level}/{id}/positions':
    get:
      tags:
        - Investment Data
      summary: Get the Security Positions for an Account/Client/Group
      operationId: InvestmentData-GetSecurityPositions-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityPositionQueryResult'
      x-clmi-tags:
        x-primary: Investment Data
    parameters:
      - name: level
        in: path
        description: ''
        required: true
        schema:
          $ref: '#/components/schemas/ValuationLevel'
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/InvestmentData/{level}/{id}/transactions':
    get:
      tags:
        - Investment Data
      summary: Get the Security Transactions for an Account/Client/Group
      operationId: InvestmentData-GetSecurityTransactions-v1
      parameters:
        - name: fromDate
          in: query
          description: ''
          schema:
            type: string
            format: date-time
        - name: toDate
          in: query
          description: ''
          schema:
            type: string
            format: date-time
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityTransactionQueryResult'
      x-clmi-tags:
        x-primary: Investment Data
    parameters:
      - name: level
        in: path
        description: ''
        required: true
        schema:
          $ref: '#/components/schemas/ValuationLevel'
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/InvestmentData/{level}/{id}/positions/{positionId}/transactions':
    get:
      tags:
        - Investment Data
      summary: Get the Security Transactions for a specifc security position
      operationId: InvestmentData-GetPositionTransactions-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityTransactionQueryResult'
      x-clmi-tags:
        x-primary: Investment Data
    parameters:
      - name: level
        in: path
        description: ''
        required: true
        schema:
          $ref: '#/components/schemas/ValuationLevel'
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
      - name: positionId
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/InvestmentData/{level}/{id}/transactions/recent':
    get:
      tags:
        - Investment Data
      summary: Get recent Security Transactions - use paging headers to control how many
      operationId: InvestmentData-GetRecentTransactions-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityTransactionQueryResult'
      x-clmi-tags:
        x-primary: Investment Data
    parameters:
      - name: level
        in: path
        description: ''
        required: true
        schema:
          $ref: '#/components/schemas/ValuationLevel'
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/InvestmentData/{level}/{id}/movements/recent':
    get:
      tags:
        - Investment Data
      summary: Get recent Cash movemments - use paging header to control how many
      operationId: InvestmentData-GetRecentCashMovements-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashMovementQueryResult'
      x-clmi-tags:
        x-primary: Investment Data
    parameters:
      - name: level
        in: path
        description: ''
        required: true
        schema:
          $ref: '#/components/schemas/ValuationLevel'
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/InvestmentData/{level}/{id}/movements/inout':
    get:
      tags:
        - Investment Data
      summary: Get recent Contribution and Withdrawals
      operationId: InvestmentData-GetContributionsAndWithdrawals-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashMovementQueryResult'
      x-clmi-tags:
        x-primary: Investment Data
    parameters:
      - name: level
        in: path
        description: ''
        required: true
        schema:
          $ref: '#/components/schemas/ValuationLevel'
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/InvestmentData/{level}/{id}/movements':
    get:
      tags:
        - Investment Data
      summary: Get Cash Movement for Account/Client/Group
      operationId: InvestmentData-GetCashMovements-v1
      parameters:
        - name: fromDate
          in: query
          description: ''
          schema:
            type: string
            format: date-time
        - name: toDate
          in: query
          description: ''
          schema:
            type: string
            format: date-time
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashMovementQueryResult'
      x-clmi-tags:
        x-primary: Investment Data
    parameters:
      - name: level
        in: path
        description: ''
        required: true
        schema:
          $ref: '#/components/schemas/ValuationLevel'
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/InvestmentData/{level}/{id}/cashaccounts':
    get:
      tags:
        - Investment Data
      summary: Get Cash Accounts for Account/Client/Group
      operationId: InvestmentData-GetCashAccounts-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashAccountQueryResult'
      x-clmi-tags:
        x-primary: Investment Data
    parameters:
      - name: level
        in: path
        description: ''
        required: true
        schema:
          $ref: '#/components/schemas/ValuationLevel'
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/InvestmentData/{level}/{id}/cashsummary':
    get:
      tags:
        - Investment Data
      summary: Get Cash Summary for Account/Client/Group
      operationId: InvestmentData-GetCashSummary-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashSummary'
      x-clmi-tags:
        x-primary: Investment Data
    parameters:
      - name: level
        in: path
        description: ''
        required: true
        schema:
          $ref: '#/components/schemas/ValuationLevel'
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  /api/KanbanStage:
    get:
      tags:
        - Kanban Stages
      summary: Get all kanban stages
      operationId: KanbanStage-GetKanbanStages-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KanbanStage'
      x-clmi-tags:
        x-primary: Kanban Stages
  '/api/KanbanStage/type/{typeCode}':
    get:
      tags:
        - Kanban Stages
      summary: Get all kanban stages for a type
      operationId: KanbanStage-GetKanbanStagesByType-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KanbanStage'
      x-clmi-tags:
        x-primary: Kanban Stages
    parameters:
      - name: typeCode
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/Lead/{id}':
    get:
      tags:
        - Leads
      summary: Get a single lead
      operationId: Lead-GetSingleLead-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lead'
      x-clmi-tags:
        x-primary: Leads
    put:
      tags:
        - Leads
      summary: Update a single lead
      operationId: Lead-UpdateLead-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Lead'
          application/json:
            schema:
              $ref: '#/components/schemas/Lead'
          text/json:
            schema:
              $ref: '#/components/schemas/Lead'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Lead'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lead'
      x-clmi-tags:
        x-primary: Leads
    parameters:
      - name: id
        in: path
        description: Lead ID (partyrole)
        required: true
        schema:
          type: string
  /api/Lead:
    get:
      tags:
        - Leads
      summary: Get all leads
      operationId: Lead-GetAllLeads-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lead'
      x-clmi-tags:
        x-primary: Leads
  /api/Lead/favourite:
    get:
      tags:
        - Leads
      summary: Get favourite leads
      operationId: Lead-GetFavouriteLeads-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lead'
      x-clmi-tags:
        x-primary: Leads
  /api/Lead/recent:
    get:
      tags:
        - Leads
      summary: Get recent leads
      operationId: Lead-GetRecentLeads-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lead'
      x-clmi-tags:
        x-primary: Leads
  /api/Lead/multiple:
    post:
      tags:
        - Leads
      summary: Get many leads
      operationId: Lead-GetMultipleLeads-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Lead IDs
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: string
          application/json:
            schema:
              type: array
              items:
                type: string
          text/json:
            schema:
              type: array
              items:
                type: string
          application/*+json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lead'
      x-clmi-tags:
        x-primary: Leads
  '/api/LendingAccount/{id}':
    get:
      tags:
        - Client Products
        - Lending Accounts
      summary: Get a single LendingAccount
      operationId: LendingAccount-GetSingleLendingAccount-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LendingAccount'
      x-clmi-tags:
        x-primary: Client Products
    put:
      tags:
        - Client Products
        - Lending Accounts
      summary: Update a Lending Account.
      operationId: LendingAccount-UpdateLendingAccount-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/LendingAccountUpdate'
          application/json:
            schema:
              $ref: '#/components/schemas/LendingAccountUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/LendingAccountUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LendingAccountUpdate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LendingAccount'
      x-clmi-tags:
        x-primary: Client Products
    delete:
      tags:
        - Client Products
        - Lending Accounts
      summary: Delete a Lending Account.
      operationId: LendingAccount-DeleteLendingAccount-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Client Products
    parameters:
      - name: id
        in: path
        description: LendingAccount ID
        required: true
        schema:
          type: string
  /api/LendingAccount:
    post:
      tags:
        - Client Products
        - Lending Accounts
      summary: Add a Lending Account
      operationId: LendingAccount-AddLendingAccount-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/LendingAccountCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/LendingAccountCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/LendingAccountCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LendingAccountCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LendingAccount'
      x-clmi-tags:
        x-primary: Client Products
  /api/Locale:
    get:
      tags:
        - System
        - Locales
      summary: Get all system locales
      operationId: Locale-GetAllLocales-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Locale'
      x-clmi-tags:
        x-primary: System
  '/api/Locale/{code}':
    get:
      tags:
        - System
        - Locales
      summary: Get a single system locale
      operationId: Locale-GetSingleLocale-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locale'
      x-clmi-tags:
        x-primary: System
    parameters:
      - name: code
        in: path
        description: Locale Code
        required: true
        schema:
          type: string
  '/api/Lookup/{source}':
    get:
      tags:
        - Forms
        - Lookups
      summary: Get a single locale
      operationId: Lookup-PerformLookup-v1
      parameters:
        - name: search
          in: query
          description: The search text
          schema:
            type: string
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LookupFieldResult'
      x-clmi-tags:
        x-primary: Forms
    parameters:
      - name: source
        in: path
        description: The lookup source
        required: true
        schema:
          $ref: '#/components/schemas/LookupSourceType'
  '/api/Mandate/{id}':
    get:
      tags:
        - Reference Data
        - Mandates
      summary: Get a single mandate
      operationId: Mandate-GetSingleMandate-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mandate'
      x-clmi-tags:
        x-primary: Reference Data
    put:
      tags:
        - Reference Data
        - Mandates
      summary: Update a Mandate
      operationId: Mandate-UpdateMandate-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Mandate'
          application/json:
            schema:
              $ref: '#/components/schemas/Mandate'
          text/json:
            schema:
              $ref: '#/components/schemas/Mandate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Mandate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mandate'
      x-clmi-tags:
        x-primary: Reference Data
    delete:
      tags:
        - Reference Data
        - Mandates
      summary: Delete a Mandate
      operationId: Mandate-DeleteMandate-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Reference Data
    parameters:
      - name: id
        in: path
        description: Mandate ID
        required: true
        schema:
          type: string
  /api/Mandate:
    get:
      tags:
        - Reference Data
        - Mandates
      summary: Get all mandates
      operationId: Mandate-GetAllMandates-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mandate'
      x-clmi-tags:
        x-primary: Reference Data
    post:
      tags:
        - Reference Data
        - Mandates
      summary: Add a new Mandate
      operationId: Mandate-AddMandate-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Mandate'
          application/json:
            schema:
              $ref: '#/components/schemas/Mandate'
          text/json:
            schema:
              $ref: '#/components/schemas/Mandate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Mandate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mandate'
      x-clmi-tags:
        x-primary: Reference Data
    delete:
      tags:
        - Reference Data
        - Mandates
      summary: Delete a list of Mandates
      operationId: Mandate-DeleteMandates-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: string
          application/json:
            schema:
              type: array
              items:
                type: string
          text/json:
            schema:
              type: array
              items:
                type: string
          application/*+json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Reference Data
  '/api/NewBusiness/{id}':
    get:
      tags:
        - New Business
      summary: Get a single new business record
      operationId: NewBusiness-GetSingleNewBusiness-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewBusiness'
      x-clmi-tags:
        x-primary: New Business
    put:
      tags:
        - New Business
      summary: Update a New Business record
      operationId: NewBusiness-UpdateNewBusiness-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/NewBusinessCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/NewBusinessCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/NewBusinessCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NewBusinessCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewBusiness'
      x-clmi-tags:
        x-primary: New Business
    delete:
      tags:
        - New Business
      summary: Delete a New Business record
      operationId: NewBusiness-DeleteNewBusiness-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewBusiness'
      x-clmi-tags:
        x-primary: New Business
    parameters:
      - name: id
        in: path
        description: NewBusiness ID
        required: true
        schema:
          type: string
  /api/NewBusiness:
    get:
      tags:
        - New Business
      summary: Get all new business records
      operationId: NewBusiness-GetAllNewBusiness-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewBusinessQueryResult'
      x-clmi-tags:
        x-primary: New Business
    post:
      tags:
        - New Business
      summary: Add a New Busines record
      operationId: NewBusiness-AddNewBusiness-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/NewBusinessCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/NewBusinessCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/NewBusinessCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NewBusinessCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewBusiness'
      x-clmi-tags:
        x-primary: New Business
  '/api/Note/{id}':
    get:
      tags:
        - Activities
        - Notes
      summary: Get a single note
      operationId: Note-GetSingleNote-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityNote'
      x-clmi-tags:
        x-primary: Activities
    put:
      tags:
        - Activities
        - Notes
      summary: Update a note
      operationId: Note-UpdateNote-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Note to update
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ActivityNote'
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityNote'
          text/json:
            schema:
              $ref: '#/components/schemas/ActivityNote'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ActivityNote'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityNote'
      x-clmi-tags:
        x-primary: Activities
    delete:
      tags:
        - Activities
        - Notes
      summary: Delete a note
      operationId: Note-DeleteNote-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Activities
    parameters:
      - name: id
        in: path
        description: Note Id
        required: true
        schema:
          type: string
  /api/Note:
    get:
      tags:
        - Activities
        - Notes
      summary: Get all notes
      operationId: Note-GetAllNotes-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityNoteQueryResult'
      x-clmi-tags:
        x-primary: Activities
    post:
      tags:
        - Activities
        - Notes
      summary: Add a note
      operationId: Note-AddNote-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Note to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ActivityNoteCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityNoteCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/ActivityNoteCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ActivityNoteCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityNote'
      x-clmi-tags:
        x-primary: Activities
  /api/Note/search:
    post:
      tags:
        - Activities
        - Notes
      summary: Search notes
      operationId: Note-SearchNotesWithFilter-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Notes Filter
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/NoteFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/NoteFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/NoteFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NoteFilter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityNoteQueryResult'
      x-clmi-tags:
        x-primary: Activities
  '/api/Notification/{id}':
    get:
      tags:
        - Notifications
      summary: Get a single Notification
      operationId: Notification-GetSingleNotification-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
      x-clmi-tags:
        x-primary: Notifications
    delete:
      tags:
        - Notifications
      summary: Delete a notification
      operationId: Notification-DeleteNotification-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Notifications
    parameters:
      - name: id
        in: path
        description: Notification id
        required: true
        schema:
          type: string
  /api/Notification:
    post:
      tags:
        - Notifications
      summary: Add a Notification
      operationId: Notification-AddNotification-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Notification
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/NotificationCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/NotificationCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NotificationCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
      x-clmi-tags:
        x-primary: Notifications
  '/api/Nudge/{id}':
    get:
      tags:
        - Nudges
      summary: Get a single Nudge
      operationId: Nudge-GetSingleNudge-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nudge'
      x-clmi-tags:
        x-primary: Nudges
    delete:
      tags:
        - Nudges
      summary: Delete a nudge
      operationId: Nudge-DeleteNudge-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Nudges
    parameters:
      - name: id
        in: path
        description: Nudge id
        required: true
        schema:
          type: string
  /api/Nudge:
    get:
      tags:
        - Nudges
      summary: Get all Nudges
      operationId: Nudge-GetAllNudges-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NudgeQueryResult'
      x-clmi-tags:
        x-primary: Nudges
    post:
      tags:
        - Nudges
      summary: Create a nudge
      operationId: Nudge-AddNudge-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: NudgeDto
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/NudgeCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/NudgeCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/NudgeCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NudgeCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nudge'
      x-clmi-tags:
        x-primary: Nudges
  '/api/Nudge/{nudgeId}/log/{id}':
    get:
      tags:
        - Nudges
      summary: Get a single Nudge Log
      operationId: Nudge-GetSingleNudgeLog-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NudgeLog'
      x-clmi-tags:
        x-primary: Nudges
    delete:
      tags:
        - Nudges
      summary: Delete a nudge log
      operationId: Nudge-DeleteNudgeLog-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Nudges
    parameters:
      - name: nudgeId
        in: path
        description: Nudge id
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: Log id
        required: true
        schema:
          type: string
  '/api/Nudge/{id}/log':
    post:
      tags:
        - Nudges
      summary: Create a log entry against a nudge
      operationId: Nudge-AddNudgeLog-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: NudgeLogCreateDto
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/NudgeLogCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/NudgeLogCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/NudgeLogCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NudgeLogCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NudgeLog'
      x-clmi-tags:
        x-primary: Nudges
    parameters:
      - name: id
        in: path
        description: Nudge id
        required: true
        schema:
          type: string
  '/api/NudgeType/{code}':
    get:
      tags:
        - Reference Data
        - Nudge Types
      summary: Get a single Nudge Type
      operationId: NudgeType-GetSingleNudgeType-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NudgeType'
      x-clmi-tags:
        x-primary: Reference Data
    parameters:
      - name: code
        in: path
        description: Nudge Type Code
        required: true
        schema:
          type: string
  /api/NudgeType:
    get:
      tags:
        - Reference Data
        - Nudge Types
      summary: Get all Nudge Types
      operationId: NudgeType-GetAllNudgeTypes-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NudgeType'
      x-clmi-tags:
        x-primary: Reference Data
  '/api/Objective/{id}':
    get:
      tags:
        - Reference Data
        - Objectives
      summary: Get a single objective
      operationId: Objective-GetSingleObjective-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Objective'
      x-clmi-tags:
        x-primary: Reference Data
    put:
      tags:
        - Reference Data
        - Objectives
      summary: Update an Objective
      operationId: Objective-UpdateObjective-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Objective'
          application/json:
            schema:
              $ref: '#/components/schemas/Objective'
          text/json:
            schema:
              $ref: '#/components/schemas/Objective'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Objective'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Objective'
      x-clmi-tags:
        x-primary: Reference Data
    delete:
      tags:
        - Reference Data
        - Objectives
      summary: Delete an Object
      operationId: Objective-DeleteObjective-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Reference Data
    parameters:
      - name: id
        in: path
        description: Objective ID
        required: true
        schema:
          type: string
  /api/Objective:
    get:
      tags:
        - Reference Data
        - Objectives
      summary: Get all objectives
      operationId: Objective-GetAllObjectives-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Objective'
      x-clmi-tags:
        x-primary: Reference Data
    post:
      tags:
        - Reference Data
        - Objectives
      summary: Add an Objective
      operationId: Objective-AddObjective-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Objective'
          application/json:
            schema:
              $ref: '#/components/schemas/Objective'
          text/json:
            schema:
              $ref: '#/components/schemas/Objective'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Objective'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Objective'
      x-clmi-tags:
        x-primary: Reference Data
    delete:
      tags:
        - Reference Data
        - Objectives
      summary: Delete a list of Objectives
      operationId: Objective-DeleteObjectives-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: string
          application/json:
            schema:
              type: array
              items:
                type: string
          text/json:
            schema:
              type: array
              items:
                type: string
          application/*+json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Reference Data
  '/api/Opportunity/{id}':
    get:
      tags:
        - Opportunities
      summary: Get a single opportunity
      operationId: Opportunity-GetSingleOpportunity-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Opportunity'
      x-clmi-tags:
        x-primary: Opportunities
    delete:
      tags:
        - Opportunities
      summary: Delete an Opportunity
      operationId: Opportunity-DeleteOpportunity-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Opportunities
    parameters:
      - name: id
        in: path
        description: Opportunity ID
        required: true
        schema:
          type: string
  /api/Opportunity:
    get:
      tags:
        - Opportunities
      summary: Get all opportunities
      operationId: Opportunity-GetAllOpportunities-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Opportunity'
      x-clmi-tags:
        x-primary: Opportunities
    post:
      tags:
        - Opportunities
      summary: Add a Opportunity
      operationId: Opportunity-AddOpportunity-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OpportunityCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/OpportunityCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/OpportunityCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OpportunityCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Opportunity'
      x-clmi-tags:
        x-primary: Opportunities
  /api/Opportunity/search:
    post:
      tags:
        - Opportunities
      summary: Search opportunities
      operationId: Opportunity-SearchOpportunitiesWithFilter-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Opportunity Filter
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OpportunityFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/OpportunityFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/OpportunityFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OpportunityFilter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpportunityQueryResult'
      x-clmi-tags:
        x-primary: Opportunities
  '/api/Opportunity/{id}/stage/{stage}':
    patch:
      tags:
        - Opportunities
      summary: Set an opportunities stage
      operationId: Opportunity-SetOpportunityStage-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Opportunity'
      x-clmi-tags:
        x-primary: Opportunities
    parameters:
      - name: id
        in: path
        description: Opportunity ID
        required: true
        schema:
          type: string
      - name: stage
        in: path
        description: Stage
        required: true
        schema:
          type: string
  '/api/Organisation/{id}':
    get:
      tags:
        - Organisations
      summary: Get a single Organisation
      operationId: Organisation-GetSingleOrganisation-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation'
      x-clmi-tags:
        x-primary: Organisations
    parameters:
      - name: id
        in: path
        description: Organisation ID
        required: true
        schema:
          type: string
  /api/Organisation:
    get:
      tags:
        - Organisations
      summary: Serach organisations
      operationId: Organisation-SearchOrganisations-v1
      parameters:
        - name: q
          in: query
          schema:
            type: string
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationQueryResult'
      x-clmi-tags:
        x-primary: Organisations
    post:
      tags:
        - Organisations
      summary: Add an organisation
      operationId: Organisation-AddOrganisation-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Organisation to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OrganisationCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/OrganisationCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrganisationCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Party'
      x-clmi-tags:
        x-primary: Organisations
  /api/Organisation/recent:
    get:
      tags:
        - Organisations
      summary: Get Recent Organisations
      operationId: Organisation-GetRecentOrganisations-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecentRecord'
      x-clmi-tags:
        x-primary: Organisations
  /api/Organisation/favourite:
    get:
      tags:
        - Organisations
      summary: Get Favourite Organisations
      operationId: Organisation-GetFavouriteOrganisations-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organisation'
      x-clmi-tags:
        x-primary: Organisations
  '/api/Organisation/{id}/duplicates':
    get:
      tags:
        - Organisations
      summary: Find potential duplicates for an Organisation
      operationId: Organisation-GetDuplicatesForOrganisation-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PotentialDuplicate'
      x-clmi-tags:
        x-primary: Organisations
    put:
      tags:
        - Organisations
      summary: Detect duplicates for an Organisation and record them in the system
      operationId: Organisation-RunDuplicateCheckForOrganisation-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Organisations
    parameters:
      - name: id
        in: path
        description: Person ID
        required: true
        schema:
          type: string
  /api/Organisation/duplicates:
    get:
      tags:
        - Organisations
      summary: Find potential duplicates for all Organisations
      operationId: Organisation-GetOrganisationDuplicates-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonQueryResult'
      x-clmi-tags:
        x-primary: Organisations
    put:
      tags:
        - Organisations
      summary: Detect all duplicates and record them in the system
      operationId: Organisation-RunOrganisationDuplicateCheck-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Organisations
  /api/Organisation/search:
    post:
      tags:
        - Organisations
      summary: Search organisations
      operationId: Organisation-SearchOrganisationsWithFilter-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Organisation Filter
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OrganisationFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/OrganisationFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrganisationFilter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationQueryResult'
      x-clmi-tags:
        x-primary: Organisations
  /api/Organisation/search/commercialregister:
    post:
      tags:
        - Organisations
      summary: Do a corporate search against an external commercialregister
      operationId: Organisation-SearchCommercialRegister-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CorporateSearch'
          application/json:
            schema:
              $ref: '#/components/schemas/CorporateSearch'
          text/json:
            schema:
              $ref: '#/components/schemas/CorporateSearch'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CorporateSearch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CorporateSearchResult'
      x-clmi-tags:
        x-primary: Organisations
  '/api/Party/{id}/avatar':
    get:
      tags:
        - Parties
      summary: Get a single party avatar
      operationId: Party-GetSinglePartyAvatar-v1
      parameters:
        - name: size
          in: query
          description: ''
          schema:
            type: integer
            format: int32
            default: 128
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Parties
    put:
      tags:
        - Parties
      summary: Set single party avatar
      operationId: Party-SetSinglePartyAvatar-v1
      parameters:
        - name: testing
          in: query
          schema:
            type: boolean
            default: false
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Parties
    delete:
      tags:
        - Parties
      summary: Delete single party avatar
      operationId: Party-DeleteSinglePartyAvatar-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Parties
    parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: string
  '/api/Party/{id}/avatar/{token}':
    get:
      tags:
        - Parties
      summary: Get a single party avatar using a temporary token rather than Auth header
      operationId: Party-GetSinglePartyAvatarAnon-v1
      parameters:
        - name: size
          in: query
          description: ''
          schema:
            type: integer
            format: int32
            default: 128
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Parties
    parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: string
      - name: token
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/Party/{id}':
    get:
      tags:
        - Parties
      summary: Get a single party
      operationId: Party-GetSingleParty-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Party'
      x-clmi-tags:
        x-primary: Parties
    delete:
      tags:
        - Parties
      summary: Delete a party
      operationId: Party-DeleteParty-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Parties
    parameters:
      - name: id
        in: path
        description: Party ID
        required: true
        schema:
          type: string
  '/api/Party/{id}/connections':
    get:
      tags:
        - Parties
      summary: Get all connected parties
      operationId: Party-GetConnectedParties-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Relationship'
      x-clmi-tags:
        x-primary: Parties
    parameters:
      - name: id
        in: path
        description: Party ID
        required: true
        schema:
          type: string
  '/api/Party/{id}/relatedclients':
    get:
      tags:
        - Parties
      summary: Get related clients
      operationId: Party-GetRelatedClients-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PartyRole'
      x-clmi-tags:
        x-primary: Parties
    parameters:
      - name: id
        in: path
        description: Party ID
        required: true
        schema:
          type: string
  '/api/Party/{id}/personalconnections':
    get:
      tags:
        - Parties
      summary: "Get the personal connections for a party\r\n\"Personal\" connections include friends, spouses, family members etc."
      operationId: Party-GetPersonalConnections-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PartyRoleRelationship'
      x-clmi-tags:
        x-primary: Parties
    parameters:
      - name: id
        in: path
        description: Party ID
        required: true
        schema:
          type: string
  '/api/Party/{id}/professionalconnections':
    get:
      tags:
        - Parties
      summary: "Get the professional connections for a party\r\n\"Professional\" connections are \"employment\" relationships between people and their employers"
      operationId: Party-GetProfessionalConnections-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PartyRoleRelationship'
      x-clmi-tags:
        x-primary: Parties
    parameters:
      - name: id
        in: path
        description: Party ID
        required: true
        schema:
          type: string
  '/api/Party/{id}/controllingconnections':
    get:
      tags:
        - Parties
      summary: "Get the controlling connections for a party\r\n\"Controlling\" connections inlcude director, trustee etc."
      operationId: Party-GetControllingConnections-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PartyRoleRelationship'
      x-clmi-tags:
        x-primary: Parties
    parameters:
      - name: id
        in: path
        description: Party ID
        required: true
        schema:
          type: string
  '/api/Party/{id}/processes':
    get:
      tags:
        - Parties
      summary: Get all processes on the specified party.
      operationId: Party-GetProcessesForParty-v1
      parameters:
        - name: loadRegardingObject
          in: query
          description: Load the full regarding object
          schema:
            type: boolean
            default: false
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Process'
      x-clmi-tags:
        x-primary: Parties
    parameters:
      - name: id
        in: path
        description: Party ID
        required: true
        schema:
          type: string
  /api/Party:
    get:
      tags:
        - Parties
      summary: Search parties
      operationId: Party-SearchParties-v1
      parameters:
        - name: q
          in: query
          schema:
            type: string
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyQueryResult'
      x-clmi-tags:
        x-primary: Parties
    delete:
      tags:
        - Parties
      summary: Delete parties
      operationId: Party-DeleteMultipleParties-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Party IDs
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: string
          application/json:
            schema:
              type: array
              items:
                type: string
          text/json:
            schema:
              type: array
              items:
                type: string
          application/*+json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Parties
  '/api/Party/{id}/role':
    get:
      tags:
        - Parties
      summary: Get all roles for a party
      operationId: Party-GetPartyRolesForParty-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Party'
      x-clmi-tags:
        x-primary: Parties
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/Party/{id}/suggestedparties':
    get:
      tags:
        - Parties
      summary: Get suggested parties (to contact) for a party
      operationId: Party-GetPartySuggestedParties-v1
      parameters:
        - name: contactPointType
          in: query
          description: Filter by contact point
          schema:
            $ref: '#/components/schemas/ContactPointType'
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SuggestedParty'
      x-clmi-tags:
        x-primary: Parties
    parameters:
      - name: id
        in: path
        description: Party ID
        required: true
        schema:
          type: string
  '/api/Party/{id}/contactpoint':
    get:
      tags:
        - Parties
      summary: Get all contact points for a party
      operationId: Party-GetContactPointsForParty-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactPoint'
      x-clmi-tags:
        x-primary: Parties
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/Party/{id}/activities/next':
    get:
      tags:
        - Parties
      summary: Get the next activity for a party
      operationId: Party-GetNextActivity-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityQueryResult'
      x-clmi-tags:
        x-primary: Parties
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/Party/{id}/activities/last':
    get:
      tags:
        - Parties
      summary: Get the last activity for a party
      operationId: Party-GetLastActivity-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityQueryResult'
      x-clmi-tags:
        x-primary: Parties
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/Party/{id}/activities':
    get:
      tags:
        - Parties
      summary: Get all activities for a party
      operationId: Party-GetActivities-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityQueryResult'
      x-clmi-tags:
        x-primary: Parties
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/Party/{id}/note':
    get:
      tags:
        - Parties
      summary: Get all notes for a party
      operationId: Party-GetNotes-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityNoteQueryResult'
      x-clmi-tags:
        x-primary: Parties
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/Party/{id}/phonecall':
    get:
      tags:
        - Parties
      summary: Get all phone calls for a party
      operationId: Party-GetPhoneCalls-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityPhoneCallQueryResult'
      x-clmi-tags:
        x-primary: Parties
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/Party/{id}/email':
    get:
      tags:
        - Parties
      summary: Get all emails for a party
      operationId: Party-GetEmails-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityEmailQueryResult'
      x-clmi-tags:
        x-primary: Parties
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/Party/{id}/appointment':
    get:
      tags:
        - Parties
      summary: Get all appointments for a party
      operationId: Party-GetAppointments-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityAppointmentQueryResult'
      x-clmi-tags:
        x-primary: Parties
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/Party/{id}/timebooking':
    get:
      tags:
        - Parties
      summary: Get all time bookings for a party
      operationId: Party-GetTimeBookings-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTimeBookingQueryResult'
      x-clmi-tags:
        x-primary: Parties
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/Party/{id}/task':
    get:
      tags:
        - Parties
      summary: Get all tasks for a party
      operationId: Party-GetTasks-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTaskQueryResult'
      x-clmi-tags:
        x-primary: Parties
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/Party/{id}/workitem':
    get:
      tags:
        - Parties
      summary: Get all work items for a party
      operationId: Party-GetWorkItems-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemQueryResult'
      x-clmi-tags:
        x-primary: Parties
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/Party/{id}/access':
    get:
      tags:
        - Parties
      summary: Get Party Role Access records for a party
      operationId: Party-GetPartyRoleAccess-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PartyRoleAccess'
      x-clmi-tags:
        x-primary: Parties
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/Party/{id}/conversation':
    get:
      tags:
        - Parties
      summary: Get the conversations for a party
      operationId: Party-GetConversationForParty-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityChatQueryResult'
      x-clmi-tags:
        x-primary: Parties
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/Party/{id}/document':
    get:
      tags:
        - Parties
      summary: Get Party Documents
      operationId: Party-GetPartyDocuments-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
      x-clmi-tags:
        x-primary: Parties
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  /api/Party/avatarstubs:
    post:
      tags:
        - Parties
      summary: Get a group of avatar stubs
      operationId: Party-GetMultiplePartyAvatars-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Comma separated list of party ids
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: string
          application/json:
            schema:
              type: array
              items:
                type: string
          text/json:
            schema:
              type: array
              items:
                type: string
          application/*+json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PartyStub'
      x-clmi-tags:
        x-primary: Parties
  '/api/Party/{id}/activities/todo':
    post:
      tags:
        - Parties
      summary: Get "TO DO" activities for a party
      operationId: Party-GetToDoForParty-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: todo filters
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TodoFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/TodoFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/TodoFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TodoFilter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToDoActivityQueryResult'
      x-clmi-tags:
        x-primary: Parties
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/Party/{id}/Status/{status}':
    post:
      tags:
        - Parties
      summary: Set the state for a party
      operationId: Party-SetStatusParty-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Party'
      x-clmi-tags:
        x-primary: Parties
    parameters:
      - name: id
        in: path
        description: Party ID
        required: true
        schema:
          type: string
      - name: status
        in: path
        description: Status
        required: true
        schema:
          $ref: '#/components/schemas/StatusType'
  '/api/Party/{id}/Role/{roleType}':
    post:
      tags:
        - Parties
      summary: Add a role to a party (to create a party role)
      operationId: Party-AddRoleToParty-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyRole'
      x-clmi-tags:
        x-primary: Parties
    parameters:
      - name: id
        in: path
        description: Party ID
        required: true
        schema:
          type: string
      - name: roleType
        in: path
        description: Role Type
        required: true
        schema:
          $ref: '#/components/schemas/RoleType'
  '/api/PartyRole/{id}':
    get:
      tags:
        - Party Roles
      summary: Get a single partyrole
      operationId: PartyRole-GetSinglePartyRole-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyRole'
      x-clmi-tags:
        x-primary: Party Roles
    delete:
      tags:
        - Party Roles
      summary: Delete a single party role
      operationId: PartyRole-DeletePartyRole-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Party Roles
    parameters:
      - name: id
        in: path
        description: PartyRole ID
        required: true
        schema:
          type: string
  '/api/PartyRole/{id}/products':
    get:
      tags:
        - Party Roles
      summary: Get all products for a party role beneficial owner
      operationId: PartyRole-GetAllProductsForPartyRole-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientProduct'
      x-clmi-tags:
        x-primary: Party Roles
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/PartyRole/{id}/portfolio':
    get:
      tags:
        - Party Roles
      summary: Get all portfolios for a client / party-role
      operationId: PartyRole-GetPortfoliosForPartyRole-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductGroup'
      x-clmi-tags:
        x-primary: Party Roles
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/PartyRole/{id}/productgroups':
    get:
      tags:
        - Party Roles
      summary: Get all product groups for a party-role
      operationId: PartyRole-GetProductGroupsForPartyRole-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductGroup'
      x-clmi-tags:
        x-primary: Party Roles
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/PartyRole/{id}/processes':
    get:
      tags:
        - Party Roles
      summary: Get all processes on the specified party role.
      operationId: PartyRole-GetProcessesForPartyRole-v1
      parameters:
        - name: loadRegardingObject
          in: query
          description: Load the full regarding object
          schema:
            type: boolean
            default: false
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Process'
      x-clmi-tags:
        x-primary: Party Roles
    parameters:
      - name: id
        in: path
        description: Party Role ID
        required: true
        schema:
          type: string
  '/api/PartyRole/{id}/activities':
    get:
      tags:
        - Party Roles
      summary: Get all activities for a party role
      operationId: PartyRole-GetActivitiesForPartyRole-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityQueryResult'
      x-clmi-tags:
        x-primary: Party Roles
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/PartyRole/{id}/note':
    get:
      tags:
        - Party Roles
      summary: Get all notes for a party role
      operationId: PartyRole-GetNotesForPartyRole-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityNoteQueryResult'
      x-clmi-tags:
        x-primary: Party Roles
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/PartyRole/{id}/phonecall':
    get:
      tags:
        - Party Roles
      summary: Get all phone calls for a party role
      operationId: PartyRole-GetPhoneCallsForPartyRole-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityPhoneCallQueryResult'
      x-clmi-tags:
        x-primary: Party Roles
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/PartyRole/{id}/email':
    get:
      tags:
        - Party Roles
      summary: Get all emails for a party role
      operationId: PartyRole-GetEmailsForPartyRole-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityEmailQueryResult'
      x-clmi-tags:
        x-primary: Party Roles
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/PartyRole/{id}/appointment':
    get:
      tags:
        - Party Roles
      summary: Get all appointments for a party role
      operationId: PartyRole-GetAppointmentsForPartyRole-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityAppointmentQueryResult'
      x-clmi-tags:
        x-primary: Party Roles
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/PartyRole/{id}/timebooking':
    get:
      tags:
        - Party Roles
      summary: Get all time bookings for a party role
      operationId: PartyRole-GetTimeBookingsForPartyRole-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTimeBookingQueryResult'
      x-clmi-tags:
        x-primary: Party Roles
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/PartyRole/{id}/task':
    get:
      tags:
        - Party Roles
      summary: Get all tasks for a party role
      operationId: PartyRole-GetTasksForPartyRole-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTaskQueryResult'
      x-clmi-tags:
        x-primary: Party Roles
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/PartyRole/{id}/workitem':
    get:
      tags:
        - Party Roles
      summary: Get all work items for a party role
      operationId: PartyRole-GetWorkItemsForPartyRole-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemQueryResult'
      x-clmi-tags:
        x-primary: Party Roles
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/PartyRole/{id}/relationshipTypes':
    get:
      tags:
        - Party Roles
      summary: Get all applicable relationship types for a party role
      operationId: PartyRole-GetAvailableRelationshipTypesForPartyRole-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
      x-clmi-tags:
        x-primary: Party Roles
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/PartyRole/{id}/suggestedparties':
    get:
      tags:
        - Party Roles
      summary: Get suggested parties (to contact) for a party role
      operationId: PartyRole-GetPartyRoleSuggestedParties-v1
      parameters:
        - name: contactPointType
          in: query
          description: Filter by contact point
          schema:
            $ref: '#/components/schemas/ContactPointType'
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestedParty'
      x-clmi-tags:
        x-primary: Party Roles
    parameters:
      - name: id
        in: path
        description: PartyRole ID
        required: true
        schema:
          type: string
  '/api/PartyRole/{id}/access':
    get:
      tags:
        - Party Roles
      summary: Get Party Role Access records for a party role
      operationId: PartyRole-GetPartyRoleAccess-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PartyRoleAccess'
      x-clmi-tags:
        x-primary: Party Roles
    post:
      tags:
        - Party Roles
      summary: Add Party Role Access records for a party role
      operationId: PartyRole-AddPartyRoleAccess-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: The access to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PartyRoleAccessCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/PartyRoleAccessCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/PartyRoleAccessCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PartyRoleAccessCreate'
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Party Roles
    delete:
      tags:
        - Party Roles
      summary: Delete Party Role Access records for a party role
      operationId: PartyRole-DeletePartyRoleAccess-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Array of Party IDs
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: string
          application/json:
            schema:
              type: array
              items:
                type: string
          text/json:
            schema:
              type: array
              items:
                type: string
          application/*+json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Party Roles
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/PartyRole/{id}/document':
    get:
      tags:
        - Party Roles
      summary: Get Client/PartyRole Documents
      operationId: PartyRole-GetPartyRoleDocuments-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
      x-clmi-tags:
        x-primary: Party Roles
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/PartyRole/{id}/app/{appId}':
    get:
      tags:
        - Party Roles
      summary: Load client app summary information
      operationId: PartyRole-GetApp-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppStatus'
      x-clmi-tags:
        x-primary: Party Roles
    parameters:
      - name: id
        in: path
        description: Client ID
        required: true
        schema:
          type: string
      - name: appId
        in: path
        description: App Status ID
        required: true
        schema:
          type: string
  '/api/PartyRole/{id}/documents/checklist':
    get:
      tags:
        - Party Roles
      summary: Get all Mandatory Documents
      operationId: PartyRole-GetMandatoryDocuments-v1
      parameters:
        - name: clientlevel
          in: query
          schema:
            type: boolean
            default: false
        - name: draft
          in: query
          schema:
            type: boolean
            default: true
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentGroup'
      x-clmi-tags:
        x-primary: Party Roles
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/api/PartyRole/{id}/status/{status}':
    post:
      tags:
        - Party Roles
      summary: Set the state of a party role
      operationId: PartyRole-SetStatusPartyRole-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Party Roles
    parameters:
      - name: id
        in: path
        description: Party Role ID
        required: true
        schema:
          type: string
      - name: status
        in: path
        description: Status
        required: true
        schema:
          $ref: '#/components/schemas/StatusType'
  '/api/PartyRole/{id}/activities/todo':
    post:
      tags:
        - Party Roles
      summary: Get "TO DO" activities for a given party role
      operationId: PartyRole-GetToDoForPartyRole-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: filter
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TodoFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/TodoFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/TodoFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TodoFilter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToDoActivityQueryResult'
      x-clmi-tags:
        x-primary: Party Roles
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/PartyRole/{id}/promote/prospect':
    post:
      tags:
        - Party Roles
      summary: "Promotes a party role to a prospect\r\n(Available for administrators only)"
      operationId: PartyRole-PromoteToProspect-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
      x-clmi-tags:
        x-primary: Party Roles
    parameters:
      - name: id
        in: path
        description: Party Role Id
        required: true
        schema:
          type: string
  '/api/PartyRole/{id}/promote/client':
    post:
      tags:
        - Party Roles
      summary: "Promotes a party role to a client\r\n(Available for administrators only)"
      operationId: PartyRole-PromoteToClient-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
      x-clmi-tags:
        x-primary: Party Roles
    parameters:
      - name: id
        in: path
        description: Party Role Id
        required: true
        schema:
          type: string
  '/api/PartyRole/{id}/apps':
    patch:
      tags:
        - Party Roles
      summary: Create apps for a client
      operationId: PartyRole-CreateApps-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppStatus'
      x-clmi-tags:
        x-primary: Party Roles
    parameters:
      - name: id
        in: path
        description: Client ID
        required: true
        schema:
          type: string
  '/api/Person/{id}':
    get:
      tags:
        - People
      summary: Get a single person
      operationId: Person-GetSinglePerson-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
      x-clmi-tags:
        x-primary: People
    parameters:
      - name: id
        in: path
        description: Person ID
        required: true
        schema:
          type: string
  /api/Person:
    get:
      tags:
        - People
      summary: Search people
      operationId: Person-SearchPeople-v1
      parameters:
        - name: q
          in: query
          schema:
            type: string
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonQueryResult'
      x-clmi-tags:
        x-primary: People
    post:
      tags:
        - People
      summary: Add a person
      operationId: Person-AddPerson-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Person to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PersonCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/PersonCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/PersonCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PersonCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Party'
      x-clmi-tags:
        x-primary: People
    put:
      tags:
        - People
      summary: Update a person
      operationId: Person-UpdatePerson-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Person to udpate
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PersonUpdate'
          application/json:
            schema:
              $ref: '#/components/schemas/PersonUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/PersonUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PersonUpdate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Party'
      x-clmi-tags:
        x-primary: People
  /api/Person/recent:
    get:
      tags:
        - People
      summary: Get Recent People
      operationId: Person-GetRecentPeople-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecentRecord'
      x-clmi-tags:
        x-primary: People
  /api/Person/favourite:
    get:
      tags:
        - People
      summary: Get Favourite People
      operationId: Person-GetFavouritePeople-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
      x-clmi-tags:
        x-primary: People
  '/api/Person/{id}/duplicates':
    get:
      tags:
        - People
      summary: Find potential duplicates for a person
      operationId: Person-GetDuplicatesForPerson-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PotentialDuplicate'
      x-clmi-tags:
        x-primary: People
    put:
      tags:
        - People
      summary: Detect duplicates for a Person and record them in the system
      operationId: Person-RunDuplicateCheckForRecord-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: People
    parameters:
      - name: id
        in: path
        description: Person ID
        required: true
        schema:
          type: string
  /api/Person/duplicates:
    get:
      tags:
        - People
      summary: Find potential duplicates for all people
      operationId: Person-GetDuplicates-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonQueryResult'
      x-clmi-tags:
        x-primary: People
    put:
      tags:
        - People
      summary: Detect all duplicates and record them in the system
      operationId: Person-RunDuplicateCheck-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: People
  /api/Person/search:
    post:
      tags:
        - People
      summary: Search people
      operationId: Person-SearchPeopleWithFilter-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: People Filter
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PersonFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/PersonFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/PersonFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PersonFilter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonQueryResult'
      x-clmi-tags:
        x-primary: People
  '/api/PhoneAddress/{id}':
    get:
      tags:
        - Contact Points
        - Phone Addresses
      summary: Get a single phone address
      operationId: PhoneAddress-GetSinglePhoneAddress-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneAddress'
      x-clmi-tags:
        x-primary: Contact Points
    put:
      tags:
        - Contact Points
        - Phone Addresses
      summary: Update a phone address.
      operationId: PhoneAddress-UpdatePhoneAddress-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PhoneAddress'
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneAddress'
          text/json:
            schema:
              $ref: '#/components/schemas/PhoneAddress'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PhoneAddress'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneAddress'
      x-clmi-tags:
        x-primary: Contact Points
    parameters:
      - name: id
        in: path
        description: Phone address Id
        required: true
        schema:
          type: string
  /api/PhoneAddress:
    get:
      tags:
        - Contact Points
        - Phone Addresses
      summary: Get all phone addresses
      operationId: PhoneAddress-GetAllPhoneAddresses-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneAddressQueryResult'
      x-clmi-tags:
        x-primary: Contact Points
    post:
      tags:
        - Contact Points
        - Phone Addresses
      summary: Add a phone number
      operationId: PhoneAddress-AddPhoneAddress-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Phone Address to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PhoneAddressCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneAddressCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/PhoneAddressCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PhoneAddressCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneAddress'
      x-clmi-tags:
        x-primary: Contact Points
  '/api/PhoneCall/{id}':
    get:
      tags:
        - Activities
        - Phone Calls
      summary: Get a single phone call
      operationId: PhoneCall-GetSinglePhoneCall-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityPhoneCall'
      x-clmi-tags:
        x-primary: Activities
    put:
      tags:
        - Activities
        - Phone Calls
      summary: Update a phone call
      operationId: PhoneCall-UpdatePhoneCall-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Phone Call to update
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ActivityPhoneCall'
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityPhoneCall'
          text/json:
            schema:
              $ref: '#/components/schemas/ActivityPhoneCall'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ActivityPhoneCall'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityPhoneCall'
      x-clmi-tags:
        x-primary: Activities
    parameters:
      - name: id
        in: path
        description: Phone address Id
        required: true
        schema:
          type: string
  /api/PhoneCall:
    get:
      tags:
        - Activities
        - Phone Calls
      summary: Get all phone calls
      operationId: PhoneCall-GetAllPhoneCalls-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityPhoneCallQueryResult'
      x-clmi-tags:
        x-primary: Activities
    post:
      tags:
        - Activities
        - Phone Calls
      summary: Add a phone call
      operationId: PhoneCall-AddPhoneCall-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Phone Call to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ActivityPhoneCallCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityPhoneCallCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/ActivityPhoneCallCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ActivityPhoneCallCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityPhoneCall'
      x-clmi-tags:
        x-primary: Activities
  '/api/Picklist/{name}':
    get:
      tags:
        - Forms
        - Picklists
      summary: Get a single picklist
      operationId: Picklist-GetSinglePicklistType-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PicklistType'
      x-clmi-tags:
        x-primary: Forms
    parameters:
      - name: name
        in: path
        description: Picklist name
        required: true
        schema:
          type: string
  /api/Picklist:
    get:
      tags:
        - Forms
        - Picklists
      summary: Get all Picklists
      operationId: Picklist-GetAllPicklistTypes-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PicklistType'
      x-clmi-tags:
        x-primary: Forms
  '/api/PostalAddress/{id}':
    get:
      tags:
        - Contact Points
        - Postal Addresses
      summary: Get a single postal address
      operationId: PostalAddress-GetSinglePostalAddress-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostalAddress'
      x-clmi-tags:
        x-primary: Contact Points
    put:
      tags:
        - Contact Points
        - Postal Addresses
      summary: Update a postal address.
      operationId: PostalAddress-UpdatePostalAddress-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PostalAddress'
          application/json:
            schema:
              $ref: '#/components/schemas/PostalAddress'
          text/json:
            schema:
              $ref: '#/components/schemas/PostalAddress'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PostalAddress'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostalAddress'
      x-clmi-tags:
        x-primary: Contact Points
    parameters:
      - name: id
        in: path
        description: Postal address Id
        required: true
        schema:
          type: string
  /api/PostalAddress/lookup:
    get:
      tags:
        - Contact Points
        - Postal Addresses
      summary: Do an address search against external address lookup provider
      operationId: PostalAddress-LookupAddress-v1
      parameters:
        - name: searchText
          in: query
          description: ''
          schema:
            type: string
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostalAddressLookup'
      x-clmi-tags:
        x-primary: Contact Points
  '/api/PostalAddress/lookup/{id}':
    get:
      tags:
        - Contact Points
        - Postal Addresses
      summary: Get a specific address from external address service
      operationId: PostalAddress-GetLookupAddressResult-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostalAddress'
      x-clmi-tags:
        x-primary: Contact Points
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  /api/PostalAddress:
    get:
      tags:
        - Contact Points
        - Postal Addresses
      summary: Get all postal addresses
      operationId: PostalAddress-GetAllPostalAddresses-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostalAddressQueryResult'
      x-clmi-tags:
        x-primary: Contact Points
    post:
      tags:
        - Contact Points
        - Postal Addresses
      summary: Add a postal address
      operationId: PostalAddress-AddPostalAddress-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Postal Address to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PostalAddressCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/PostalAddressCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/PostalAddressCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PostalAddressCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostalAddress'
      x-clmi-tags:
        x-primary: Contact Points
  '/api/PostalAddress/{id}/nearby':
    get:
      tags:
        - Contact Points
        - Postal Addresses
      summary: Get addresses nearby another address
      operationId: PostalAddress-GetNearbyPostalAddresses-v1
      parameters:
        - name: miles
          in: query
          schema:
            type: integer
            format: int32
            default: 5
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostalAddressQueryResult'
      x-clmi-tags:
        x-primary: Contact Points
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/api/Process/{id}':
    get:
      tags:
        - Cases
        - Processes
      summary: Get a single process
      operationId: Process-GetSingleProcess-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
      x-clmi-tags:
        x-primary: Cases
    delete:
      tags:
        - Cases
        - Processes
      summary: Delete a process.
      operationId: Process-DeleteProcess-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Cases
    parameters:
      - name: id
        in: path
        description: Process ID
        required: true
        schema:
          type: string
  '/api/Process/{id}/storage':
    get:
      tags:
        - Cases
        - Processes
      summary: Get a single process' storage
      operationId: Process-GetSingleProcessStorage-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                additionalProperties: { }
      x-clmi-tags:
        x-primary: Cases
    put:
      tags:
        - Cases
        - Processes
      summary: Update a single process' storage
      operationId: Process-UpdateSingleProcessStorage-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              type: object
              additionalProperties: { }
          application/json:
            schema:
              type: object
              additionalProperties: { }
          text/json:
            schema:
              type: object
              additionalProperties: { }
          application/*+json:
            schema:
              type: object
              additionalProperties: { }
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Cases
    parameters:
      - name: id
        in: path
        description: Process ID
        required: true
        schema:
          type: string
  '/api/Process/{id}/workitems':
    get:
      tags:
        - Cases
        - Processes
      summary: Get tasks by process
      operationId: Process-GetWorkItemsByProcess-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkItem'
      x-clmi-tags:
        x-primary: Cases
    parameters:
      - name: id
        in: path
        description: Process ID
        required: true
        schema:
          type: string
  '/api/Process/{id}/history':
    get:
      tags:
        - Cases
        - Processes
      summary: Get a single activity's history
      operationId: Process-GetProcessHistory-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityHistory'
      x-clmi-tags:
        x-primary: Cases
    parameters:
      - name: id
        in: path
        description: Activity ID
        required: true
        schema:
          type: string
  /api/Process:
    get:
      tags:
        - Cases
        - Processes
      summary: Get all processes
      operationId: Process-GetAllProcesses-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessQueryResult'
      x-clmi-tags:
        x-primary: Cases
    post:
      tags:
        - Cases
        - Processes
      summary: Start a process.
      operationId: Process-StartProcess-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Process to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProcessCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/ProcessCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProcessCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
      x-clmi-tags:
        x-primary: Cases
    delete:
      tags:
        - Cases
        - Processes
      summary: Delete many process.
      operationId: Process-DeleteProcesses-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Process IDs to delete
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: string
          application/json:
            schema:
              type: array
              items:
                type: string
          text/json:
            schema:
              type: array
              items:
                type: string
          application/*+json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Cases
  /api/Process/favourite:
    get:
      tags:
        - Cases
        - Processes
      summary: Get Favourite Processes
      operationId: Process-GetFavouriteProcesses-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Process'
      x-clmi-tags:
        x-primary: Cases
  /api/Process/search:
    post:
      tags:
        - Cases
        - Processes
      summary: Search process
      operationId: Process-SearchProcessesWithFilter-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Process Filter
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProcessFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/ProcessFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProcessFilter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessQueryResult'
      x-clmi-tags:
        x-primary: Cases
  '/api/Process/{id}/start':
    post:
      tags:
        - Cases
        - Processes
      summary: Start a process that already exists
      operationId: Process-StartExistingProcess-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
      x-clmi-tags:
        x-primary: Cases
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/Process/{id}/cancel':
    patch:
      tags:
        - Cases
        - Processes
      summary: Cancel a process.
      operationId: Process-CancelProcess-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Cases
    parameters:
      - name: id
        in: path
        description: Process ID to target
        required: true
        schema:
          type: string
  '/api/Process/{id}/action/{code}':
    patch:
      tags:
        - Cases
        - Processes
      summary: Perform an action on a process.
      operationId: Process-PerformActionOnProcess-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Cases
    parameters:
      - name: id
        in: path
        description: Process ID to target
        required: true
        schema:
          type: string
      - name: code
        in: path
        description: The code of the action to perform
        required: true
        schema:
          type: string
  /api/ProcessType:
    get:
      tags:
        - Reference Data
        - Process Types
        - Cases
      summary: Get all process types
      operationId: ProcessType-GetProcessTypes-v1
      parameters:
        - name: includeOlderVersions
          in: query
          description: Optionally include older versions
          schema:
            type: boolean
            default: false
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessType'
      x-clmi-tags:
        x-primary: Reference Data
  '/api/ProcessType/{code}':
    get:
      tags:
        - Reference Data
        - Process Types
        - Cases
      summary: Get a single process type
      operationId: ProcessType-GetProcessType-v1
      parameters:
        - name: processVersion
          in: query
          description: Optionally specify a specific process version
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessType'
      x-clmi-tags:
        x-primary: Reference Data
    put:
      tags:
        - Reference Data
        - Process Types
        - Cases
      summary: Update a ProcessType
      operationId: ProcessType-UpdateProcessType-v1
      parameters:
        - name: processVersion
          in: query
          description: Optionally specify a specific process version
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ProcessType DTO
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProcessTypeUpdate'
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessTypeUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/ProcessTypeUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProcessTypeUpdate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessType'
      x-clmi-tags:
        x-primary: Reference Data
    parameters:
      - name: code
        in: path
        description: Process Type Code
        required: true
        schema:
          type: string
  '/api/ProcessType/{code}/processes':
    get:
      tags:
        - Reference Data
        - Process Types
        - Cases
      summary: Get all processes by type
      operationId: ProcessType-GetProcessesByType-v1
      parameters:
        - name: loadRegardingObject
          in: query
          description: ''
          schema:
            type: boolean
            default: false
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Process'
      x-clmi-tags:
        x-primary: Reference Data
    parameters:
      - name: code
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/ProcessType/{code}/workitems':
    get:
      tags:
        - Reference Data
        - Process Types
        - Cases
      summary: Get all active work items by process type
      operationId: ProcessType-GetWorkItemsByProcessType-v1
      parameters:
        - name: loadRegardingObject
          in: query
          description: ''
          schema:
            type: boolean
            default: false
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkItem'
      x-clmi-tags:
        x-primary: Reference Data
    parameters:
      - name: code
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/ProcessType/{code}/stages':
    get:
      tags:
        - Reference Data
        - Process Types
        - Cases
      summary: Get all stages for a process type
      operationId: ProcessType-GetProcessStages-v1
      parameters:
        - name: processTypeVersion
          in: query
          description: Optionally specify a specific process version
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessStage'
      x-clmi-tags:
        x-primary: Reference Data
    parameters:
      - name: code
        in: path
        description: Process Type Code
        required: true
        schema:
          type: string
  '/api/ProcessType/{code}/stage/{stage}':
    get:
      tags:
        - Reference Data
        - Process Types
        - Cases
      summary: Get a specific stage for a process type
      operationId: ProcessType-GetProcessStage-v1
      parameters:
        - name: processTypeVersion
          in: query
          description: Optionally specify a specific process version
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessStage'
      x-clmi-tags:
        x-primary: Reference Data
    parameters:
      - name: code
        in: path
        description: Process Type Code
        required: true
        schema:
          type: string
      - name: stage
        in: path
        description: Process Stage Code
        required: true
        schema:
          type: string
  '/api/ProcessType/{code}/stage/{stage}/workitems':
    get:
      tags:
        - Reference Data
        - Process Types
        - Cases
      summary: Get all tasks for a process stage
      operationId: ProcessType-GetProcessStageWorkItems-v1
      parameters:
        - name: processTypeVersion
          in: query
          description: Optionally specify a specific process version
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessTask'
      x-clmi-tags:
        x-primary: Reference Data
    parameters:
      - name: code
        in: path
        description: Process Type Code
        required: true
        schema:
          type: string
      - name: stage
        in: path
        description: Process Stage Code
        required: true
        schema:
          type: string
  '/api/ProcessType/{code}/stage/{stage}/workitem/{task}':
    get:
      tags:
        - Reference Data
        - Process Types
        - Cases
      summary: Get a specific task for a process stage
      operationId: ProcessType-GetProcessStageWorkItem-v1
      parameters:
        - name: processTypeVersion
          in: query
          description: Optionally specify a specific process version
          schema:
            type: integer
            format: int32
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessTask'
      x-clmi-tags:
        x-primary: Reference Data
    parameters:
      - name: code
        in: path
        description: Process Type Code
        required: true
        schema:
          type: string
      - name: stage
        in: path
        description: Process Stage Code
        required: true
        schema:
          type: string
      - name: task
        in: path
        description: Task Type Code
        required: true
        schema:
          type: string
  /api/ProcessType/conditions:
    get:
      tags:
        - Reference Data
        - Process Types
        - Cases
      summary: Get all LogicStep Conditions
      operationId: ProcessType-GetAllLogicStepConditions-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LogicStep'
      x-clmi-tags:
        x-primary: Reference Data
  /api/ProcessType/actions:
    get:
      tags:
        - Reference Data
        - Process Types
        - Cases
      summary: Get all LogicStep Actions
      operationId: ProcessType-GetAllLogicStepActions-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LogicStep'
      x-clmi-tags:
        x-primary: Reference Data
  '/api/Product/{id}':
    get:
      tags:
        - Products
      summary: Get a single product
      operationId: Product-GetSingleProduct-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      x-clmi-tags:
        x-primary: Products
    put:
      tags:
        - Products
      summary: Update a Product
      operationId: Product-UpdateProduct-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Product'
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          text/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      x-clmi-tags:
        x-primary: Products
    delete:
      tags:
        - Products
      summary: Delete a Product
      operationId: Product-DeleteProduct-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Products
    parameters:
      - name: id
        in: path
        description: Product ID
        required: true
        schema:
          type: string
  /api/Product:
    get:
      tags:
        - Products
      summary: Get all products
      operationId: Product-GetAllProducts-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
      x-clmi-tags:
        x-primary: Products
    post:
      tags:
        - Products
      summary: Add a Product
      operationId: Product-AddProduct-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProductCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      x-clmi-tags:
        x-primary: Products
    delete:
      tags:
        - Products
      summary: Delete products
      operationId: Product-DeleteMultipleProducts-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Product IDs
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: string
          application/json:
            schema:
              type: array
              items:
                type: string
          text/json:
            schema:
              type: array
              items:
                type: string
          application/*+json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Products
  '/api/ProductGroup/{id}':
    get:
      tags:
        - Client Products
        - Product Groups
      summary: Get a single product group.
      operationId: ProductGroup-GetSingleProductGroup-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGroup'
      x-clmi-tags:
        x-primary: Client Products
    put:
      tags:
        - Client Products
        - Product Groups
      summary: Update an product group.
      operationId: ProductGroup-UpdateProductGroup-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProductGroup'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductGroup'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductGroup'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductGroup'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGroup'
      x-clmi-tags:
        x-primary: Client Products
    delete:
      tags:
        - Client Products
        - Product Groups
      summary: Delete a product group.
      operationId: ProductGroup-DeleteProductGroup-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Client Products
    parameters:
      - name: id
        in: path
        description: Product Group ID
        required: true
        schema:
          type: string
  '/api/ProductGroup/{id}/products':
    get:
      tags:
        - Client Products
        - Product Groups
      summary: Get all products for an product group.
      operationId: ProductGroup-GetAllProductsInProductGroup-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientProduct'
      x-clmi-tags:
        x-primary: Client Products
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/api/ProductGroup/{id}/feed':
    get:
      tags:
        - Client Products
        - Product Groups
      summary: "Get all open feed nudges for a product-group\r\n(Where the nudge originated from one of the product-group products)"
      operationId: ProductGroup-GetFeedForProductGroup-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feed'
      x-clmi-tags:
        x-primary: Client Products
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/ProductGroup/{id}/roles':
    get:
      tags:
        - Client Products
        - Product Groups
      summary: "Get the parties that play a role in respect of a product group\r\nBy checking all the products in the group"
      operationId: ProductGroup-GetRolesForProductGroup-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientProductRole'
      x-clmi-tags:
        x-primary: Client Products
    parameters:
      - name: id
        in: path
        description: Product Group ID
        required: true
        schema:
          type: string
  '/api/ProductGroup/{id}/activities':
    get:
      tags:
        - Client Products
        - Product Groups
      summary: Get all activities linked to any of the accounts in the porfolio
      operationId: ProductGroup-GetActivitiesForProductGroup-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityQueryResult'
      x-clmi-tags:
        x-primary: Client Products
    parameters:
      - name: id
        in: path
        description: Product Group Id
        required: true
        schema:
          type: string
  '/api/ProductGroup/{id}/note':
    get:
      tags:
        - Client Products
        - Product Groups
      summary: Get all notes for a product group
      operationId: ProductGroup-GetNotesForProductGroup-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityNoteQueryResult'
      x-clmi-tags:
        x-primary: Client Products
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/ProductGroup/{id}/document':
    get:
      tags:
        - Client Products
        - Product Groups
      summary: Get Documents (for the client related to the produc group)
      operationId: ProductGroup-GetDocumentsForProductGroup-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
      x-clmi-tags:
        x-primary: Client Products
    parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
  /api/ProductGroup:
    post:
      tags:
        - Client Products
        - Product Groups
      summary: Add an product group.
      operationId: ProductGroup-AddProductGroup-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProductGroup'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductGroup'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductGroup'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductGroup'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGroup'
      x-clmi-tags:
        x-primary: Client Products
    delete:
      tags:
        - Client Products
        - Product Groups
      summary: Delete a list of Product Groups
      operationId: ProductGroup-DeleteProductGroups-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: string
          application/json:
            schema:
              type: array
              items:
                type: string
          text/json:
            schema:
              type: array
              items:
                type: string
          application/*+json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Client Products
  '/api/ProductType/{code}':
    get:
      tags:
        - Reference Data
        - Product Types
      summary: Get a single Product Type
      operationId: ProductType-GetSingleProductType-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductType'
      x-clmi-tags:
        x-primary: Reference Data
    parameters:
      - name: code
        in: path
        description: Product Type Code
        required: true
        schema:
          type: string
  /api/ProductType:
    get:
      tags:
        - Reference Data
        - Product Types
      summary: Get all Product Types
      operationId: ProductType-GetAllProductTypes-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductType'
      x-clmi-tags:
        x-primary: Reference Data
  '/api/Prospect/{id}':
    get:
      tags:
        - Prospects
      summary: Get a single prospect
      operationId: Prospect-GetSingleProspect-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prospect'
      x-clmi-tags:
        x-primary: Prospects
    put:
      tags:
        - Prospects
      summary: Update a single prospect
      operationId: Prospect-UpdateProspect-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Prospect'
          application/json:
            schema:
              $ref: '#/components/schemas/Prospect'
          text/json:
            schema:
              $ref: '#/components/schemas/Prospect'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Prospect'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prospect'
      x-clmi-tags:
        x-primary: Prospects
    parameters:
      - name: id
        in: path
        description: Prospects ID (partyrole)
        required: true
        schema:
          type: string
  /api/Prospect:
    get:
      tags:
        - Prospects
      summary: Get all prospects
      operationId: Prospect-GetAllProspects-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Prospect'
      x-clmi-tags:
        x-primary: Prospects
  /api/Prospect/favourite:
    get:
      tags:
        - Prospects
      summary: Get favourite prospects
      operationId: Prospect-GetFavouriteProspects-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Prospect'
      x-clmi-tags:
        x-primary: Prospects
  /api/Prospect/recent:
    get:
      tags:
        - Prospects
      summary: Get recent prospects
      operationId: Prospect-GetRecentProspects-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Prospect'
      x-clmi-tags:
        x-primary: Prospects
  /api/Prospect/multiple:
    post:
      tags:
        - Prospects
      summary: Get many prospects
      operationId: Prospect-GetMultipleProspects-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Prospect IDs
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: string
          application/json:
            schema:
              type: array
              items:
                type: string
          text/json:
            schema:
              type: array
              items:
                type: string
          application/*+json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Prospect'
      x-clmi-tags:
        x-primary: Prospects
  '/api/Relationship/{id}':
    get:
      tags:
        - Relationships
      summary: Get a single relationship
      operationId: Relationship-GetSingleRelationship-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relationship'
      x-clmi-tags:
        x-primary: Relationships
    put:
      tags:
        - Relationships
      summary: Update a Relationship
      operationId: Relationship-UpdateRelationship-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RelationshipUpdate'
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/RelationshipUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RelationshipUpdate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relationship'
      x-clmi-tags:
        x-primary: Relationships
    delete:
      tags:
        - Relationships
      summary: Delete a Relationship
      operationId: Relationship-DeleteRelationship-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Relationships
    parameters:
      - name: id
        in: path
        description: Relationship ID
        required: true
        schema:
          type: string
  /api/Relationship:
    post:
      tags:
        - Relationships
      summary: Create a Relationship
      operationId: Relationship-AddRelationship-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RelationshipCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/RelationshipCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RelationshipCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relationship'
      x-clmi-tags:
        x-primary: Relationships
  '/api/RelationshipType/{code}':
    get:
      tags:
        - Reference Data
        - Relationship Types
      summary: Get a single RelationshipType
      operationId: RelationshipType-GetSingleRelationshipType-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationshipType'
      x-clmi-tags:
        x-primary: Reference Data
    parameters:
      - name: code
        in: path
        description: RelationshipType ID
        required: true
        schema:
          type: string
  /api/RelationshipType:
    get:
      tags:
        - Reference Data
        - Relationship Types
      summary: Get all RelationshipTypes
      operationId: RelationshipType-GetAllRelationshipTypes-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelationshipType'
      x-clmi-tags:
        x-primary: Reference Data
  /api/RelationshipType/personal:
    get:
      tags:
        - Reference Data
        - Relationship Types
      summary: Get all personal RelationshipTypes
      operationId: RelationshipType-GetAllPersonalRelationshipTypes-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelationshipType'
      x-clmi-tags:
        x-primary: Reference Data
  /api/RelationshipType/professional:
    get:
      tags:
        - Reference Data
        - Relationship Types
      summary: Get all profressional RelationshipTypes
      operationId: RelationshipType-GetAllProfessionalRelationshipTypes-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelationshipType'
      x-clmi-tags:
        x-primary: Reference Data
  /api/Reminder:
    get:
      tags:
        - Reminders
      summary: Get all reminders
      operationId: Reminder-GetAllReminders-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReminderQueryResult'
      x-clmi-tags:
        x-primary: Reminders
    post:
      tags:
        - Reminders
      summary: Add a reminder
      operationId: Reminder-AddReminder-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Reminder to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReminderCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/ReminderCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/ReminderCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReminderCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reminder'
      x-clmi-tags:
        x-primary: Reminders
    delete:
      tags:
        - Reminders
      summary: Delete mulitple reminders
      operationId: Reminder-DeleteMultipleReminders-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Reminder IDs
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: string
          application/json:
            schema:
              type: array
              items:
                type: string
          text/json:
            schema:
              type: array
              items:
                type: string
          application/*+json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Reminders
  /api/Reminder/my:
    get:
      tags:
        - Reminders
      summary: Get my reminders
      operationId: Reminder-GetMyReminders-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReminderQueryResult'
      x-clmi-tags:
        x-primary: Reminders
  '/api/Reminder/{id}':
    get:
      tags:
        - Reminders
      summary: Get a single reminder
      operationId: Reminder-GetSingleReminder-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reminder'
      x-clmi-tags:
        x-primary: Reminders
    delete:
      tags:
        - Reminders
      summary: Delete a reminder
      operationId: Reminder-DeleteReminder-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Reminders
    parameters:
      - name: id
        in: path
        description: Reminder ID
        required: true
        schema:
          type: string
  '/api/RiskLevel/{id}':
    get:
      tags:
        - Reference Data
        - Risk Levels
      summary: Get a single riskLevel
      operationId: RiskLevel-GetSingleRiskLevel-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskLevel'
      x-clmi-tags:
        x-primary: Reference Data
    put:
      tags:
        - Reference Data
        - Risk Levels
      summary: Update a Risk Level
      operationId: RiskLevel-UpdateRiskLevel-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RiskLevel'
          application/json:
            schema:
              $ref: '#/components/schemas/RiskLevel'
          text/json:
            schema:
              $ref: '#/components/schemas/RiskLevel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RiskLevel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskLevel'
      x-clmi-tags:
        x-primary: Reference Data
    delete:
      tags:
        - Reference Data
        - Risk Levels
      summary: Delete a Risk Level
      operationId: RiskLevel-DeleteRiskLevel-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Reference Data
    parameters:
      - name: id
        in: path
        description: RiskLevel ID
        required: true
        schema:
          type: string
  /api/RiskLevel:
    get:
      tags:
        - Reference Data
        - Risk Levels
      summary: Get all riskLevels
      operationId: RiskLevel-GetAllRiskLevels-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RiskLevel'
      x-clmi-tags:
        x-primary: Reference Data
    post:
      tags:
        - Reference Data
        - Risk Levels
      summary: Add a Risk Level
      operationId: RiskLevel-AddRiskLevel-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RiskLevel'
          application/json:
            schema:
              $ref: '#/components/schemas/RiskLevel'
          text/json:
            schema:
              $ref: '#/components/schemas/RiskLevel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RiskLevel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskLevel'
      x-clmi-tags:
        x-primary: Reference Data
    delete:
      tags:
        - Reference Data
        - Risk Levels
      summary: Delete a list of Risk Levels
      operationId: RiskLevel-DeleteRiskLevels-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: string
          application/json:
            schema:
              type: array
              items:
                type: string
          text/json:
            schema:
              type: array
              items:
                type: string
          application/*+json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Reference Data
  '/api/Role/{roleType}':
    get:
      tags:
        - Roles
      summary: Get a single Role
      operationId: Role-GetSingleRole-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      x-clmi-tags:
        x-primary: Roles
    parameters:
      - name: roleType
        in: path
        description: Role Type
        required: true
        schema:
          $ref: '#/components/schemas/RoleType'
  '/api/Role/{roleType}/relationshipTypes':
    get:
      tags:
        - Roles
      summary: Get relationships that are applicable for a role.
      operationId: Role-GetRoleRelationshipTypes-v1
      parameters:
        - name: relatedPartyType
          in: query
          description: Filter the relationship types where there related to a specific party type e.g. Person
          schema:
            $ref: '#/components/schemas/PartyType'
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelationshipTypeSimple'
      x-clmi-tags:
        x-primary: Roles
    parameters:
      - name: roleType
        in: path
        description: Role Type
        required: true
        schema:
          $ref: '#/components/schemas/RoleType'
  /api/Role/relationshipTypes:
    get:
      tags:
        - Roles
      summary: Get relationships that are applicable for all roles
      operationId: Role-GetAllRoleRelationshipTypes-v1
      parameters:
        - name: relatedPartyType
          in: query
          description: Filter the relationship types where there related to a specific party type e.g. Person
          schema:
            $ref: '#/components/schemas/PartyType'
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationshipTypeSimple'
      x-clmi-tags:
        x-primary: Roles
  /api/Role:
    get:
      tags:
        - Roles
      summary: Get all Roles
      operationId: Role-GetAllRoles-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
      x-clmi-tags:
        x-primary: Roles
  '/api/SavedFilter/{id}':
    get:
      tags:
        - Saved Filters
      summary: Get a single saved filter
      operationId: SavedFilter-GetSingleSavedFilter-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedFilter'
      x-clmi-tags:
        x-primary: Saved Filters
    delete:
      tags:
        - Saved Filters
      summary: Delete a Saved Filter
      operationId: SavedFilter-DeleteSavedFilter-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Saved Filters
    parameters:
      - name: id
        in: path
        description: Saved Filter ID
        required: true
        schema:
          type: string
  '/api/SavedFilter/type/{type}':
    get:
      tags:
        - Saved Filters
      summary: Get saved filters for user and type
      operationId: SavedFilter-GetSavedFiltersForUserAndType-v1
      parameters:
        - name: id
          in: query
          description: Party Id. If null will use logged on user
          schema:
            type: string
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SavedFilter'
      x-clmi-tags:
        x-primary: Saved Filters
    parameters:
      - name: type
        in: path
        description: Saved Filter Type
        required: true
        schema:
          $ref: '#/components/schemas/SavedFilterType'
  /api/SavedFilter:
    get:
      tags:
        - Saved Filters
      summary: Get all saved filters
      operationId: SavedFilter-GetAllSavedFilters-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SavedFilter'
      x-clmi-tags:
        x-primary: Saved Filters
    post:
      tags:
        - Saved Filters
      summary: Add a new Saved Filter
      operationId: SavedFilter-AddSavedFilter-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SavedFilterCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/SavedFilterCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/SavedFilterCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SavedFilterCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedFilter'
      x-clmi-tags:
        x-primary: Saved Filters
  /api/Search:
    get:
      tags:
        - Searches
      summary: Perform a Global Text Search across Portemis
      operationId: Search-GlobalSearch-v1
      parameters:
        - name: searchText
          in: query
          description: Search string in Google Format
          schema:
            type: string
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalSearchResultQueryResult'
      x-clmi-tags:
        x-primary: Searches
    post:
      tags:
        - Searches
      summary: Perform a Global Text Search across Portemis
      operationId: Search-GlobalSearch2-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: The query object to run
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/GlobalSearchQuery'
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalSearchQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/GlobalSearchQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GlobalSearchQuery'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalSearchResultQueryResult'
      x-clmi-tags:
        x-primary: Searches
  /api/Search/entityfilters:
    get:
      tags:
        - Searches
      summary: Get list of entites that global search can be filtered by
      operationId: Search-GetEntityFilters-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityFilter'
      x-clmi-tags:
        x-primary: Searches
  '/api/Select/{source}':
    get:
      tags:
        - Forms
        - Selects
      summary: Get a single locale
      operationId: Select-PerformSelect-v1
      parameters:
        - name: entityId
          in: query
          description: ''
          schema:
            type: string
        - name: formName
          in: query
          description: ''
          schema:
            type: string
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SelectFieldResult'
      x-clmi-tags:
        x-primary: Forms
    parameters:
      - name: source
        in: path
        description: The lookup source
        required: true
        schema:
          $ref: '#/components/schemas/SelectApiSource'
  '/api/SocialAddress/{id}':
    get:
      tags:
        - Contact Points
        - Social Addresses
      summary: Get a single social address
      operationId: SocialAddress-GetSingleSocialAddress-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialAddress'
      x-clmi-tags:
        x-primary: Contact Points
    put:
      tags:
        - Contact Points
        - Social Addresses
      summary: Update a social address.
      operationId: SocialAddress-UpdateSocialAddress-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SocialAddress'
          application/json:
            schema:
              $ref: '#/components/schemas/SocialAddress'
          text/json:
            schema:
              $ref: '#/components/schemas/SocialAddress'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SocialAddress'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialAddress'
      x-clmi-tags:
        x-primary: Contact Points
    parameters:
      - name: id
        in: path
        description: Social address Id
        required: true
        schema:
          type: string
  /api/SocialAddress:
    get:
      tags:
        - Contact Points
        - Social Addresses
      summary: Get all social addresses
      operationId: SocialAddress-GetAllSocialAddresses-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialAddressQueryResult'
      x-clmi-tags:
        x-primary: Contact Points
    post:
      tags:
        - Contact Points
        - Social Addresses
      summary: Add an social address
      operationId: SocialAddress-AddSocialAddress-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Social Address to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SocialAddressCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/SocialAddressCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/SocialAddressCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SocialAddressCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialAddress'
      x-clmi-tags:
        x-primary: Contact Points
  /api/System/version:
    get:
      tags:
        - System
      summary: Gets version info
      operationId: System-GetVersion-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
      x-clmi-tags:
        x-primary: System
  '/api/System/test/{id}':
    get:
      tags:
        - System
      summary: Test
      operationId: System-Test-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
      x-clmi-tags:
        x-primary: System
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/api/System/exchangerate/{currency}':
    get:
      tags:
        - System
      summary: Get latest exchange rate for a currency
      operationId: System-GetExchangeRate-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: number
                format: double
      x-clmi-tags:
        x-primary: System
    parameters:
      - name: currency
        in: path
        description: ''
        required: true
        schema:
          type: string
  /api/System/theme:
    get:
      tags:
        - System
      summary: Get theme info
      operationId: System-GetTheme-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Theme'
      x-clmi-tags:
        x-primary: System
  /api/System/navbar:
    get:
      tags:
        - System
      summary: Get navbar configuration
      operationId: System-GetNavbar-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NavBar'
      x-clmi-tags:
        x-primary: System
  '/api/System/setting/{key}':
    get:
      tags:
        - System
      summary: Get a public configuration setting
      operationId: System-GetPublicSetting-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: System
    parameters:
      - name: key
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/System/setting/{type}/{key}':
    get:
      tags:
        - System
      summary: Get a public configuration setting (by type)
      operationId: System-GetPublicSettingByType-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: System
    parameters:
      - name: type
        in: path
        description: ''
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: ''
        required: true
        schema:
          type: string
  /api/System/status:
    get:
      tags:
        - System
      summary: Get system status and messages
      operationId: System-GetSystemStatus-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemStatus'
      x-clmi-tags:
        x-primary: System
  /api/System/client/cs/dto:
    get:
      tags:
        - System
      summary: Generate C#/dotnet client library from OpenAPI
      operationId: System-GenerateCSharpModel-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: System
  /api/System/client/cs/service:
    get:
      tags:
        - System
      summary: Generate C#/dotnet client library from OpenAPI
      operationId: System-GenerateCSharpService-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: System
  /api/System/client/ts:
    get:
      tags:
        - System
      summary: Generate TS client library from OpenAPI
      operationId: System-GetTypeScriptModel-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: System
  /api/System/schemachange:
    get:
      tags:
        - System
      summary: Get all schema changes based on the code
      operationId: System-GetSchemaChanges-v1
      parameters:
        - name: unappliedOnly
          in: query
          description: Only return unapplied changes
          schema:
            type: boolean
            default: false
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SchemaChange'
      x-clmi-tags:
        x-primary: System
  /api/Tag:
    get:
      tags:
        - Tags
      summary: Get all Tags
      operationId: Tag-GetAllTags-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagQueryResult'
      x-clmi-tags:
        x-primary: Tags
    post:
      tags:
        - Tags
      summary: Add a tag
      operationId: Tag-AddTag-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Tag to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TagCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/TagCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/TagCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TagCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
      x-clmi-tags:
        x-primary: Tags
  /api/Tag/category:
    get:
      tags:
        - Tags
      summary: Get all Tag Categories
      operationId: Tag-GetAllTagCategories-v1
      parameters:
        - name: entityType
          in: query
          description: Filter to specific entity type
          schema:
            $ref: '#/components/schemas/SystemEntity'
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagCat'
      x-clmi-tags:
        x-primary: Tags
  '/api/Tag/category/{category}/suggested':
    get:
      tags:
        - Tags
      summary: Get Suggested Tags for Category
      operationId: Tag-GetSuggestedTags-v1
      parameters:
        - name: all
          in: query
          schema:
            type: boolean
            default: false
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      x-clmi-tags:
        x-primary: Tags
    parameters:
      - name: category
        in: path
        required: true
        schema:
          type: integer
          format: int32
  '/api/Tag/category/{category}':
    get:
      tags:
        - Tags
      summary: Get all Tags for an category (by name)
      operationId: Tag-GetTagsForCategoryString-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      x-clmi-tags:
        x-primary: Tags
    post:
      tags:
        - Tags
      summary: Create tags in bulk
      operationId: Tag-CreateBulkTags-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SimpleTag'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SimpleTag'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SimpleTag'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SimpleTag'
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Tags
    parameters:
      - name: category
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TagCategory'
  '/api/Tag/{entity}/{id}/category/{category}':
    get:
      tags:
        - Tags
      summary: Get all Tags for a specific Entity + Category
      operationId: Tag-GetTagsForSpecificCategoryAndRecordString-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      x-clmi-tags:
        x-primary: Tags
    post:
      tags:
        - Tags
      summary: Create Tag against a record (by category name)
      operationId: Tag-CreateTagForSpecificRecordString-v1
      parameters:
        - name: tag
          in: query
          schema:
            type: string
        - name: colour
          in: query
          schema:
            type: string
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Tags
    delete:
      tags:
        - Tags
      summary: Delete Tag for a specific record  (by category name)
      operationId: Tag-DeleteTagForSpecificRecordString-v1
      parameters:
        - name: tag
          in: query
          description: ''
          schema:
            type: string
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Tags
    parameters:
      - name: entity
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TagEntity'
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: category
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TagCategory'
  '/api/Tag/{entity}/{id}':
    get:
      tags:
        - Tags
      summary: Get all Tags against a specific record
      operationId: Tag-GetTagsForSpecificRecord-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
      x-clmi-tags:
        x-primary: Tags
    parameters:
      - name: entity
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TagEntity'
      - name: id
        in: path
        required: true
        schema:
          type: string
  '/api/Tag/{id}':
    get:
      tags:
        - Tags
      summary: Get a single tag
      operationId: Tag-GetSingleTag-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
      x-clmi-tags:
        x-primary: Tags
    put:
      tags:
        - Tags
      summary: Update a Tag
      operationId: Tag-UpdateTag-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Tag DTO
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TagUpdate'
          application/json:
            schema:
              $ref: '#/components/schemas/TagUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/TagUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TagUpdate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
      x-clmi-tags:
        x-primary: Tags
    delete:
      tags:
        - Tags
      summary: Delete a Tag
      operationId: Tag-DeleteTag-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Tags
    parameters:
      - name: id
        in: path
        description: Tag ID
        required: true
        schema:
          type: string
  '/api/Task/{id}':
    get:
      tags:
        - Activities
        - Tasks
      summary: Get a single task
      operationId: Task-GetSingleTask-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTask'
      x-clmi-tags:
        x-primary: Activities
    put:
      tags:
        - Activities
        - Tasks
      summary: Update a task
      operationId: Task-UpdateTask-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Task to update
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ActivityTask'
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityTask'
          text/json:
            schema:
              $ref: '#/components/schemas/ActivityTask'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ActivityTask'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTask'
      x-clmi-tags:
        x-primary: Activities
    parameters:
      - name: id
        in: path
        description: Task Id
        required: true
        schema:
          type: string
  /api/Task:
    get:
      tags:
        - Activities
        - Tasks
      summary: Get all tasks
      operationId: Task-GetAllTasks-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTaskQueryResult'
      x-clmi-tags:
        x-primary: Activities
    post:
      tags:
        - Activities
        - Tasks
      summary: Add a task
      operationId: Task-AddTask-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Task to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ActivityTaskCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityTaskCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/ActivityTaskCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ActivityTaskCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTask'
      x-clmi-tags:
        x-primary: Activities
  '/api/Team/{id}':
    get:
      tags:
        - Teams
      summary: Get a single team
      operationId: Team-GetSingleTeam-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
      x-clmi-tags:
        x-primary: Teams
    parameters:
      - name: id
        in: path
        description: Team ID
        required: true
        schema:
          type: string
  '/api/Team/{id}/members':
    get:
      tags:
        - Teams
      summary: Get a single team's members
      operationId: Team-GetSingleTeamMembers-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Party'
      x-clmi-tags:
        x-primary: Teams
    parameters:
      - name: id
        in: path
        description: Team ID
        required: true
        schema:
          type: string
  /api/Team:
    get:
      tags:
        - Teams
      summary: Search teams
      operationId: Team-SearchTeams-v1
      parameters:
        - name: q
          in: query
          schema:
            type: string
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamQueryResult'
      x-clmi-tags:
        x-primary: Teams
    post:
      tags:
        - Teams
      summary: Add a team
      operationId: Team-AddTeam-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Team to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TeamCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/TeamCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/TeamCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TeamCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Party'
      x-clmi-tags:
        x-primary: Teams
  '/api/Team/{id}/workitems':
    get:
      tags:
        - Teams
      summary: Get work items by assigned team
      operationId: Team-GetWorkItemsByAssignedTeam-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkItem'
      x-clmi-tags:
        x-primary: Teams
    parameters:
      - name: id
        in: path
        description: Process ID
        required: true
        schema:
          type: string
  /api/Team/search:
    post:
      tags:
        - Teams
      summary: Search teams
      operationId: Team-SearchTeamsWithFilter-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: Team Filter
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TeamFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/TeamFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/TeamFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TeamFilter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamQueryResult'
      x-clmi-tags:
        x-primary: Teams
  '/api/Team/{id}/user/{userId}':
    post:
      tags:
        - Teams
      summary: Add user to a team
      operationId: Team-AddUserToTeam-v1
      parameters:
        - name: isPrincipalTeam
          in: query
          description: Is this Principal Team for the User
          schema:
            type: boolean
            default: false
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
      x-clmi-tags:
        x-primary: Teams
    parameters:
      - name: id
        in: path
        description: Team ID
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: User (party role) ID
        required: true
        schema:
          type: string
  '/api/Team/{id}/User/{userId}':
    delete:
      tags:
        - Teams
      summary: Remove user from a team
      operationId: Team-RemoveUserFromTeam-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
      x-clmi-tags:
        x-primary: Teams
    parameters:
      - name: id
        in: path
        description: Team ID
        required: true
        schema:
          type: string
      - name: userId
        in: path
        description: User (party role) ID
        required: true
        schema:
          type: string
  /api/TimeBooking:
    get:
      tags:
        - Activities
        - Time Bookings
      summary: Get all timebookings
      operationId: TimeBooking-GetAllTimeBookings-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTimeBookingQueryResult'
      x-clmi-tags:
        x-primary: Activities
    post:
      tags:
        - Activities
        - Time Bookings
      summary: Add a timebooking
      operationId: TimeBooking-AddTimeBooking-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: TimeBooking to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ActivityTimeBookingCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityTimeBookingCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/ActivityTimeBookingCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ActivityTimeBookingCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTimeBooking'
      x-clmi-tags:
        x-primary: Activities
  '/api/TimeBooking/{id}':
    put:
      tags:
        - Activities
        - Time Bookings
      summary: Update a timebooking
      operationId: TimeBooking-UpdateTimeBooking-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: TimeBooking to update
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ActivityTimeBooking'
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityTimeBooking'
          text/json:
            schema:
              $ref: '#/components/schemas/ActivityTimeBooking'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ActivityTimeBooking'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTimeBooking'
      x-clmi-tags:
        x-primary: Activities
    parameters:
      - name: id
        in: path
        description: The ID of the record
        required: true
        schema:
          type: string
  '/api/User/{id}/avatar':
    get:
      tags:
        - Users
      summary: Get a single user avatar
      operationId: User-GetSingleUserAvatar-v1
      parameters:
        - name: size
          in: query
          description: ''
          schema:
            type: integer
            format: int32
            default: 128
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Users
    parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: string
  '/api/User/{id}':
    get:
      tags:
        - Users
      summary: Get a single user
      operationId: User-GetSingleUser-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Party'
      x-clmi-tags:
        x-primary: Users
    parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: string
  /api/User:
    get:
      tags:
        - Users
      summary: Search users
      operationId: User-SearchUsers-v1
      parameters:
        - name: q
          in: query
          schema:
            type: string
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserQueryResult'
      x-clmi-tags:
        x-primary: Users
    post:
      tags:
        - Users
      summary: Add a user
      operationId: User-AddUser-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: User to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Party'
      x-clmi-tags:
        x-primary: Users
  /api/User/me/locale:
    get:
      tags:
        - Users
      summary: "What is my locale?\r\nSet on User record - if not supplied, derived from Accept-Language header sent by browser. Fallback to en-GB"
      operationId: User-MyLocale-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locale'
      x-clmi-tags:
        x-primary: Users
  /api/User/me:
    get:
      tags:
        - Users
      summary: Who am I?
      operationId: User-WhoAmI-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      x-clmi-tags:
        x-primary: Users
  /api/User/me/notification:
    get:
      tags:
        - Users
      summary: Get my Notifications
      operationId: User-GetMyNotifications-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationQueryResult'
      x-clmi-tags:
        x-primary: Users
    patch:
      tags:
        - Users
      summary: Mark my Notifications read
      operationId: User-MarkMyNotificationsRead-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Users
  /api/User/me/tenant:
    get:
      tags:
        - Users
      summary: Get a list of My Tenants
      operationId: User-MyTenants-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTenant'
      x-clmi-tags:
        x-primary: Users
  /api/User/me/today:
    get:
      tags:
        - Users
      summary: Get user's today view
      operationId: User-GetMyTodayView-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Today'
      x-clmi-tags:
        x-primary: Users
  /api/User/me/dashboard:
    get:
      tags:
        - Users
      summary: Get user's dashboard view
      operationId: User-GetMyDashboardView-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
      x-clmi-tags:
        x-primary: Users
  /api/User/me/cards:
    get:
      tags:
        - Users
      summary: Get all action cards assigned to the current user.
      operationId: User-GetMyActionCards-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'
      x-clmi-tags:
        x-primary: Users
  /api/User/me/workitems:
    get:
      tags:
        - Users
      summary: Get work items assigned to the current user
      operationId: User-GetWorkItemsAssignedToMe-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkItem'
      x-clmi-tags:
        x-primary: Users
  '/api/User/{id}/workitems':
    get:
      tags:
        - Users
      summary: Get work items by assignee
      operationId: User-GetWorkItemsByAssignee-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkItem'
      x-clmi-tags:
        x-primary: Users
    parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: string
  /api/User/search:
    post:
      tags:
        - Users
      summary: Search users
      operationId: User-SearchUsersWithFilter-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: User Filter
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/UserFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/UserFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserFilter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamQueryResult'
      x-clmi-tags:
        x-primary: Users
  /api/User/me/todo:
    post:
      tags:
        - Users
      summary: Get my "TO DO" activities
      operationId: User-GetToDo-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: filter
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TodoFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/TodoFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/TodoFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TodoFilter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ToDoActivity'
      x-clmi-tags:
        x-primary: Users
  /api/User/me/password:
    post:
      tags:
        - Users
      summary: Change my password
      operationId: User-ChangePassword-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserPasswordChange'
          application/json:
            schema:
              $ref: '#/components/schemas/UserPasswordChange'
          text/json:
            schema:
              $ref: '#/components/schemas/UserPasswordChange'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserPasswordChange'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Party'
      x-clmi-tags:
        x-primary: Users
  /api/User/me/notification/unread:
    patch:
      tags:
        - Users
      summary: Mark my Notifications unread
      operationId: User-MarkMyNotificationsUnRead-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Users
  /api/User/me/avatar:
    put:
      tags:
        - Users
      summary: Set current user avatar
      operationId: User-SetMyAvatar-v1
      parameters:
        - name: testing
          in: query
          schema:
            type: boolean
            default: false
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Users
    delete:
      tags:
        - Users
      summary: Delete current user avatar
      operationId: User-DeleteMyAvatar-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Users
  '/api/User/me/tenant/{tenant}/default':
    put:
      tags:
        - Users
      summary: Set a users default tenant
      operationId: User-SetMyDefaultTenant-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Users
    parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
  '/api/UserAction/favourite/entity/{entityType}/{recordId}':
    get:
      tags:
        - User Actions
      summary: Gets the Favourite "state" of a record
      operationId: UserAction-GetFavouriteState-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: boolean
      x-clmi-tags:
        x-primary: User Actions
    parameters:
      - name: entityType
        in: path
        description: ''
        required: true
        schema:
          $ref: '#/components/schemas/UserActionEntity'
      - name: recordId
        in: path
        description: ''
        required: true
        schema:
          type: string
  '/api/UserAction/{userAction}/entity/{entityType}/{recordId}':
    patch:
      tags:
        - User Actions
      summary: Submits a user action against a record
      operationId: UserAction-ProcessAction-v1
      parameters:
        - name: additional
          in: query
          description: Additional - Field/Document name
          schema:
            type: string
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: User Actions
    parameters:
      - name: userAction
        in: path
        description: The Action (See UserAction enum)
        required: true
        schema:
          $ref: '#/components/schemas/UserAction'
      - name: entityType
        in: path
        description: The Entity Type (See SystemEntity enum)
        required: true
        schema:
          $ref: '#/components/schemas/UserActionEntity'
      - name: recordId
        in: path
        description: The Record Id
        required: true
        schema:
          type: string
  '/api/UserAction/recent/{id}/pin':
    patch:
      tags:
        - User Actions
      summary: Pin a recent record
      operationId: UserAction-PinRecent-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecentRecordSummary'
      x-clmi-tags:
        x-primary: User Actions
    parameters:
      - name: id
        in: path
        description: Recent record id
        required: true
        schema:
          type: string
  '/api/UserAction/recent/{id}/unpin':
    patch:
      tags:
        - User Actions
      summary: Unpin a recent record
      operationId: UserAction-UnpinRecent-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecentRecordSummary'
      x-clmi-tags:
        x-primary: User Actions
    parameters:
      - name: id
        in: path
        description: Recent record id
        required: true
        schema:
          type: string
  /api/WebHook:
    get:
      tags:
        - Web Hooks
      summary: Get all WebHooks
      operationId: WebHook-GetAllWebHooks-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebHookQueryResult'
      x-clmi-tags:
        x-primary: Web Hooks
    post:
      tags:
        - Web Hooks
      summary: Add a web hook
      operationId: WebHook-AddWebHook-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: WebHook to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/WebHookCreate'
          application/json:
            schema:
              $ref: '#/components/schemas/WebHookCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/WebHookCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/WebHookCreate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebHookCreate'
      x-clmi-tags:
        x-primary: Web Hooks
  '/api/WebHook/{id}':
    get:
      tags:
        - Web Hooks
      summary: Get a single webhook
      operationId: WebHook-GetSingleWebHook-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebHook'
      x-clmi-tags:
        x-primary: Web Hooks
    put:
      tags:
        - Web Hooks
      summary: Update a Web Hook
      operationId: WebHook-UpdateWebHook-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      requestBody:
        description: WebHook DTO
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/WebHookUpdate'
          application/json:
            schema:
              $ref: '#/components/schemas/WebHookUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/WebHookUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/WebHookUpdate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebHook'
      x-clmi-tags:
        x-primary: Web Hooks
    delete:
      tags:
        - Web Hooks
      summary: Delete a WebHook
      operationId: WebHook-DeleteWebHook-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Web Hooks
    parameters:
      - name: id
        in: path
        description: WebHook ID
        required: true
        schema:
          type: string
  '/api/WebHook/{id}/log':
    get:
      tags:
        - Web Hooks
      summary: Get logs for a webhooks
      operationId: WebHook-GetWebHookLogs-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebHook'
      x-clmi-tags:
        x-primary: Web Hooks
    parameters:
      - name: id
        in: path
        description: WebHook ID
        required: true
        schema:
          type: string
  '/api/WorkItem/{id}':
    get:
      tags:
        - Work Items
      summary: Get a single work item
      operationId: WorkItem-GetSingleWorkItem-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItem'
      x-clmi-tags:
        x-primary: Work Items
    parameters:
      - name: id
        in: path
        description: Work Item Id
        required: true
        schema:
          type: string
  '/api/WorkItem/{id}/start':
    patch:
      tags:
        - Work Items
      summary: Starts a work item.
      operationId: WorkItem-StartWorkItem-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Work Items
    parameters:
      - name: id
        in: path
        description: Work Item Id
        required: true
        schema:
          type: string
  '/api/WorkItem/{id}/cancel':
    patch:
      tags:
        - Work Items
      summary: Cancels a work item
      operationId: WorkItem-CancelWorkItem-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Work Items
    parameters:
      - name: id
        in: path
        description: Work Item Id
        required: true
        schema:
          type: string
  '/api/WorkItem/{id}/assign':
    patch:
      tags:
        - Work Items
      summary: Assigns a work item
      operationId: WorkItem-AssignWorkItem-v1
      parameters:
        - name: user
          in: query
          description: ''
          schema:
            type: string
        - name: team
          in: query
          description: ''
          schema:
            type: string
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Work Items
    parameters:
      - name: id
        in: path
        description: Work Item Id
        required: true
        schema:
          type: string
  '/api/WorkItem/{id}/complete':
    patch:
      tags:
        - Work Items
      summary: Completes a work item
      operationId: WorkItem-CompleteWorkItem-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Work Items
    parameters:
      - name: id
        in: path
        description: Work Item Id
        required: true
        schema:
          type: string
  '/api/WorkItem/{id}/outcome/{code}':
    patch:
      tags:
        - Work Items
      summary: Performs a work item outcome
      operationId: WorkItem-PerformWorkItemOutcome-v1
      parameters:
        - name: api-version
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
      x-clmi-tags:
        x-primary: Work Items
    parameters:
      - name: id
        in: path
        description: Work Item Id
        required: true
        schema:
          type: string
      - name: code
        in: path
        description: The outcome code to trigger
        required: true
        schema:
          type: string
components:
  schemas:
    Action:
      type: object
      properties:
        recalculate:
          type: array
          items:
            type: string
          nullable: true
        functions:
          type: array
          items:
            $ref: '#/components/schemas/Function'
          nullable: true
        openUrls:
          type: array
          items:
            type: string
          nullable: true
        updateFields:
          type: array
          items:
            $ref: '#/components/schemas/UpdateField'
          nullable: true
        updateLabels:
          type: array
          items:
            $ref: '#/components/schemas/UpdateLabel'
          nullable: true
        updateSections:
          type: array
          items:
            $ref: '#/components/schemas/UpdateSection'
          nullable: true
        updateButtons:
          type: array
          items:
            $ref: '#/components/schemas/UpdateButton'
          nullable: true
      additionalProperties: false
    Activity:
      type: object
      properties:
        id:
          type: string
          nullable: true
        uuid:
          type: string
          format: uuid
        isActive:
          type: boolean
        isPinned:
          type: boolean
        status:
          $ref: '#/components/schemas/ActivityStatusType'
        subject:
          maxLength: 255
          type: string
          nullable: true
        content:
          type: string
          nullable: true
        activityType:
          $ref: '#/components/schemas/ActivityType'
        dateCreated:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
          nullable: true
        due:
          type: string
          format: date-time
          nullable: true
        completed:
          type: string
          format: date-time
          nullable: true
        duration:
          type: integer
          format: int32
          nullable: true
        isAllDay:
          type: boolean
        dateImportantUntil:
          type: string
          format: date-time
          nullable: true
        process:
          $ref: '#/components/schemas/Reference'
        regarding:
          type: array
          items:
            $ref: '#/components/schemas/Regarding'
          nullable: true
        files:
          type: array
          items:
            type: string
          nullable: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/SimpleTag'
          nullable: true
        hasFiles:
          type: boolean
        activityParties:
          type: array
          items:
            $ref: '#/components/schemas/ActivityParty'
          nullable: true
        parentActivityId:
          type: string
          nullable: true
        childActivities:
          type: array
          items:
            type: string
          nullable: true
        chats:
          type: array
          items:
            $ref: '#/components/schemas/ActivityChat'
          nullable: true
        reminders:
          type: array
          items:
            $ref: '#/components/schemas/Reminder'
          nullable: true
      additionalProperties: false
    ActivityAppointment:
      type: object
      properties:
        id:
          type: string
          nullable: true
        uuid:
          type: string
          format: uuid
        isActive:
          type: boolean
        isPinned:
          type: boolean
        status:
          $ref: '#/components/schemas/ActivityStatusType'
        subject:
          maxLength: 255
          type: string
          nullable: true
        content:
          type: string
          nullable: true
        activityType:
          $ref: '#/components/schemas/ActivityType'
        dateCreated:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
          nullable: true
        due:
          type: string
          format: date-time
          nullable: true
        completed:
          type: string
          format: date-time
          nullable: true
        duration:
          type: integer
          format: int32
          nullable: true
        isAllDay:
          type: boolean
        dateImportantUntil:
          type: string
          format: date-time
          nullable: true
        process:
          $ref: '#/components/schemas/Reference'
        regarding:
          type: array
          items:
            $ref: '#/components/schemas/Regarding'
          nullable: true
        files:
          type: array
          items:
            type: string
          nullable: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/SimpleTag'
          nullable: true
        hasFiles:
          type: boolean
        activityParties:
          type: array
          items:
            $ref: '#/components/schemas/ActivityParty'
          nullable: true
        parentActivityId:
          type: string
          nullable: true
        childActivities:
          type: array
          items:
            type: string
          nullable: true
        chats:
          type: array
          items:
            $ref: '#/components/schemas/ActivityChat'
          nullable: true
        reminders:
          type: array
          items:
            $ref: '#/components/schemas/Reminder'
          nullable: true
        location:
          type: string
          nullable: true
      additionalProperties: false
    ActivityAppointmentCreate:
      type: object
      properties:
        subject:
          maxLength: 255
          type: string
          nullable: true
        content:
          type: string
          nullable: true
        start:
          type: string
          format: date-time
          nullable: true
        due:
          type: string
          format: date-time
          nullable: true
        completed:
          type: string
          format: date-time
          nullable: true
        duration:
          type: integer
          format: int32
          nullable: true
        isAllDay:
          type: boolean
        dateImportantUntil:
          type: string
          format: date-time
          nullable: true
        regarding:
          type: array
          items:
            $ref: '#/components/schemas/Regarding'
          nullable: true
        activityParties:
          type: array
          items:
            $ref: '#/components/schemas/ActivityParty'
          nullable: true
        files:
          type: array
          items:
            type: string
          nullable: true
        isPinned:
          type: boolean
          nullable: true
        sendInvite:
          type: boolean
        inviteHtml:
          type: string
          nullable: true
        invitePlainText:
          type: string
          nullable: true
        location:
          type: string
          nullable: true
        parentActivityId:
          type: string
          nullable: true
      additionalProperties: false
    ActivityAppointmentQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ActivityAppointment'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    ActivityChat:
      type: object
      properties:
        id:
          type: string
          nullable: true
        activitySummary:
          $ref: '#/components/schemas/ActivitySummary'
        party:
          $ref: '#/components/schemas/PartyStub'
        dateOccurred:
          type: string
          format: date-time
          nullable: true
        content:
          type: string
          nullable: true
        isIssue:
          type: boolean
        resolvedOn:
          type: string
          format: date-time
          nullable: true
        resolvedBy:
          $ref: '#/components/schemas/PartyStub'
        resolvingChatId:
          type: integer
          format: int32
          nullable: true
        fileIndex:
          type: string
          nullable: true
      additionalProperties: false
    ActivityChatCreate:
      type: object
      properties:
        content:
          type: string
          nullable: true
        fileIndex:
          type: string
          nullable: true
        reportIssue:
          type: boolean
        resolveIssue:
          type: boolean
      additionalProperties: false
    ActivityChatQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ActivityChat'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    ActivityCommentCreate:
      type: object
      properties:
        content:
          type: string
          nullable: true
      additionalProperties: false
    ActivityEmail:
      type: object
      properties:
        id:
          type: string
          nullable: true
        uuid:
          type: string
          format: uuid
        isActive:
          type: boolean
        isPinned:
          type: boolean
        status:
          $ref: '#/components/schemas/ActivityStatusType'
        subject:
          maxLength: 255
          type: string
          nullable: true
        content:
          type: string
          nullable: true
        activityType:
          $ref: '#/components/schemas/ActivityType'
        dateCreated:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
          nullable: true
        due:
          type: string
          format: date-time
          nullable: true
        completed:
          type: string
          format: date-time
          nullable: true
        duration:
          type: integer
          format: int32
          nullable: true
        isAllDay:
          type: boolean
        dateImportantUntil:
          type: string
          format: date-time
          nullable: true
        process:
          $ref: '#/components/schemas/Reference'
        regarding:
          type: array
          items:
            $ref: '#/components/schemas/Regarding'
          nullable: true
        files:
          type: array
          items:
            type: string
          nullable: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/SimpleTag'
          nullable: true
        hasFiles:
          type: boolean
        activityParties:
          type: array
          items:
            $ref: '#/components/schemas/ActivityParty'
          nullable: true
        parentActivityId:
          type: string
          nullable: true
        childActivities:
          type: array
          items:
            type: string
          nullable: true
        chats:
          type: array
          items:
            $ref: '#/components/schemas/ActivityChat'
          nullable: true
        reminders:
          type: array
          items:
            $ref: '#/components/schemas/Reminder'
          nullable: true
      additionalProperties: false
    ActivityEmailCreate:
      type: object
      properties:
        subject:
          maxLength: 255
          type: string
          nullable: true
        content:
          type: string
          nullable: true
        start:
          type: string
          format: date-time
          nullable: true
        due:
          type: string
          format: date-time
          nullable: true
        completed:
          type: string
          format: date-time
          nullable: true
        duration:
          type: integer
          format: int32
          nullable: true
        isAllDay:
          type: boolean
        dateImportantUntil:
          type: string
          format: date-time
          nullable: true
        regarding:
          type: array
          items:
            $ref: '#/components/schemas/Regarding'
          nullable: true
        activityParties:
          type: array
          items:
            $ref: '#/components/schemas/ActivityParty'
          nullable: true
        files:
          type: array
          items:
            type: string
          nullable: true
        isPinned:
          type: boolean
          nullable: true
      additionalProperties: false
    ActivityEmailQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ActivityEmail'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    ActivityFile:
      type: object
      properties:
        name:
          type: string
          nullable: true
        contentType:
          type: string
          nullable: true
        fileIndex:
          type: string
          nullable: true
        sizeInBytes:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    ActivityHistory:
      type: object
      properties:
        activity:
          $ref: '#/components/schemas/Reference'
        action:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        recordedBy:
          $ref: '#/components/schemas/MinimalParty'
        dateRecorded:
          type: string
          format: date-time
      additionalProperties: false
    ActivityNote:
      type: object
      properties:
        id:
          type: string
          nullable: true
        uuid:
          type: string
          format: uuid
        isActive:
          type: boolean
        isPinned:
          type: boolean
        status:
          $ref: '#/components/schemas/ActivityStatusType'
        subject:
          maxLength: 255
          type: string
          nullable: true
        content:
          type: string
          nullable: true
        activityType:
          $ref: '#/components/schemas/ActivityType'
        dateCreated:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
          nullable: true
        due:
          type: string
          format: date-time
          nullable: true
        completed:
          type: string
          format: date-time
          nullable: true
        duration:
          type: integer
          format: int32
          nullable: true
        isAllDay:
          type: boolean
        dateImportantUntil:
          type: string
          format: date-time
          nullable: true
        process:
          $ref: '#/components/schemas/Reference'
        regarding:
          type: array
          items:
            $ref: '#/components/schemas/Regarding'
          nullable: true
        files:
          type: array
          items:
            type: string
          nullable: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/SimpleTag'
          nullable: true
        hasFiles:
          type: boolean
        activityParties:
          type: array
          items:
            $ref: '#/components/schemas/ActivityParty'
          nullable: true
        parentActivityId:
          type: string
          nullable: true
        childActivities:
          type: array
          items:
            type: string
          nullable: true
        chats:
          type: array
          items:
            $ref: '#/components/schemas/ActivityChat'
          nullable: true
        reminders:
          type: array
          items:
            $ref: '#/components/schemas/Reminder'
          nullable: true
      additionalProperties: false
    ActivityNoteCreate:
      type: object
      properties:
        subject:
          maxLength: 255
          type: string
          nullable: true
        content:
          type: string
          nullable: true
        start:
          type: string
          format: date-time
          nullable: true
        due:
          type: string
          format: date-time
          nullable: true
        completed:
          type: string
          format: date-time
          nullable: true
        duration:
          type: integer
          format: int32
          nullable: true
        isAllDay:
          type: boolean
        dateImportantUntil:
          type: string
          format: date-time
          nullable: true
        regarding:
          type: array
          items:
            $ref: '#/components/schemas/Regarding'
          nullable: true
        activityParties:
          type: array
          items:
            $ref: '#/components/schemas/ActivityParty'
          nullable: true
        files:
          type: array
          items:
            type: string
          nullable: true
        isPinned:
          type: boolean
          nullable: true
      additionalProperties: false
    ActivityNoteQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ActivityNote'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    ActivityParty:
      type: object
      properties:
        activityPartyType:
          $ref: '#/components/schemas/ActivityPartyType'
        party:
          $ref: '#/components/schemas/PartyStub'
        partyRole:
          $ref: '#/components/schemas/Reference'
        contactPoint:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    ActivityPartyType:
      enum:
        - To
        - From
        - CC
        - BCC
        - Organiser
        - Required
        - Optional
        - Assignee
        - AssigneeTeam
        - Related
        - Creator
      type: string
    ActivityPhoneCall:
      type: object
      properties:
        id:
          type: string
          nullable: true
        uuid:
          type: string
          format: uuid
        isActive:
          type: boolean
        isPinned:
          type: boolean
        status:
          $ref: '#/components/schemas/ActivityStatusType'
        subject:
          maxLength: 255
          type: string
          nullable: true
        content:
          type: string
          nullable: true
        activityType:
          $ref: '#/components/schemas/ActivityType'
        dateCreated:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
          nullable: true
        due:
          type: string
          format: date-time
          nullable: true
        completed:
          type: string
          format: date-time
          nullable: true
        duration:
          type: integer
          format: int32
          nullable: true
        isAllDay:
          type: boolean
        dateImportantUntil:
          type: string
          format: date-time
          nullable: true
        process:
          $ref: '#/components/schemas/Reference'
        regarding:
          type: array
          items:
            $ref: '#/components/schemas/Regarding'
          nullable: true
        files:
          type: array
          items:
            type: string
          nullable: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/SimpleTag'
          nullable: true
        hasFiles:
          type: boolean
        activityParties:
          type: array
          items:
            $ref: '#/components/schemas/ActivityParty'
          nullable: true
        parentActivityId:
          type: string
          nullable: true
        childActivities:
          type: array
          items:
            type: string
          nullable: true
        chats:
          type: array
          items:
            $ref: '#/components/schemas/ActivityChat'
          nullable: true
        reminders:
          type: array
          items:
            $ref: '#/components/schemas/Reminder'
          nullable: true
        direction:
          $ref: '#/components/schemas/PhoneDirection'
      additionalProperties: false
    ActivityPhoneCallCreate:
      type: object
      properties:
        subject:
          maxLength: 255
          type: string
          nullable: true
        content:
          type: string
          nullable: true
        start:
          type: string
          format: date-time
          nullable: true
        due:
          type: string
          format: date-time
          nullable: true
        completed:
          type: string
          format: date-time
          nullable: true
        duration:
          type: integer
          format: int32
          nullable: true
        isAllDay:
          type: boolean
        dateImportantUntil:
          type: string
          format: date-time
          nullable: true
        regarding:
          type: array
          items:
            $ref: '#/components/schemas/Regarding'
          nullable: true
        activityParties:
          type: array
          items:
            $ref: '#/components/schemas/ActivityParty'
          nullable: true
        files:
          type: array
          items:
            type: string
          nullable: true
        isPinned:
          type: boolean
          nullable: true
        direction:
          $ref: '#/components/schemas/PhoneDirection'
        parentActivityId:
          type: string
          nullable: true
      additionalProperties: false
    ActivityPhoneCallQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ActivityPhoneCall'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    ActivityQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    ActivityScheduleFilterType:
      enum:
        - Overdue
        - Today
        - Next7Days
        - BeyondNext7Days
        - Custom
      type: string
    ActivityStatusType:
      enum:
        - Draft
        - Active
        - Complete
        - Cancelled
      type: string
    ActivitySummary:
      type: object
      properties:
        id:
          type: string
          nullable: true
        isActive:
          type: boolean
        status:
          type: string
          nullable: true
        subject:
          maxLength: 255
          type: string
          nullable: true
        activityType:
          type: string
          nullable: true
        dateDue:
          type: string
          format: date-time
          nullable: true
        dateStart:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    ActivityTask:
      type: object
      properties:
        id:
          type: string
          nullable: true
        uuid:
          type: string
          format: uuid
        isActive:
          type: boolean
        isPinned:
          type: boolean
        status:
          $ref: '#/components/schemas/ActivityStatusType'
        subject:
          maxLength: 255
          type: string
          nullable: true
        content:
          type: string
          nullable: true
        activityType:
          $ref: '#/components/schemas/ActivityType'
        dateCreated:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
          nullable: true
        due:
          type: string
          format: date-time
          nullable: true
        completed:
          type: string
          format: date-time
          nullable: true
        duration:
          type: integer
          format: int32
          nullable: true
        isAllDay:
          type: boolean
        dateImportantUntil:
          type: string
          format: date-time
          nullable: true
        process:
          $ref: '#/components/schemas/Reference'
        regarding:
          type: array
          items:
            $ref: '#/components/schemas/Regarding'
          nullable: true
        files:
          type: array
          items:
            type: string
          nullable: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/SimpleTag'
          nullable: true
        hasFiles:
          type: boolean
        activityParties:
          type: array
          items:
            $ref: '#/components/schemas/ActivityParty'
          nullable: true
        parentActivityId:
          type: string
          nullable: true
        childActivities:
          type: array
          items:
            type: string
          nullable: true
        chats:
          type: array
          items:
            $ref: '#/components/schemas/ActivityChat'
          nullable: true
        reminders:
          type: array
          items:
            $ref: '#/components/schemas/Reminder'
          nullable: true
      additionalProperties: false
    ActivityTaskCreate:
      type: object
      properties:
        subject:
          maxLength: 255
          type: string
          nullable: true
        content:
          type: string
          nullable: true
        start:
          type: string
          format: date-time
          nullable: true
        due:
          type: string
          format: date-time
          nullable: true
        completed:
          type: string
          format: date-time
          nullable: true
        duration:
          type: integer
          format: int32
          nullable: true
        isAllDay:
          type: boolean
        dateImportantUntil:
          type: string
          format: date-time
          nullable: true
        regarding:
          type: array
          items:
            $ref: '#/components/schemas/Regarding'
          nullable: true
        activityParties:
          type: array
          items:
            $ref: '#/components/schemas/ActivityParty'
          nullable: true
        files:
          type: array
          items:
            type: string
          nullable: true
        isPinned:
          type: boolean
          nullable: true
        parentActivityId:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    ActivityTaskQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ActivityTask'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    ActivityTimeBooking:
      type: object
      properties:
        id:
          type: string
          nullable: true
        uuid:
          type: string
          format: uuid
        isActive:
          type: boolean
        isPinned:
          type: boolean
        status:
          $ref: '#/components/schemas/ActivityStatusType'
        subject:
          maxLength: 255
          type: string
          nullable: true
        content:
          type: string
          nullable: true
        activityType:
          $ref: '#/components/schemas/ActivityType'
        dateCreated:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
          nullable: true
        due:
          type: string
          format: date-time
          nullable: true
        completed:
          type: string
          format: date-time
          nullable: true
        duration:
          type: integer
          format: int32
          nullable: true
        isAllDay:
          type: boolean
        dateImportantUntil:
          type: string
          format: date-time
          nullable: true
        process:
          $ref: '#/components/schemas/Reference'
        regarding:
          type: array
          items:
            $ref: '#/components/schemas/Regarding'
          nullable: true
        files:
          type: array
          items:
            type: string
          nullable: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/SimpleTag'
          nullable: true
        hasFiles:
          type: boolean
        activityParties:
          type: array
          items:
            $ref: '#/components/schemas/ActivityParty'
          nullable: true
        parentActivityId:
          type: string
          nullable: true
        childActivities:
          type: array
          items:
            type: string
          nullable: true
        chats:
          type: array
          items:
            $ref: '#/components/schemas/ActivityChat'
          nullable: true
        reminders:
          type: array
          items:
            $ref: '#/components/schemas/Reminder'
          nullable: true
        bookingType:
          $ref: '#/components/schemas/TimeBookingType'
        costs:
          $ref: '#/components/schemas/CurrencyValue'
      additionalProperties: false
    ActivityTimeBookingCreate:
      required:
        - bookingType
      type: object
      properties:
        subject:
          maxLength: 255
          type: string
          nullable: true
        content:
          type: string
          nullable: true
        start:
          type: string
          format: date-time
          nullable: true
        due:
          type: string
          format: date-time
          nullable: true
        completed:
          type: string
          format: date-time
          nullable: true
        duration:
          type: integer
          format: int32
          nullable: true
        isAllDay:
          type: boolean
        dateImportantUntil:
          type: string
          format: date-time
          nullable: true
        regarding:
          type: array
          items:
            $ref: '#/components/schemas/Regarding'
          nullable: true
        activityParties:
          type: array
          items:
            $ref: '#/components/schemas/ActivityParty'
          nullable: true
        files:
          type: array
          items:
            type: string
          nullable: true
        isPinned:
          type: boolean
          nullable: true
        bookingType:
          $ref: '#/components/schemas/TimeBookingType'
        costs:
          $ref: '#/components/schemas/CurrencyValue'
      additionalProperties: false
    ActivityTimeBookingQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ActivityTimeBooking'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    ActivityType:
      enum:
        - PhoneCall
        - Email
        - Appointment
        - Task
        - WorkItem
        - Note
        - TimeBooking
      type: string
    AddressType:
      enum:
        - Residential
        - Business
        - Postal
        - POBOX
        - MailTo
        - DeliveryTo
      type: string
    Adviser:
      type: object
      properties:
        id:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        isPrimary:
          type: boolean
        isActive:
          type: boolean
        party:
          $ref: '#/components/schemas/PartyStub'
        role:
          $ref: '#/components/schemas/Role'
        clientStatusType:
          $ref: '#/components/schemas/ClientStatusType'
        description:
          type: string
          nullable: true
        client:
          $ref: '#/components/schemas/PartyClient'
        lastContactedDate:
          type: string
          format: date-time
          nullable: true
        lastContactedType:
          $ref: '#/components/schemas/ActivityType'
        lastContactedId:
          $ref: '#/components/schemas/Reference'
        lastMeetingDate:
          type: string
          format: date-time
          nullable: true
        lastMeetingType:
          $ref: '#/components/schemas/ActivityType'
        lastMeetingId:
          $ref: '#/components/schemas/Reference'
        nextMeetingDate:
          type: string
          format: date-time
          nullable: true
        nextMeetingType:
          $ref: '#/components/schemas/ActivityType'
        nextMeetingId:
          $ref: '#/components/schemas/Reference'
        isMine:
          type: boolean
          nullable: true
        relationshipOverview:
          type: string
          nullable: true
        teamMembers:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        subsidiaryTeams:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        subsidiaries:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        powerOfAttorneyFor:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        wards:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        employees:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        trustees:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        directors:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        shareholders:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        correspondents:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        settlors:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        beneficiaries:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        jointInvestors:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        teamMembersOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        parentTeams:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        parentOrganisations:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        powerOfAttorneys:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        parents:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        guardians:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        employers:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        trusteesOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        directorsOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        shareholdersOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        correspondentsOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        settlorsOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        beneficiariesOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        jointInvestorsOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        advisers:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        productProviders:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        professionals:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        friends:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        spouses:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        partners:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        divorcees:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        widowees:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        familyMembers:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        person:
          $ref: '#/components/schemas/Person'
        capacityCode:
          $ref: '#/components/schemas/IntermediaryCapacityType'
        currency:
          $ref: '#/components/schemas/Currency'
        totalValueIntroduced:
          $ref: '#/components/schemas/CurrencyValue'
        totalValueManaged:
          $ref: '#/components/schemas/CurrencyValue'
        adviserPipelineWeightedValue:
          $ref: '#/components/schemas/CurrencyValue'
        intermediaries:
          type: array
          items:
            $ref: '#/components/schemas/Regarding'
          nullable: true
        isFavourite:
          type: boolean
      additionalProperties: false
    AdviserCreate:
      required:
        - firstName
        - lastName
        - roleType
        - title
      type: object
      properties:
        title:
          maxLength: 80
          type: string
        firstName:
          maxLength: 80
          type: string
        middleNames:
          maxLength: 95
          type: string
          nullable: true
        code:
          maxLength: 100
          type: string
          nullable: true
        lastName:
          maxLength: 80
          type: string
        dateOfBirth:
          type: string
          format: date-time
          nullable: true
        genderCode:
          $ref: '#/components/schemas/GenderType'
        maritalStatus:
          $ref: '#/components/schemas/MaritalStatusType'
        locale:
          type: string
          nullable: true
        currencyCode:
          type: string
          nullable: true
        nationality:
          type: string
          nullable: true
        domicile:
          type: string
          nullable: true
        netWealth:
          $ref: '#/components/schemas/CurrencyValue'
        roleType:
          $ref: '#/components/schemas/RoleType'
        capacityCode:
          $ref: '#/components/schemas/IntermediaryCapacityType'
      additionalProperties: false
    AdviserFilter:
      type: object
      properties:
        search:
          type: string
          nullable: true
        ownershipLevel:
          $ref: '#/components/schemas/OwnershipLevel'
        capacityType:
          $ref: '#/components/schemas/IntermediaryCapacityType'
        isRecent:
          type: boolean
        isFavourite:
          type: boolean
        intermediaries:
          type: array
          items:
            type: string
          nullable: true
        sortBy:
          $ref: '#/components/schemas/ContactListSortByType'
      additionalProperties: false
    AdviserQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Adviser'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    AmlAddressDetails:
      type: object
      properties:
        flatNumber:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        line1:
          type: string
          nullable: true
        line2:
          type: string
          nullable: true
        town:
          type: string
          nullable: true
        county:
          type: string
          nullable: true
        postCode:
          type: string
          nullable: true
        timeInMonths:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    AmlBankDetails:
      type: object
      properties:
        accountNumber:
          type: string
          nullable: true
        sortCode:
          type: string
          nullable: true
        rollNumber:
          type: string
          nullable: true
      additionalProperties: false
    AmlCheckStatusType:
      enum:
        - NotRun
        - Run
        - InProgress
        - RequiresData
        - Archived
      type: string
    AmlDecisionType:
      enum:
        - Pending
        - RequiresAction
        - Rejected
        - Approved
      type: string
    AmlHit:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        actionDate:
          type: string
          format: date-time
        actionedById:
          type: string
          nullable: true
        hitDate:
          type: string
          format: date-time
        sources:
          type: array
          items:
            type: string
          nullable: true
        status:
          $ref: '#/components/schemas/AmlHitStatus'
        aka:
          type: array
          items:
            type: string
          nullable: true
        entityType:
          type: string
          nullable: true
        fields:
          type: array
          items:
            $ref: '#/components/schemas/AmlHitField'
          nullable: true
        media:
          type: array
          items:
            $ref: '#/components/schemas/AmlMedia'
          nullable: true
        matches:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    AmlHitField:
      type: object
      properties:
        name:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        source:
          type: string
          nullable: true
      additionalProperties: false
    AmlHitStatus:
      enum:
        - Pending
        - NeedsReview
        - Relevant
        - NotRelevant
      type: string
    AmlHitUpdate:
      type: object
      properties:
        amlReportId:
          type: string
          nullable: true
        amlHitId:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/AmlHitStatus'
      additionalProperties: false
    AmlMedia:
      type: object
      properties:
        title:
          type: string
          nullable: true
        snippet:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
          nullable: true
        url:
          type: string
          nullable: true
      additionalProperties: false
    AmlPassportDetails:
      type: object
      properties:
        country:
          type: string
          nullable: true
        expiry:
          type: string
          format: date-time
        number:
          type: string
          nullable: true
      additionalProperties: false
    AmlPersonalDetails:
      type: object
      properties:
        title:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        middleName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        dateOfBirth:
          type: string
          format: date-time
          nullable: true
        homePhone:
          type: string
          nullable: true
        mobilePhone:
          type: string
          nullable: true
        emailAddress:
          type: string
          nullable: true
        nationalIdentifier:
          type: string
          nullable: true
        drivingLicence:
          type: string
          nullable: true
      additionalProperties: false
    AmlProvider:
      enum:
        - None
        - Kompli
        - SmartSearch
        - Onfido
        - Trulioo
        - WorldCheck
        - Refinitiv
        - Experian
        - ComplyAdvantage
        - GBG
      type: string
    AmlReport:
      type: object
      properties:
        id:
          type: string
          nullable: true
        request:
          $ref: '#/components/schemas/AmlRequest'
        dateRequested:
          type: string
          format: date-time
        requestedBy:
          $ref: '#/components/schemas/Reference'
        decision:
          $ref: '#/components/schemas/AmlDecisionType'
        decisionDate:
          type: string
          format: date-time
        reason:
          type: string
          nullable: true
        provider:
          $ref: '#/components/schemas/AmlProvider'
        status:
          $ref: '#/components/schemas/AmlCheckStatusType'
        hits:
          type: array
          items:
            $ref: '#/components/schemas/AmlHit'
          nullable: true
        errors:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    AmlRequest:
      type: object
      properties:
        personalDetails:
          $ref: '#/components/schemas/AmlPersonalDetails'
        bankDetails:
          $ref: '#/components/schemas/AmlBankDetails'
        passportDetails:
          $ref: '#/components/schemas/AmlPassportDetails'
        addressDetails:
          type: array
          items:
            $ref: '#/components/schemas/AmlAddressDetails'
          nullable: true
      additionalProperties: false
    AmlResponse:
      type: object
      properties:
        id:
          type: string
          nullable: true
        rawResponse:
          type: string
          nullable: true
        hits:
          type: array
          items:
            $ref: '#/components/schemas/AmlHit'
          nullable: true
      additionalProperties: false
    AppGroupType:
      enum:
        - Client
        - Products
        - KYCAccountHolders
        - KYCAuthorised3rdParties
        - KYCOtherParties
      type: string
    AppStatus:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/AppType'
        status:
          $ref: '#/components/schemas/AppStatusType'
        ragStatus:
          $ref: '#/components/schemas/RAG'
        party:
          $ref: '#/components/schemas/PartyStub'
        partyRole:
          $ref: '#/components/schemas/Reference'
        clientProduct:
          $ref: '#/components/schemas/Reference'
        productGroup:
          $ref: '#/components/schemas/Reference'
        formName:
          type: string
          nullable: true
        formDataEntityId:
          type: string
          nullable: true
        lastUpdated:
          type: string
          format: date-time
          nullable: true
        lastUpdatedBy:
          $ref: '#/components/schemas/Reference'
        apps:
          type: array
          items:
            $ref: '#/components/schemas/AppSubStatus'
          nullable: true
        activities:
          type: array
          items:
            $ref: '#/components/schemas/ActivitySummary'
          nullable: true
      additionalProperties: false
    AppStatusGroup:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/AppGroupType'
        name:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/AppStatusType'
        apps:
          type: array
          items:
            $ref: '#/components/schemas/AppStatus'
          nullable: true
      additionalProperties: false
    AppStatusType:
      enum:
        - Incomplete
        - Ok
        - NearingExpiration
        - Expired
        - Inactive
      type: string
    AppSubStatus:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/AppType'
        status:
          $ref: '#/components/schemas/AppStatusType'
        ragStatus:
          $ref: '#/components/schemas/RAG'
        party:
          $ref: '#/components/schemas/PartyStub'
        partyRole:
          $ref: '#/components/schemas/Reference'
        clientProduct:
          $ref: '#/components/schemas/Reference'
        productGroup:
          $ref: '#/components/schemas/Reference'
        formName:
          type: string
          nullable: true
        formDataEntityId:
          type: string
          nullable: true
        lastUpdated:
          type: string
          format: date-time
          nullable: true
        lastUpdatedBy:
          $ref: '#/components/schemas/Reference'
        activities:
          type: array
          items:
            $ref: '#/components/schemas/ActivitySummary'
          nullable: true
      additionalProperties: false
    AppType:
      enum:
        - Assets
        - Income
        - ContactInformation
        - Goals
        - SourceOfWealth
        - AttitudeToRisk
        - Knowledge
        - Liabilities
        - Expenses
        - Financials
        - Profile
        - Family
        - Employment
        - Tax
        - InterestsAndHobbies
        - Appointment
        - PhoneCall
        - Task
        - Opportunity
        - NewOrganisation
        - NewPerson
        - ExternalArticle
        - InternalArticle
        - ClientProduct
        - Portfolio
        - AdverseMediaCheck
        - IndepthSourceOfWealth
        - FinancialCrimeSignoff
        - SeniorManagementSignoff
        - LicenseRegistrationConfirmation
        - CorporateStructure
        - GovernmentLists
        - PEPAndSanctions
        - CoreScreening
        - IDVerification
        - DocumentChecklist
        - CommercialContext
        - Summary
        - ESG
        - InvestmentThemes
        - ClientRoles
        - ProductSelection
        - Signoff
        - Suitability
        - DueDiligence
        - AbandonedBasket
        - Testing
        - Group
        - NotApplicable
      type: string
    Article:
      type: object
      properties:
        name:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/ArticleType'
        synopsis:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        source:
          type: string
          nullable: true
        author:
          type: string
          nullable: true
        datePublished:
          type: string
          format: date-time
        images:
          type: array
          items:
            $ref: '#/components/schemas/ArticleImage'
          nullable: true
        id:
          type: string
          nullable: true
        isDistributable:
          type: boolean
        owner:
          $ref: '#/components/schemas/PartyStub'
        publishedBy:
          $ref: '#/components/schemas/PartyStub'
        dateExpires:
          type: string
          format: date-time
          nullable: true
        createdBy:
          $ref: '#/components/schemas/Reference'
        dateAdded:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/ArticleStatusType'
        isActive:
          type: boolean
        tags:
          type: array
          items:
            $ref: '#/components/schemas/SimpleTag'
          nullable: true
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileIndex'
          nullable: true
        totalDistributedTo:
          type: integer
          format: int32
          nullable: true
        totalDistributedReadBy:
          type: integer
          format: int32
          nullable: true
        myFeedCount:
          type: integer
          format: int32
        numberChats:
          type: integer
          format: int32
      additionalProperties: false
    ArticleCreate:
      required:
        - name
        - type
      type: object
      properties:
        isDistributable:
          type: boolean
        name:
          type: string
        synopsis:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        source:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        author:
          type: string
          nullable: true
        datePublished:
          type: string
          format: date-time
        dateExpires:
          type: string
          format: date-time
          nullable: true
        type:
          $ref: '#/components/schemas/ArticleType'
        images:
          type: array
          items:
            $ref: '#/components/schemas/ArticleCreateImage'
          nullable: true
      additionalProperties: false
    ArticleCreateImage:
      type: object
      properties:
        fileIndex:
          type: string
          nullable: true
        imageUrl:
          type: string
          nullable: true
        isPrimary:
          type: boolean
      additionalProperties: false
    ArticleFilter:
      type: object
      properties:
        search:
          type: string
          nullable: true
        ownershipLevel:
          $ref: '#/components/schemas/OwnershipLevel'
        articleTypes:
          type: array
          items:
            $ref: '#/components/schemas/ArticleType'
          nullable: true
        status:
          $ref: '#/components/schemas/ArticleStatusType'
        sortBy:
          $ref: '#/components/schemas/ArticleSortByType'
        tagIds:
          type: array
          items:
            type: string
          nullable: true
        publishedOnFilter:
          type: array
          items:
            $ref: '#/components/schemas/ArticlePublishedOnFilterType'
          nullable: true
        customFrom:
          type: string
          format: date-time
          nullable: true
        customTo:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    ArticleImage:
      type: object
      properties:
        imageUrl:
          type: string
          nullable: true
        isPrimary:
          type: boolean
      additionalProperties: false
    ArticleParse:
      required:
        - url
      type: object
      properties:
        createNow:
          type: boolean
        url:
          type: string
      additionalProperties: false
    ArticlePublishedOnFilterType:
      enum:
        - Today
        - Last7Days
        - Custom
      type: string
    ArticleQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Article'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    ArticleSortByType:
      enum:
        - Alphabetical
        - DatePublished
      type: string
    ArticleStatusType:
      enum:
        - Inactive
        - Draft
        - Published
      type: string
    ArticleType:
      enum:
        - Internal
        - External
      type: string
    ArticleUpdate:
      required:
        - name
      type: object
      properties:
        isDistributable:
          type: boolean
        name:
          type: string
        synopsis:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        source:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        author:
          type: string
          nullable: true
        datePublished:
          type: string
          format: date-time
        dateExpires:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    AssetType:
      enum:
        - Security
        - Cash
        - Contract
        - ExternalAsset
      type: string
    AuditAction:
      enum:
        - Add
        - Update
        - Delete
        - SetStatus
        - ViewRecord
        - ViewSensitiveField
        - DownloadDocument
      type: string
    AuditEvent:
      type: object
      properties:
        id:
          type: string
          nullable: true
        action:
          $ref: '#/components/schemas/AuditAction'
        eventTime:
          type: string
          format: date-time
        who:
          $ref: '#/components/schemas/Reference'
        additional:
          type: string
          nullable: true
        changes:
          type: array
          items:
            $ref: '#/components/schemas/AuditEventChange'
          nullable: true
      additionalProperties: false
    AuditEventChange:
      type: object
      properties:
        field:
          type: string
          nullable: true
        oldValue:
          type: string
          nullable: true
        newValue:
          type: string
          nullable: true
      additionalProperties: false
    BankAccount:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/ClientProductType'
        code:
          type: string
          nullable: true
        dateOpened:
          type: string
          format: date-time
          nullable: true
        dateClosed:
          type: string
          format: date-time
          nullable: true
        dateLive:
          type: string
          format: date-time
          nullable: true
        product:
          $ref: '#/components/schemas/Product'
        purpose:
          type: string
          nullable: true
        currency:
          type: string
          nullable: true
        latestValue:
          $ref: '#/components/schemas/CurrencyValue'
        estimatedValue:
          $ref: '#/components/schemas/CurrencyValue'
        beneficialOwner:
          $ref: '#/components/schemas/Reference'
        portfolio:
          $ref: '#/components/schemas/CodedReference'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/ProductGroupSimple'
          nullable: true
        app:
          $ref: '#/components/schemas/AppStatus'
        status:
          $ref: '#/components/schemas/ProductStatus'
        accountName:
          type: string
          nullable: true
        sortCode:
          type: string
          nullable: true
        accountNumber:
          type: string
          nullable: true
      additionalProperties: false
    BankAccountCreate:
      type: object
      properties:
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        productCode:
          type: string
          nullable: true
        purpose:
          type: string
          nullable: true
        currency:
          type: string
          nullable: true
        beneficialOwner:
          $ref: '#/components/schemas/Reference'
        dateOpened:
          type: string
          format: date-time
          nullable: true
        dateClosed:
          type: string
          format: date-time
          nullable: true
        dateLive:
          type: string
          format: date-time
          nullable: true
        latestValue:
          $ref: '#/components/schemas/CurrencyValue'
        estimatedValue:
          $ref: '#/components/schemas/CurrencyValue'
        accountName:
          type: string
          nullable: true
        accountNumber:
          type: string
          nullable: true
        sortCode:
          type: string
          nullable: true
      additionalProperties: false
    BankAccountUpdate:
      type: object
      properties:
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        purpose:
          type: string
          nullable: true
        currency:
          type: string
          nullable: true
        beneficialOwner:
          $ref: '#/components/schemas/Reference'
        dateOpened:
          type: string
          format: date-time
          nullable: true
        dateClosed:
          type: string
          format: date-time
          nullable: true
        dateLive:
          type: string
          format: date-time
          nullable: true
        latestValue:
          $ref: '#/components/schemas/CurrencyValue'
        estimatedValue:
          $ref: '#/components/schemas/CurrencyValue'
        accountName:
          type: string
          nullable: true
        accountNumber:
          type: string
          nullable: true
        sortCode:
          type: string
          nullable: true
      additionalProperties: false
    Benchmark:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
      additionalProperties: false
    CalculatedField:
      type: object
      properties:
        field:
          type: string
          nullable: true
        equalTo:
          $ref: '#/components/schemas/Calculation'
      additionalProperties: false
    Calculation:
      type: object
      properties:
        sum:
          $ref: '#/components/schemas/Sum'
        subtract:
          $ref: '#/components/schemas/Subtract'
        function:
          type: string
          nullable: true
        decision:
          type: string
          nullable: true
      additionalProperties: false
    Card:
      type: object
      properties:
        type:
          type: string
          nullable: true
        apps:
          type: array
          items:
            $ref: '#/components/schemas/AppType'
          nullable: true
        link:
          $ref: '#/components/schemas/Regarding'
        subject:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        related:
          type: array
          items:
            $ref: '#/components/schemas/Regarding'
          nullable: true
        assignee:
          $ref: '#/components/schemas/Reference'
        dateDue:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    Case:
      required:
        - dateStarted
        - subject
      type: object
      properties:
        id:
          type: string
          nullable: true
        uuid:
          type: string
          format: uuid
        isActive:
          type: boolean
        status:
          $ref: '#/components/schemas/ProcessStatusType'
        subject:
          maxLength: 200
          type: string
        dateStarted:
          type: string
          format: date-time
        dateCompleted:
          type: string
          format: date-time
          nullable: true
        dateDue:
          type: string
          format: date-time
          nullable: true
        nextWorkItemDueDate:
          type: string
          format: date-time
          nullable: true
        ragStatus:
          $ref: '#/components/schemas/RAG'
        processTypeName:
          type: string
          nullable: true
        processTypeCode:
          type: string
          nullable: true
        processTypeVersion:
          type: integer
          format: int32
          nullable: true
        processStageCode:
          type: string
          nullable: true
        processStageName:
          type: string
          nullable: true
        regarding:
          $ref: '#/components/schemas/Regarding'
        owner:
          $ref: '#/components/schemas/Reference'
        parentProcess:
          $ref: '#/components/schemas/Reference'
        case:
          $ref: '#/components/schemas/Reference'
        storage:
          type: object
          additionalProperties: { }
          nullable: true
        priority:
          type: string
          nullable: true
        currencyValue:
          $ref: '#/components/schemas/CurrencyValue'
        completedWorkItems:
          type: integer
          format: int32
          nullable: true
        totalWorkItems:
          type: integer
          format: int32
          nullable: true
        isFavourite:
          type: boolean
        teamMembers:
          type: array
          items:
            $ref: '#/components/schemas/PartyStub'
          nullable: true
        workItems:
          type: array
          items:
            $ref: '#/components/schemas/WorkItem'
          nullable: true
        processes:
          type: array
          items:
            $ref: '#/components/schemas/Process'
          nullable: true
      additionalProperties: false
    CaseQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Case'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    CaseType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        version:
          type: integer
          format: int32
        slaDays:
          type: integer
          format: int32
          nullable: true
        formName:
          type: string
          nullable: true
        formVersion:
          type: integer
          format: int32
      additionalProperties: false
    CashAccount:
      type: object
      properties:
        uniqueId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        shortName:
          type: string
          nullable: true
        accountNumber:
          type: string
          nullable: true
        currency:
          $ref: '#/components/schemas/Currency'
        balance:
          $ref: '#/components/schemas/CurrencyValue'
      additionalProperties: false
    CashAccountQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CashAccount'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    CashMovement:
      type: object
      properties:
        cashAccountId:
          type: string
          nullable: true
        uniqueId:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        movementDate:
          type: string
          format: date-time
        settlementDate:
          type: string
          format: date-time
        currency:
          $ref: '#/components/schemas/Currency'
        amount:
          $ref: '#/components/schemas/CurrencyValue'
        runningBalance:
          $ref: '#/components/schemas/CurrencyValue'
        direction:
          $ref: '#/components/schemas/TransactionDirection'
        movementType:
          $ref: '#/components/schemas/CashMovementType'
        comments:
          type: string
          nullable: true
        isContributionOrWithdawl:
          type: boolean
      additionalProperties: false
    CashMovementQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CashMovement'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    CashMovementType:
      type: object
      properties:
        code:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    CashSummary:
      type: object
      properties:
        totalCash:
          $ref: '#/components/schemas/CurrencyValue'
        totalContributions:
          $ref: '#/components/schemas/CurrencyValue'
        totalWithdrawals:
          $ref: '#/components/schemas/CurrencyValue'
      additionalProperties: false
    Client:
      type: object
      properties:
        id:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        isPrimary:
          type: boolean
        isActive:
          type: boolean
        party:
          $ref: '#/components/schemas/PartyStub'
        role:
          $ref: '#/components/schemas/Role'
        clientStatusType:
          $ref: '#/components/schemas/ClientStatusType'
        description:
          type: string
          nullable: true
        client:
          $ref: '#/components/schemas/PartyClient'
        lastContactedDate:
          type: string
          format: date-time
          nullable: true
        lastContactedType:
          $ref: '#/components/schemas/ActivityType'
        lastContactedId:
          $ref: '#/components/schemas/Reference'
        lastMeetingDate:
          type: string
          format: date-time
          nullable: true
        lastMeetingType:
          $ref: '#/components/schemas/ActivityType'
        lastMeetingId:
          $ref: '#/components/schemas/Reference'
        nextMeetingDate:
          type: string
          format: date-time
          nullable: true
        nextMeetingType:
          $ref: '#/components/schemas/ActivityType'
        nextMeetingId:
          $ref: '#/components/schemas/Reference'
        isMine:
          type: boolean
          nullable: true
        relationshipOverview:
          type: string
          nullable: true
        teamMembers:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        subsidiaryTeams:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        subsidiaries:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        powerOfAttorneyFor:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        wards:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        employees:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        trustees:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        directors:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        shareholders:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        correspondents:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        settlors:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        beneficiaries:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        jointInvestors:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        teamMembersOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        parentTeams:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        parentOrganisations:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        powerOfAttorneys:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        parents:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        guardians:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        employers:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        trusteesOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        directorsOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        shareholdersOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        correspondentsOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        settlorsOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        beneficiariesOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        jointInvestorsOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        advisers:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        productProviders:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        professionals:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        friends:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        spouses:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        partners:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        divorcees:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        widowees:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        familyMembers:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        dateLastReview:
          type: string
          format: date-time
          nullable: true
        dateNextReview:
          type: string
          format: date-time
          nullable: true
        inceptionDate:
          type: string
          format: date-time
          nullable: true
        cessationDate:
          type: string
          format: date-time
          nullable: true
        currency:
          $ref: '#/components/schemas/Currency'
        totalAUM:
          $ref: '#/components/schemas/CurrencyValue'
        pipelineWeightedValue:
          $ref: '#/components/schemas/CurrencyValue'
        isFavourite:
          type: boolean
      additionalProperties: false
    ClientFilter:
      type: object
      properties:
        search:
          type: string
          nullable: true
        ownershipLevel:
          $ref: '#/components/schemas/OwnershipLevel'
        roleTypes:
          type: array
          items:
            type: string
          nullable: true
        isRecent:
          type: boolean
        isFavourite:
          type: boolean
        sortBy:
          $ref: '#/components/schemas/ClientSortyByType'
        tagIds:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    ClientHeatMap:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/AppStatusGroup'
          nullable: true
      additionalProperties: false
    ClientMaster:
      type: object
      properties:
        assets:
          nullable: true
        income:
          nullable: true
        needsAssessment:
          nullable: true
        sourceOfWealth:
          nullable: true
        attitudeToRisk:
          nullable: true
        liabilities:
          nullable: true
        expenses:
          nullable: true
      additionalProperties: false
    ClientProduct:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/ClientProductType'
        code:
          type: string
          nullable: true
        dateOpened:
          type: string
          format: date-time
          nullable: true
        dateClosed:
          type: string
          format: date-time
          nullable: true
        dateLive:
          type: string
          format: date-time
          nullable: true
        product:
          $ref: '#/components/schemas/Product'
        purpose:
          type: string
          nullable: true
        currency:
          type: string
          nullable: true
        latestValue:
          $ref: '#/components/schemas/CurrencyValue'
        estimatedValue:
          $ref: '#/components/schemas/CurrencyValue'
        beneficialOwner:
          $ref: '#/components/schemas/Reference'
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/InvestmentAccount'
          nullable: true
        groups:
          type: array
          items:
            $ref: '#/components/schemas/ProductGroupSimple'
          nullable: true
        app:
          $ref: '#/components/schemas/AppStatus'
        status:
          $ref: '#/components/schemas/ProductStatus'
      additionalProperties: false
    ClientProductRole:
      type: object
      properties:
        id:
          type: string
          nullable: true
        clientProduct:
          $ref: '#/components/schemas/Reference'
        description:
          type: string
          nullable: true
        relationship:
          $ref: '#/components/schemas/Reference'
        owner:
          $ref: '#/components/schemas/Reference'
        party:
          $ref: '#/components/schemas/PartyStub'
      additionalProperties: false
    ClientProductType:
      enum:
        - InvestmentAccount
        - Banking
        - Credit
        - Portfolio
        - StockBroking
        - Insurance
        - Lending
      type: string
    ClientQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Client'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    ClientRoleType:
      enum:
        - Client
        - Prospect
        - Related
      type: string
    ClientSortyByType:
      enum:
        - HighestAUM
        - HighestPipeline
        - Alphabetical
        - AlphabeticalDesc
        - NextMeetingDate
      type: string
    ClientStatusSummaryType:
      enum:
        - RelatedParty
        - Client
        - Prospect
        - Adviser
      type: string
    ClientStatusType:
      enum:
        - Lead
        - Client
        - Prospect
        - Unwinding
      type: string
    CodedReference:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
      additionalProperties: false
    Complaint:
      required:
        - complainant
        - reason
        - title
      type: object
      properties:
        id:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        reason:
          $ref: '#/components/schemas/ComplaintReasonType'
        title:
          type: string
        description:
          type: string
          nullable: true
        resolution:
          type: string
          nullable: true
        originator:
          $ref: '#/components/schemas/Reference'
        complainant:
          $ref: '#/components/schemas/Reference'
        dateOpened:
          type: string
          format: date-time
          nullable: true
        dateClosed:
          type: string
          format: date-time
          nullable: true
        process:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    ComplaintCreate:
      required:
        - complainant
        - reason
        - title
      type: object
      properties:
        title:
          type: string
        description:
          type: string
          nullable: true
        reason:
          $ref: '#/components/schemas/ComplaintReasonType'
        complainant:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    ComplaintQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Complaint'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    ComplaintReasonType:
      enum:
        - General
        - Staff
        - SLA
        - Transactional
        - Loss
      type: string
    ContactListSortByType:
      enum:
        - HighestPipeline
        - Alphabetical
        - AlphabeticalDesc
      type: string
    ContactPoint:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        isActive:
          type: boolean
        status:
          type: integer
          format: int32
        isPreferred:
          type: boolean
        isPrimary:
          type: boolean
        contactPointType:
          type: string
          nullable: true
      additionalProperties: false
    ContactPointQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ContactPoint'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    ContactPointType:
      enum:
        - Postal
        - Email
        - Phone
        - Social
      type: string
    CorporateSearch:
      type: object
      properties:
        corporateName:
          type: string
          nullable: true
        countryIsoCode:
          type: string
          nullable: true
        corporateNumber:
          type: string
          nullable: true
        skip:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    CorporateSearchResult:
      type: object
      properties:
        type:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        registrationNumber:
          type: string
          nullable: true
        incorporationDate:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
      additionalProperties: false
    Country:
      required:
        - isoCode
      type: object
      properties:
        name:
          type: string
          nullable: true
        isoCode:
          maxLength: 2
          type: string
        isActive:
          type: boolean
        currency:
          $ref: '#/components/schemas/Currency'
        dialCode:
          type: string
          nullable: true
      additionalProperties: false
    Currency:
      required:
        - isoCode
      type: object
      properties:
        isoCode:
          maxLength: 3
          type: string
        name:
          maxLength: 50
          type: string
          nullable: true
        isActive:
          type: boolean
        symbol:
          type: string
          nullable: true
        region:
          $ref: '#/components/schemas/CurrencyRegion'
      additionalProperties: false
    CurrencyRegion:
      enum:
        - TheAmericas
        - AsiaAndThePacificRegion
        - Crptocurrency
        - Europe
        - MiddleEastAndAfrica
      type: string
    CurrencyValue:
      type: object
      properties:
        isoCode:
          type: string
          nullable: true
        value:
          type: number
          format: double
          nullable: true
        baseValue:
          type: number
          format: double
          nullable: true
        formattedValue:
          type: string
          nullable: true
      additionalProperties: false
    Dashboard:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        processSummaries:
          type: array
          items:
            $ref: '#/components/schemas/ProcessSummary'
          nullable: true
        workItemSummary:
          $ref: '#/components/schemas/WorkItemSummary'
        newBusinessSummaries:
          type: array
          items:
            $ref: '#/components/schemas/NewBusinessSummary'
          nullable: true
        outstandingWorkItems:
          type: array
          items:
            $ref: '#/components/schemas/WorkItem'
          nullable: true
      additionalProperties: false
    DashboardCategory:
      enum:
        - TopLevel
        - Client
        - Account
      type: string
    DashboardData:
      type: object
      properties:
        createdOn:
          type: string
          format: date-time
        expiresOn:
          type: string
          format: date-time
        data:
          nullable: true
      additionalProperties: false
    DashboardDefintion:
      type: object
      properties:
        key:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        category:
          $ref: '#/components/schemas/DashboardCategory'
      additionalProperties: false
    DataLock:
      type: object
      properties:
        id:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        dateCreated:
          type: string
          format: date-time
        entityType:
          $ref: '#/components/schemas/SystemEntity'
        entityId:
          type: string
          nullable: true
        triggerEvent:
          type: string
          nullable: true
        isActive:
          type: boolean
        status:
          type: string
          nullable: true
      additionalProperties: false
    DataLockCreate:
      type: object
      properties:
        code:
          type: string
          nullable: true
        dateCreated:
          type: string
          format: date-time
        entityType:
          $ref: '#/components/schemas/SystemEntity'
        entityId:
          type: string
          nullable: true
        triggerEvent:
          type: string
          nullable: true
      additionalProperties: false
    DateRestrictionType:
      enum:
        - None
        - HistoricOnly
        - FutureOnly
      type: string
    DateTimeFormat:
      type: object
      properties:
        fullDateTimePattern:
          type: string
          nullable: true
        longDatePattern:
          type: string
          nullable: true
        longTimePattern:
          type: string
          nullable: true
        shortDatePattern:
          type: string
          nullable: true
        shortTimePattern:
          type: string
          nullable: true
      additionalProperties: false
    Decision:
      type: object
      properties:
        decisionType:
          $ref: '#/components/schemas/DecisionType'
        category:
          $ref: '#/components/schemas/DecisionCategory'
        entity:
          $ref: '#/components/schemas/SystemEntity'
        dmnDecision:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        requiredParameters:
          type: array
          items:
            $ref: '#/components/schemas/DecisionRequiredParameter'
          nullable: true
      additionalProperties: false
    DecisionCategory:
      enum:
        - ClientDueDiligence
        - KYC
        - Document
        - RiskProfile
        - Tax
        - Product
        - OtherRiskFlags
        - KYCApps
      type: string
    DecisionDefinition:
      type: object
      properties:
        id:
          type: string
          nullable: true
        key:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        category:
          type: string
          nullable: true
        version:
          type: integer
          format: int32
        xml:
          type: string
          nullable: true
        resource:
          type: string
          nullable: true
        tenantId:
          type: string
          nullable: true
      additionalProperties: false
    DecisionDeploy:
      type: object
      properties:
        code:
          type: string
          nullable: true
        dmlXMLBase64Encoded:
          type: string
          nullable: true
      additionalProperties: false
    DecisionRequiredParameter:
      type: object
      properties:
        name:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    DecisionType:
      enum:
        - GetClientApps
        - AgentGivesAdvice
        - ClientTypeRoles
        - FATCAIndiciaPresent
        - GetKYCApps
        - SourceOfWealth
        - IndepthSourceOfFunds
        - AnnualReviewSchedulePeriod
        - EventDrivenReviewTriggerRules
        - DocumentChecklist
        - RiskScoringThreshold
        - EmploymentSituation
        - ContactInformation
        - Profile
        - Knowledge
        - InterestsAndHobbies
        - AttitudeToRisk
        - ESG
        - InvestmentThemes
        - Family
        - Tax
        - DocumentRequirements
        - AdverseMediaCheck
        - HasMaterialWealth
        - LicenseRegistrationConfirmation
        - FinancialCrimeSanctionsSignOff
        - CorporateStructureAnalysis
        - SeniorManagerSignOff
        - CoreScreeningApp
        - IDVerificationApp
        - PEPsAndSanctionsApp
        - GovernmentListsApp
        - AdverseMediaCheckApp
        - CountyCourtJudgementChecks
        - IdentityVerificationDocumentRequirements
        - AMLEvidenceDocumentRequirements
        - AddressVerificationDocumentRequirements
        - MandateMatrix
        - MandateConstraints
      type: string
    DecisionVariables:
      type: object
      properties:
        variables:
          nullable: true
      additionalProperties: false
    Document:
      type: object
      properties:
        id:
          type: string
          nullable: true
        documentType:
          $ref: '#/components/schemas/DocumentType'
        fileIndex:
          $ref: '#/components/schemas/FileIndex'
        metadata:
          nullable: true
        dateUpdated:
          type: string
          format: date-time
        uploadedBy:
          $ref: '#/components/schemas/PartyStub'
        dateExpiry:
          type: string
          format: date-time
          nullable: true
        isValid:
          type: boolean
      additionalProperties: false
    DocumentFilter:
      type: object
      properties:
        search:
          type: string
          nullable: true
        partyIds:
          type: array
          items:
            type: string
          nullable: true
        partyRoleIds:
          type: array
          items:
            type: string
          nullable: true
        sortBy:
          $ref: '#/components/schemas/DocumentListSortByType'
      additionalProperties: false
    DocumentGroup:
      type: object
      properties:
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        party:
          $ref: '#/components/schemas/PartyStub'
        partyRole:
          $ref: '#/components/schemas/Reference'
        description:
          type: string
          nullable: true
        documentTypes:
          type: array
          items:
            $ref: '#/components/schemas/DocumentType'
          nullable: true
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
          nullable: true
        numberRequired:
          type: integer
          format: int32
        numberSupplied:
          type: integer
          format: int32
        pass:
          type: boolean
      additionalProperties: false
    DocumentListSortByType:
      enum:
        - Uploaded
        - Alphabetical
        - AlphabeticalDesc
      type: string
    DocumentQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Document'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    DocumentType:
      type: object
      properties:
        name:
          type: string
          nullable: true
        guidanceNotes:
          type: string
          nullable: true
        isSignatureRequired:
          type: boolean
        formatsAccepted:
          type: array
          items:
            type: string
          nullable: true
        metadataFormName:
          type: string
          nullable: true
        metadataFormVersion:
          type: integer
          format: int32
      additionalProperties: false
    DuplicateDetectorType:
      type: object
      properties:
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        entity:
          $ref: '#/components/schemas/SystemEntity'
      additionalProperties: false
    DurationType:
      enum:
        - Days
        - Hours
      type: string
    ElectronicAddress:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        isActive:
          type: boolean
        status:
          type: integer
          format: int32
        isPreferred:
          type: boolean
        isPrimary:
          type: boolean
        contactPointType:
          type: string
          nullable: true
        emailAddress:
          maxLength: 255
          type: string
          nullable: true
        addressType:
          $ref: '#/components/schemas/EmailAddressType'
      additionalProperties: false
    ElectronicAddressCreate:
      required:
        - addressType
        - emailAddress
      type: object
      properties:
        partyId:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        isPreferred:
          type: boolean
        isPrimary:
          type: boolean
        emailAddress:
          maxLength: 255
          type: string
        isDefaultForParty:
          type: boolean
        addressType:
          $ref: '#/components/schemas/EmailAddressType'
      additionalProperties: false
    ElectronicAddressQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ElectronicAddress'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    EmailAddressType:
      enum:
        - Personal
        - Business
        - Other
      type: string
    EntityFilter:
      type: object
      properties:
        key:
          type: string
          nullable: true
        value:
          $ref: '#/components/schemas/SystemEntity'
      additionalProperties: false
    Feed:
      type: object
      properties:
        partyRole:
          $ref: '#/components/schemas/Reference'
        party:
          $ref: '#/components/schemas/PartyStub'
        partyType:
          type: string
          nullable: true
        role:
          $ref: '#/components/schemas/Role'
        clientStatusType:
          $ref: '#/components/schemas/ClientStatusType'
        inceptionDate:
          type: string
          format: date-time
          nullable: true
        earliestDateDue:
          type: string
          format: date-time
          nullable: true
        goalPoints:
          $ref: '#/components/schemas/GoalPoint'
        openActivities:
          type: integer
          format: int32
        score:
          type: integer
          format: int32
          nullable: true
        feedScore:
          $ref: '#/components/schemas/FeedScore'
        nudges:
          type: array
          items:
            $ref: '#/components/schemas/Nudge'
          nullable: true
      additionalProperties: false
    FeedFilter:
      type: object
      properties:
        goalTypeCodes:
          type: array
          items:
            type: string
          nullable: true
        nudgeTypeCodes:
          type: array
          items:
            type: string
          nullable: true
        createdOnFilter:
          $ref: '#/components/schemas/NudgeCreatedOnFilterType'
        isDueToday:
          type: boolean
        isOverdue:
          type: boolean
        sortBy:
          $ref: '#/components/schemas/FeedSortByType'
        clientIds:
          type: array
          items:
            type: string
          nullable: true
        clientProductIds:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    FeedQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Feed'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    FeedScore:
      type: object
      properties:
        potentialValue:
          $ref: '#/components/schemas/CurrencyValue'
        totalAUM:
          $ref: '#/components/schemas/CurrencyValue'
        totalAUMConnected:
          $ref: '#/components/schemas/CurrencyValue'
        pipelineWeightedValue:
          $ref: '#/components/schemas/CurrencyValue'
        pipelineWeightedValueConnected:
          $ref: '#/components/schemas/CurrencyValue'
      additionalProperties: false
    FeedSortByType:
      enum:
        - Value
        - Urgency
        - ManageClient
        - StayConnected
        - StayCompliant
        - GrowBusiness
      type: string
    FeeStructure:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    FeeStructureQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeeStructure'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    FieldDefinition:
      type: object
      properties:
        name:
          type: string
          nullable: true
        fieldType:
          $ref: '#/components/schemas/FormFieldType'
        isRequired:
          type: boolean
        options:
          type: array
          items:
            $ref: '#/components/schemas/FieldDefinitionOption'
          nullable: true
        selectSource:
          $ref: '#/components/schemas/SelectApiSource'
        lookupSource:
          $ref: '#/components/schemas/LookupSourceType'
        placeholder:
          type: string
          nullable: true
        inputMaskRegEx:
          type: string
          nullable: true
        inputMaskDescription:
          type: string
          nullable: true
        min:
          type: integer
          format: int32
          nullable: true
        max:
          type: integer
          format: int32
          nullable: true
        dateRestrictionType:
          $ref: '#/components/schemas/DateRestrictionType'
        isSensitive:
          type: boolean
        defaultValue:
          nullable: true
        tagCategory:
          $ref: '#/components/schemas/TagCategory'
        previousTags:
          type: array
          items:
            type: string
          nullable: true
        lookupCreationMode:
          $ref: '#/components/schemas/LookupCreationMode'
        childFormType:
          type: string
          nullable: true
        documentType:
          $ref: '#/components/schemas/DocumentType'
        isPrimaryName:
          type: boolean
          nullable: true
      additionalProperties: false
    FieldDefinitionOption:
      type: object
      properties:
        value:
          type: string
          nullable: true
        label:
          type: string
          nullable: true
        isDisabled:
          type: boolean
        icon:
          type: string
          nullable: true
        iconStack:
          type: array
          items:
            $ref: '#/components/schemas/OptionComplexIcon'
          nullable: true
      additionalProperties: false
    FileIndex:
      type: object
      properties:
        fileIndex:
          type: string
          nullable: true
        contentType:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        sizeInBytes:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    FormCondition:
      type: object
      properties:
        version:
          type: integer
          format: int64
          nullable: true
        triggers:
          type: array
          items:
            $ref: '#/components/schemas/Trigger'
          nullable: true
        calculations:
          type: array
          items:
            $ref: '#/components/schemas/CalculatedField'
          nullable: true
        initialisation:
          $ref: '#/components/schemas/Action'
      additionalProperties: false
    FormDataHistory:
      type: object
      properties:
        id:
          type: string
          nullable: true
        formVersion:
          type: integer
          format: int32
        status:
          $ref: '#/components/schemas/FormDataStatus'
        updatedOn:
          type: string
          format: date-time
        updatedBy:
          type: string
          nullable: true
        publishedOn:
          type: string
          format: date-time
          nullable: true
        publishedBy:
          type: string
          nullable: true
      additionalProperties: false
    FormDataInstance:
      type: object
      properties:
        entityId:
          type: string
          nullable: true
        formVersion:
          type: integer
          format: int32
        status:
          $ref: '#/components/schemas/FormDataStatus'
        data:
          nullable: true
        lastUpdatedOn:
          type: string
          format: date-time
        lastUpdatedBy:
          type: string
          nullable: true
        publishedOn:
          type: string
          format: date-time
          nullable: true
        publishedBy:
          type: string
          nullable: true
      additionalProperties: false
    FormDataStatus:
      enum:
        - Draft
        - Published
        - HistoricDraft
        - HistoricPublished
      type: string
    FormDefinition:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        version:
          type: integer
          format: int32
        saveMode:
          $ref: '#/components/schemas/FormSaveMode'
        app:
          $ref: '#/components/schemas/AppType'
        entityType:
          $ref: '#/components/schemas/SystemEntity'
        canDelete:
          type: boolean
        standardEndpoint:
          type: boolean
        endpointPath:
          type: string
          nullable: true
      additionalProperties: false
    FormDefinitionWithSchema:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        version:
          type: integer
          format: int32
        saveMode:
          $ref: '#/components/schemas/FormSaveMode'
        app:
          $ref: '#/components/schemas/AppType'
        entityType:
          $ref: '#/components/schemas/SystemEntity'
        canDelete:
          type: boolean
        standardEndpoint:
          type: boolean
        endpointPath:
          type: string
          nullable: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/FieldDefinition'
          nullable: true
        conditions:
          $ref: '#/components/schemas/FormCondition'
      additionalProperties: false
    FormElementLayoutDefinition:
      type: object
      properties:
        name:
          type: string
          nullable: true
        label:
          type: string
          nullable: true
        elementType:
          $ref: '#/components/schemas/FormElementType'
        guidanceText:
          type: string
          nullable: true
        isHidden:
          type: boolean
          nullable: true
        isDisabled:
          type: boolean
          nullable: true
        placeholder:
          type: string
          nullable: true
        lines:
          type: integer
          format: int32
          nullable: true
        forcesNewRow:
          type: boolean
          nullable: true
        forcesFullWidth:
          type: boolean
          nullable: true
      additionalProperties: false
    FormElementType:
      enum:
        - Field
        - Label
        - Button
        - Link
      type: string
    FormFieldType:
      enum:
        - Text
        - Date
        - Select
        - Integer
        - Array
        - Currency
        - LookupSingle
        - Multiselect
        - Decimal
        - Datetime
        - MultilineText
        - Checkboxes
        - Radios
        - TagListMulti
        - DatetimeRange
        - RadioTiles
        - ImageUpload
        - DocumentUpload
        - UrlLookup
        - Search
        - DateRange
        - Time
        - TextDropdown
        - Address
        - CheckTiles
        - ButtonGroup
        - PhoneNumber
        - TagListSingle
        - LookupMulti
        - RichText
      type: string
    FormFunctionResult:
      type: object
      properties:
        dataChanges:
          type: object
          additionalProperties: { }
          nullable: true
        schemaChanges:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FieldDefinition'
          nullable: true
      additionalProperties: false
    FormLayout:
      type: object
      properties:
        name:
          type: string
          nullable: true
        label:
          type: string
          nullable: true
        sectionLayoutDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/FormSectionLayoutDefinition'
          nullable: true
      additionalProperties: false
    FormSaveMode:
      enum:
        - ReadOnly
        - SaveOnly
        - SaveAndPublish
        - NotApplicable
      type: string
    FormSectionLayoutDefinition:
      type: object
      properties:
        name:
          type: string
          nullable: true
        label:
          type: string
          nullable: true
        guidanceText:
          type: string
          nullable: true
        isHidden:
          type: boolean
          nullable: true
        elementLayoutDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/FormElementLayoutDefinition'
          nullable: true
      additionalProperties: false
    Function:
      type: object
      properties:
        name:
          type: string
          nullable: true
      additionalProperties: false
    GenderType:
      enum:
        - NotSpecified
        - Male
        - Female
        - Other
      type: string
    GeographicLocation:
      type: object
      properties:
        longitude:
          type: number
          format: double
          nullable: true
        latitude:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    GlobalSearchQuery:
      type: object
      properties:
        searchText:
          type: string
          nullable: true
        filteredEntities:
          type: array
          items:
            $ref: '#/components/schemas/SystemEntity'
          nullable: true
        ownershipLevel:
          $ref: '#/components/schemas/OwnershipLevel'
        earliestRecordDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    GlobalSearchResult:
      type: object
      properties:
        entityType:
          type: string
          nullable: true
        entityId:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        content:
          type: string
          nullable: true
        recordDate:
          type: string
          format: date-time
          nullable: true
        party:
          $ref: '#/components/schemas/PartyStub'
      additionalProperties: false
    GlobalSearchResultQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/GlobalSearchResult'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    GoalPoint:
      type: object
      properties:
        id:
          type: string
          nullable: true
        activityId:
          type: integer
          format: int32
          nullable: true
        nudgeId:
          type: integer
          format: int32
          nullable: true
        goalManageClient:
          type: integer
          format: int32
        goalStayConnected:
          type: integer
          format: int32
        goalStayCompliant:
          type: integer
          format: int32
        goalGrowBusiness:
          type: integer
          format: int32
      additionalProperties: false
    GoalType:
      type: object
      properties:
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
      additionalProperties: false
    GoalTypeLink:
      type: object
      properties:
        goalTypeCode:
          type: string
          nullable: true
        score:
          type: integer
          format: int32
      additionalProperties: false
    GraphQLQuery:
      type: object
      properties:
        operationName:
          type: string
          description: Operation Name
          nullable: true
        query:
          type: string
          description: The Query
          nullable: true
        variables:
          description: Varibles for query
          nullable: true
      additionalProperties: false
      description: GraphQL Query definition
    Group:
      type: object
      properties:
        id:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        enabled:
          type: boolean
        icon:
          type: string
          nullable: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/Item'
          nullable: true
      additionalProperties: false
    InsuranceAccount:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/ClientProductType'
        code:
          type: string
          nullable: true
        dateOpened:
          type: string
          format: date-time
          nullable: true
        dateClosed:
          type: string
          format: date-time
          nullable: true
        dateLive:
          type: string
          format: date-time
          nullable: true
        product:
          $ref: '#/components/schemas/Product'
        purpose:
          type: string
          nullable: true
        currency:
          type: string
          nullable: true
        latestValue:
          $ref: '#/components/schemas/CurrencyValue'
        estimatedValue:
          $ref: '#/components/schemas/CurrencyValue'
        beneficialOwner:
          $ref: '#/components/schemas/Reference'
        portfolio:
          $ref: '#/components/schemas/CodedReference'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/ProductGroupSimple'
          nullable: true
        app:
          $ref: '#/components/schemas/AppStatus'
        status:
          $ref: '#/components/schemas/ProductStatus'
      additionalProperties: false
    InsuranceAccountCreate:
      type: object
      properties:
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        productCode:
          type: string
          nullable: true
        purpose:
          type: string
          nullable: true
        currency:
          type: string
          nullable: true
        beneficialOwner:
          $ref: '#/components/schemas/Reference'
        dateOpened:
          type: string
          format: date-time
          nullable: true
        dateClosed:
          type: string
          format: date-time
          nullable: true
        dateLive:
          type: string
          format: date-time
          nullable: true
        latestValue:
          $ref: '#/components/schemas/CurrencyValue'
        estimatedValue:
          $ref: '#/components/schemas/CurrencyValue'
      additionalProperties: false
    InsuranceAccountUpdate:
      type: object
      properties:
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        purpose:
          type: string
          nullable: true
        currency:
          type: string
          nullable: true
        beneficialOwner:
          $ref: '#/components/schemas/Reference'
        dateOpened:
          type: string
          format: date-time
          nullable: true
        dateClosed:
          type: string
          format: date-time
          nullable: true
        dateLive:
          type: string
          format: date-time
          nullable: true
        latestValue:
          $ref: '#/components/schemas/CurrencyValue'
        estimatedValue:
          $ref: '#/components/schemas/CurrencyValue'
      additionalProperties: false
    Intermediary:
      type: object
      properties:
        id:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        isPrimary:
          type: boolean
        isActive:
          type: boolean
        party:
          $ref: '#/components/schemas/PartyStub'
        role:
          $ref: '#/components/schemas/Role'
        clientStatusType:
          $ref: '#/components/schemas/ClientStatusType'
        description:
          type: string
          nullable: true
        client:
          $ref: '#/components/schemas/PartyClient'
        lastContactedDate:
          type: string
          format: date-time
          nullable: true
        lastContactedType:
          $ref: '#/components/schemas/ActivityType'
        lastContactedId:
          $ref: '#/components/schemas/Reference'
        lastMeetingDate:
          type: string
          format: date-time
          nullable: true
        lastMeetingType:
          $ref: '#/components/schemas/ActivityType'
        lastMeetingId:
          $ref: '#/components/schemas/Reference'
        nextMeetingDate:
          type: string
          format: date-time
          nullable: true
        nextMeetingType:
          $ref: '#/components/schemas/ActivityType'
        nextMeetingId:
          $ref: '#/components/schemas/Reference'
        isMine:
          type: boolean
          nullable: true
        relationshipOverview:
          type: string
          nullable: true
        teamMembers:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        subsidiaryTeams:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        subsidiaries:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        powerOfAttorneyFor:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        wards:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        employees:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        trustees:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        directors:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        shareholders:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        correspondents:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        settlors:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        beneficiaries:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        jointInvestors:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        teamMembersOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        parentTeams:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        parentOrganisations:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        powerOfAttorneys:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        parents:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        guardians:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        employers:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        trusteesOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        directorsOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        shareholdersOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        correspondentsOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        settlorsOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        beneficiariesOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        jointInvestorsOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        advisers:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        productProviders:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        professionals:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        friends:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        spouses:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        partners:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        divorcees:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        widowees:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        familyMembers:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        capacityCode:
          $ref: '#/components/schemas/IntermediaryCapacityType'
        level:
          $ref: '#/components/schemas/IntermediaryLevel'
        currency:
          $ref: '#/components/schemas/Currency'
        totalValueIntroduced:
          $ref: '#/components/schemas/CurrencyValue'
        totalValueManaged:
          $ref: '#/components/schemas/CurrencyValue'
        pipelineWeightedValue:
          $ref: '#/components/schemas/CurrencyValue'
        numberOfAdvisers:
          type: integer
          format: int32
          nullable: true
        registrationNumber:
          type: string
          nullable: true
        isFavourite:
          type: boolean
      additionalProperties: false
    IntermediaryCapacityType:
      enum:
        - Referrer
        - Introducer
        - RelationshipManager
      type: string
    IntermediaryCreate:
      required:
        - purpose
        - roleType
      type: object
      properties:
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        currencyCode:
          type: string
          nullable: true
        purpose:
          maxLength: 100
          type: string
        businessType:
          type: string
          nullable: true
        establishmentDate:
          type: string
          format: date-time
        roleType:
          $ref: '#/components/schemas/RoleType'
        countryOfIncorporation:
          type: string
          nullable: true
        registrationNumber:
          type: string
          nullable: true
        isRegulated:
          type: boolean
          nullable: true
        regulatorName:
          type: string
          nullable: true
        regulatorRegistrationNumber:
          type: string
          nullable: true
        isFinancialInstitution:
          type: boolean
          nullable: true
        netWealth:
          $ref: '#/components/schemas/CurrencyValue'
        capacityCode:
          $ref: '#/components/schemas/IntermediaryCapacityType'
        level:
          $ref: '#/components/schemas/IntermediaryLevel'
      additionalProperties: false
    IntermediaryFilter:
      type: object
      properties:
        search:
          type: string
          nullable: true
        ownershipLevel:
          $ref: '#/components/schemas/OwnershipLevel'
        capacityType:
          $ref: '#/components/schemas/IntermediaryCapacityType'
        intermediaryLevels:
          type: array
          items:
            $ref: '#/components/schemas/IntermediaryLevel'
          nullable: true
        isRecent:
          type: boolean
        isFavourite:
          type: boolean
        sortBy:
          $ref: '#/components/schemas/ContactListSortByType'
      additionalProperties: false
    IntermediaryLevel:
      enum:
        - Network
        - Firm
        - Branch
      type: string
    IntermediaryQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Intermediary'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    InvestmentAccount:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/ClientProductType'
        code:
          type: string
          nullable: true
        dateOpened:
          type: string
          format: date-time
          nullable: true
        dateClosed:
          type: string
          format: date-time
          nullable: true
        dateLive:
          type: string
          format: date-time
          nullable: true
        product:
          $ref: '#/components/schemas/Product'
        purpose:
          type: string
          nullable: true
        currency:
          type: string
          nullable: true
        latestValue:
          $ref: '#/components/schemas/CurrencyValue'
        estimatedValue:
          $ref: '#/components/schemas/CurrencyValue'
        beneficialOwner:
          $ref: '#/components/schemas/Reference'
        portfolio:
          $ref: '#/components/schemas/CodedReference'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/ProductGroupSimple'
          nullable: true
        app:
          $ref: '#/components/schemas/AppStatus'
        status:
          $ref: '#/components/schemas/ProductStatus'
        mandate:
          $ref: '#/components/schemas/CodedReference'
        riskLevel:
          $ref: '#/components/schemas/CodedReference'
        benchmark:
          $ref: '#/components/schemas/CodedReference'
        objective:
          $ref: '#/components/schemas/CodedReference'
        feeStructure:
          $ref: '#/components/schemas/CodedReference'
        serviceType:
          $ref: '#/components/schemas/ServiceType'
        timeHorizon:
          $ref: '#/components/schemas/InvestmentTimeHorizon'
        cherishedHoldings:
          type: string
          nullable: true
        restrictions:
          type: string
          nullable: true
      additionalProperties: false
    InvestmentAccountCreate:
      type: object
      properties:
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        productCode:
          type: string
          nullable: true
        purpose:
          type: string
          nullable: true
        currency:
          type: string
          nullable: true
        beneficialOwner:
          $ref: '#/components/schemas/Reference'
        dateOpened:
          type: string
          format: date-time
          nullable: true
        dateClosed:
          type: string
          format: date-time
          nullable: true
        dateLive:
          type: string
          format: date-time
          nullable: true
        latestValue:
          $ref: '#/components/schemas/CurrencyValue'
        estimatedValue:
          $ref: '#/components/schemas/CurrencyValue'
        mandateCode:
          type: string
          nullable: true
        riskLevelCode:
          type: string
          nullable: true
        benchmarkCode:
          type: string
          nullable: true
        objectiveCode:
          type: string
          nullable: true
        feeStructureCode:
          type: string
          nullable: true
        serviceType:
          $ref: '#/components/schemas/ServiceType'
        timeHorizon:
          $ref: '#/components/schemas/InvestmentTimeHorizon'
        cherishedHoldings:
          type: string
          nullable: true
        restrictions:
          type: string
          nullable: true
      additionalProperties: false
    InvestmentAccountUpdate:
      type: object
      properties:
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        purpose:
          type: string
          nullable: true
        currency:
          type: string
          nullable: true
        beneficialOwner:
          $ref: '#/components/schemas/Reference'
        dateOpened:
          type: string
          format: date-time
          nullable: true
        dateClosed:
          type: string
          format: date-time
          nullable: true
        dateLive:
          type: string
          format: date-time
          nullable: true
        latestValue:
          $ref: '#/components/schemas/CurrencyValue'
        estimatedValue:
          $ref: '#/components/schemas/CurrencyValue'
        mandateCode:
          type: string
          nullable: true
        riskLevelCode:
          type: string
          nullable: true
        benchmarkCode:
          type: string
          nullable: true
        objectiveCode:
          type: string
          nullable: true
        feeStructureCode:
          type: string
          nullable: true
        serviceType:
          $ref: '#/components/schemas/ServiceType'
        timeHorizon:
          $ref: '#/components/schemas/InvestmentTimeHorizon'
        cherishedHoldings:
          type: string
          nullable: true
        restrictions:
          type: string
          nullable: true
      additionalProperties: false
    InvestmentTimeHorizon:
      enum:
        - ShortTerm
        - MediumTerm
        - LongTerm
      type: string
    Is:
      type: object
      properties:
        equalTo:
          nullable: true
        anyOf:
          type: array
          items:
            type: string
          nullable: true
        future:
          type: boolean
          nullable: true
        past:
          type: boolean
          nullable: true
        lesserThan:
          type: number
          format: double
          nullable: true
        greaterThan:
          type: number
          format: double
          nullable: true
        then:
          $ref: '#/components/schemas/Action'
        else:
          $ref: '#/components/schemas/Action'
      additionalProperties: false
    Item:
      type: object
      properties:
        id:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        enabled:
          type: boolean
        icon:
          type: string
          nullable: true
      additionalProperties: false
    KanbanStage:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
          nullable: true
        kanbanType:
          $ref: '#/components/schemas/KanbanType'
        name:
          type: string
          nullable: true
        order:
          type: integer
          format: int32
        configuration:
          $ref: '#/components/schemas/KanbanStageConfiguration'
        state:
          type: string
          nullable: true
      additionalProperties: false
    KanbanStageConfiguration:
      type: object
      properties:
        isDefault:
          type: boolean
        isSuccess:
          type: boolean
        isFailure:
          type: boolean
        formName:
          type: string
          nullable: true
        formVersion:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    KanbanType:
      enum:
        - Pipeline
      type: string
    KeyValuePoint:
      type: object
      properties:
        name:
          type: string
          nullable: true
        value:
          type: number
          format: double
      additionalProperties: false
    Lead:
      type: object
      properties:
        id:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        isPrimary:
          type: boolean
        isActive:
          type: boolean
        party:
          $ref: '#/components/schemas/PartyStub'
        role:
          $ref: '#/components/schemas/Role'
        clientStatusType:
          $ref: '#/components/schemas/ClientStatusType'
        description:
          type: string
          nullable: true
        client:
          $ref: '#/components/schemas/PartyClient'
        lastContactedDate:
          type: string
          format: date-time
          nullable: true
        lastContactedType:
          $ref: '#/components/schemas/ActivityType'
        lastContactedId:
          $ref: '#/components/schemas/Reference'
        lastMeetingDate:
          type: string
          format: date-time
          nullable: true
        lastMeetingType:
          $ref: '#/components/schemas/ActivityType'
        lastMeetingId:
          $ref: '#/components/schemas/Reference'
        nextMeetingDate:
          type: string
          format: date-time
          nullable: true
        nextMeetingType:
          $ref: '#/components/schemas/ActivityType'
        nextMeetingId:
          $ref: '#/components/schemas/Reference'
        isMine:
          type: boolean
          nullable: true
        relationshipOverview:
          type: string
          nullable: true
        teamMembers:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        subsidiaryTeams:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        subsidiaries:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        powerOfAttorneyFor:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        wards:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        employees:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        trustees:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        directors:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        shareholders:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        correspondents:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        settlors:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        beneficiaries:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        jointInvestors:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        teamMembersOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        parentTeams:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        parentOrganisations:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        powerOfAttorneys:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        parents:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        guardians:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        employers:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        trusteesOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        directorsOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        shareholdersOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        correspondentsOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        settlorsOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        beneficiariesOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        jointInvestorsOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        advisers:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        productProviders:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        professionals:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        friends:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        spouses:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        partners:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        divorcees:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        widowees:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        familyMembers:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
      additionalProperties: false
    LendingAccount:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/ClientProductType'
        code:
          type: string
          nullable: true
        dateOpened:
          type: string
          format: date-time
          nullable: true
        dateClosed:
          type: string
          format: date-time
          nullable: true
        dateLive:
          type: string
          format: date-time
          nullable: true
        product:
          $ref: '#/components/schemas/Product'
        purpose:
          type: string
          nullable: true
        currency:
          type: string
          nullable: true
        latestValue:
          $ref: '#/components/schemas/CurrencyValue'
        estimatedValue:
          $ref: '#/components/schemas/CurrencyValue'
        beneficialOwner:
          $ref: '#/components/schemas/Reference'
        portfolio:
          $ref: '#/components/schemas/CodedReference'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/ProductGroupSimple'
          nullable: true
        app:
          $ref: '#/components/schemas/AppStatus'
        status:
          $ref: '#/components/schemas/ProductStatus'
      additionalProperties: false
    LendingAccountCreate:
      type: object
      properties:
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        productCode:
          type: string
          nullable: true
        purpose:
          type: string
          nullable: true
        currency:
          type: string
          nullable: true
        beneficialOwner:
          $ref: '#/components/schemas/Reference'
        dateOpened:
          type: string
          format: date-time
          nullable: true
        dateClosed:
          type: string
          format: date-time
          nullable: true
        dateLive:
          type: string
          format: date-time
          nullable: true
        latestValue:
          $ref: '#/components/schemas/CurrencyValue'
        estimatedValue:
          $ref: '#/components/schemas/CurrencyValue'
      additionalProperties: false
    LendingAccountUpdate:
      type: object
      properties:
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        purpose:
          type: string
          nullable: true
        currency:
          type: string
          nullable: true
        beneficialOwner:
          $ref: '#/components/schemas/Reference'
        dateOpened:
          type: string
          format: date-time
          nullable: true
        dateClosed:
          type: string
          format: date-time
          nullable: true
        dateLive:
          type: string
          format: date-time
          nullable: true
        latestValue:
          $ref: '#/components/schemas/CurrencyValue'
        estimatedValue:
          $ref: '#/components/schemas/CurrencyValue'
      additionalProperties: false
    Locale:
      type: object
      properties:
        englishName:
          type: string
          nullable: true
        nativeName:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        lcid:
          type: integer
          format: int32
        dateTimeFormat:
          $ref: '#/components/schemas/DateTimeFormat'
        numberFormat:
          $ref: '#/components/schemas/NumberFormat'
        threeLetterISOLanguageName:
          type: string
          nullable: true
      additionalProperties: false
    LogicStep:
      required:
        - code
      type: object
      properties:
        code:
          maxLength: 100
          type: string
        parameters:
          type: object
          additionalProperties: { }
          nullable: true
        type:
          type: string
          nullable: true
        availableParameters:
          type: array
          items:
            $ref: '#/components/schemas/LogicStepParameter'
          nullable: true
      additionalProperties: false
    LogicStepParameter:
      type: object
      properties:
        code:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        isMandatory:
          type: boolean
      additionalProperties: false
    LookupCreationMode:
      enum:
        - ExistingOnly
        - CreateOnly
        - CreateAndExisting
      type: string
    LookupFieldResult:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        lookupType:
          $ref: '#/components/schemas/LookupSourceType'
        partyType:
          $ref: '#/components/schemas/PartyType'
        avatarUrl:
          type: string
          nullable: true
      additionalProperties: false
    LookupResult:
      type: object
      properties:
        partyId:
          type: integer
          format: int32
        partyType:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        contactPointId:
          type: integer
          format: int32
        emailAddress:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
      additionalProperties: false
    LookupSourceType:
      enum:
        - Party
        - Person
        - Organisation
        - User
        - Team
        - ClientProduct
        - ProductGroup
        - Adviser
        - Intermediary
        - ProductProvider
        - Company
        - Charity
        - Trust
        - Client
        - Country
        - Case
        - None
      type: string
    Mandate:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
      additionalProperties: false
    MaritalStatusType:
      enum:
        - Unknown
        - Single
        - Married
        - Divorced
        - Partner
        - Separated
        - Widowed
      type: string
    Message:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        body:
          type: string
          nullable: true
        messageType:
          type: string
          nullable: true
      additionalProperties: false
    MinimalParty:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        isActive:
          type: boolean
        partyType:
          type: string
          nullable: true
      additionalProperties: false
    NavBar:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
          nullable: true
      additionalProperties: false
    NewBusiness:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        currency:
          $ref: '#/components/schemas/Currency'
        estimatedValue:
          type: number
          format: double
          nullable: true
        estimatedCloseDate:
          type: string
          format: date-time
          nullable: true
        type:
          $ref: '#/components/schemas/NewBusinessType'
        lead:
          $ref: '#/components/schemas/Reference'
        client:
          $ref: '#/components/schemas/Reference'
        isUnknownClient:
          type: boolean
        origin:
          $ref: '#/components/schemas/PartyOrigin'
        process:
          $ref: '#/components/schemas/Reference'
        status:
          type: string
          nullable: true
        processStage:
          type: string
          nullable: true
        clientType:
          $ref: '#/components/schemas/Role'
      additionalProperties: false
    NewBusinessAddress:
      required:
        - city
        - postCode
        - street
        - streetBuildingIdentification
      type: object
      properties:
        streetBuildingIdentification:
          type: string
        street:
          type: string
        city:
          type: string
        postOfficeBox:
          type: string
          nullable: true
        postCode:
          type: string
      additionalProperties: false
    NewBusinessCreate:
      required:
        - clientType
        - isUnknownClient
        - name
        - owner
        - type
      type: object
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/NewBusinessType'
        isUnknownClient:
          type: boolean
        estimatedCompletionDate:
          type: string
          format: date-time
          nullable: true
        owner:
          $ref: '#/components/schemas/NewBusinessParty'
        source:
          $ref: '#/components/schemas/PartyOrigin'
        clientType:
          $ref: '#/components/schemas/RoleType'
        person:
          $ref: '#/components/schemas/Reference'
        organisation:
          $ref: '#/components/schemas/Reference'
        primaryContact:
          $ref: '#/components/schemas/NewBusinessParty'
        roleCode:
          type: string
          nullable: true
        organisationPhoneNumbers:
          type: array
          items:
            $ref: '#/components/schemas/NewBusinessPhoneNumber'
          nullable: true
        organisationEmails:
          type: array
          items:
            $ref: '#/components/schemas/NewBusinessEmail'
          nullable: true
        organisationAddresses:
          type: array
          items:
            $ref: '#/components/schemas/NewBusinessAddress'
          nullable: true
        estimatedValue:
          $ref: '#/components/schemas/NewBusinessEstimatedValue'
      additionalProperties: false
    NewBusinessEmail:
      type: object
      properties:
        emailAddress:
          type: string
          nullable: true
        addressType:
          type: string
          nullable: true
      additionalProperties: false
    NewBusinessEstimatedValue:
      type: object
      properties:
        isoCode:
          type: string
          nullable: true
        amount:
          type: integer
          format: int32
      additionalProperties: false
    NewBusinessParty:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        lookupType:
          type: string
          nullable: true
      additionalProperties: false
    NewBusinessPhoneNumber:
      type: object
      properties:
        phoneType:
          type: string
          nullable: true
        number:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
      additionalProperties: false
    NewBusinessQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/NewBusiness'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    NewBusinessSummary:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/NewBusinessType'
        estimatedValue:
          type: number
          format: double
          nullable: true
        openDate:
          type: string
          format: date-time
        estimatedCloseDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    NewBusinessType:
      enum:
        - NewProspect
        - ExistingContact
        - Lead
      type: string
    NoteFilter:
      type: object
      properties:
        search:
          type: string
          nullable: true
        partyIds:
          type: array
          items:
            type: string
          nullable: true
        partyRoleIds:
          type: array
          items:
            type: string
          nullable: true
        sortBy:
          $ref: '#/components/schemas/NoteListSortByType'
      additionalProperties: false
    NoteListSortByType:
      enum:
        - RecentlyAdded
        - Important
        - ImportantUntil
      type: string
    Notification:
      type: object
      properties:
        id:
          type: string
          nullable: true
        assignedTo:
          $ref: '#/components/schemas/PartyStub'
        originatedBy:
          $ref: '#/components/schemas/PartyStub'
        notificationType:
          $ref: '#/components/schemas/NotificationType'
        createdOn:
          type: string
          format: date-time
        activity:
          $ref: '#/components/schemas/Regarding'
        case:
          $ref: '#/components/schemas/Regarding'
        chat:
          $ref: '#/components/schemas/Regarding'
        chatText:
          type: string
          nullable: true
        isActive:
          type: boolean
        status:
          $ref: '#/components/schemas/NotificationStatus'
      additionalProperties: false
    NotificationCreate:
      type: object
      properties:
        assignedToId:
          type: string
          nullable: true
        notificationType:
          $ref: '#/components/schemas/NotificationType'
        activityId:
          type: string
          nullable: true
        caseId:
          type: string
          nullable: true
        chatId:
          type: string
          nullable: true
      additionalProperties: false
    NotificationQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    NotificationStatus:
      enum:
        - Read
        - Unread
      type: string
    NotificationType:
      enum:
        - WorkItemCompleted
        - WorkItemAssigned
        - CommentAdded
        - IssueRaised
        - IssueResolved
        - CaseTeamMemberAdded
        - CaseStarted
        - CaseCompleted
      type: string
    Nudge:
      type: object
      properties:
        id:
          type: string
          nullable: true
        nudgeTypeCode:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        dateCreated:
          type: string
          format: date-time
        dateExpires:
          type: string
          format: date-time
        dateDue:
          type: string
          format: date-time
          nullable: true
        dateInactivated:
          type: string
          format: date-time
          nullable: true
        status:
          type: string
          nullable: true
        isActive:
          type: boolean
        goalPoints:
          $ref: '#/components/schemas/GoalPoint'
        party:
          $ref: '#/components/schemas/PartyStub'
        partyRole:
          $ref: '#/components/schemas/Reference'
        activity:
          $ref: '#/components/schemas/Reference'
        clientDocument:
          $ref: '#/components/schemas/Reference'
        clientProduct:
          $ref: '#/components/schemas/Reference'
        article:
          $ref: '#/components/schemas/Reference'
        articleSynopsis:
          type: string
          nullable: true
        nudgeImageUrl:
          type: string
          nullable: true
        logs:
          type: array
          items:
            $ref: '#/components/schemas/NudgeLog'
          nullable: true
        reminders:
          type: array
          items:
            $ref: '#/components/schemas/Reminder'
          nullable: true
      additionalProperties: false
    NudgeCreate:
      type: object
      properties:
        nudgeTypeCode:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        dateExpires:
          type: string
          format: date-time
        dateDue:
          type: string
          format: date-time
          nullable: true
        partyRoleId:
          type: string
          nullable: true
        activityId:
          type: string
          nullable: true
      additionalProperties: false
    NudgeCreatedOnFilterType:
      enum:
        - Today
        - Last7Days
        - OlderThan7Days
        - Any
      type: string
    NudgeLog:
      type: object
      properties:
        id:
          type: string
          nullable: true
        dateLogged:
          type: string
          format: date-time
        loggedBy:
          $ref: '#/components/schemas/Reference'
        logType:
          $ref: '#/components/schemas/NudgeLogType'
        nudgeId:
          type: integer
          format: int32
          nullable: true
        feedNudgeId:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    NudgeLogCreate:
      type: object
      properties:
        logType:
          $ref: '#/components/schemas/NudgeLogType'
      additionalProperties: false
    NudgeLogType:
      enum:
        - DimissedForEveryone
        - DismissedForMe
      type: string
    NudgeQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Nudge'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    NudgeType:
      type: object
      properties:
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
        colourCode:
          type: string
          nullable: true
        goalTypes:
          type: array
          items:
            $ref: '#/components/schemas/GoalTypeLink'
          nullable: true
        actionTypes:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    NumberFormat:
      type: object
      properties:
        numberDecimalSeparator:
          type: string
          nullable: true
        numberGroupSeparator:
          type: string
          nullable: true
        currencySymbol:
          type: string
          nullable: true
      additionalProperties: false
    Objective:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
      additionalProperties: false
    Opportunity:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        stageCode:
          type: string
          nullable: true
        stageName:
          type: string
          nullable: true
        owner:
          $ref: '#/components/schemas/PartyStub'
        dateClosed:
          type: string
          format: date-time
          nullable: true
        currency:
          $ref: '#/components/schemas/Currency'
        estimatedValue:
          $ref: '#/components/schemas/CurrencyValue'
        weighting:
          type: integer
          format: int32
        estimatedCloseDate:
          type: string
          format: date-time
        priority:
          $ref: '#/components/schemas/OpportunityPriorityType'
        lostReason:
          type: string
          nullable: true
        comment:
          type: string
          nullable: true
        adviser:
          $ref: '#/components/schemas/Reference'
        intermediary:
          $ref: '#/components/schemas/Reference'
        primaryContact:
          $ref: '#/components/schemas/Reference'
        client:
          $ref: '#/components/schemas/Reference'
        clientStatus:
          $ref: '#/components/schemas/PartyClientSummary'
        product:
          $ref: '#/components/schemas/Reference'
        competitor:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    OpportunityCreate:
      type: object
      properties:
        currencyCode:
          type: string
          nullable: true
        estimatedValue:
          $ref: '#/components/schemas/CurrencyValue'
        estimatedCloseDate:
          type: string
          format: date-time
        priority:
          $ref: '#/components/schemas/OpportunityPriorityType'
        comment:
          type: string
          nullable: true
        adviserId:
          type: string
          nullable: true
        intermediaryId:
          type: string
          nullable: true
        primaryContactId:
          type: string
          nullable: true
        clientId:
          type: string
          nullable: true
        productId:
          type: string
          nullable: true
      additionalProperties: false
    OpportunityFilter:
      type: object
      properties:
        search:
          type: string
          nullable: true
        ownershipLevel:
          $ref: '#/components/schemas/OwnershipLevel'
        sortBy:
          $ref: '#/components/schemas/OpportunitySortByType'
        productIds:
          type: array
          items:
            type: string
          nullable: true
        adviserId:
          type: string
          nullable: true
        intermediaryId:
          type: string
          nullable: true
      additionalProperties: false
    OpportunityPriorityType:
      enum:
        - NoPriority
        - Low
        - Medium
        - High
      type: string
    OpportunityQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Opportunity'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    OpportunitySortByType:
      enum:
        - Alphabetical
        - AlphabeticalDesc
        - EstimatedValue
        - EstimatedCloseDate
      type: string
    OptionComplexIcon:
      type: object
      properties:
        icon:
          type: string
          nullable: true
        style:
          type: string
          nullable: true
        ratio:
          type: number
          format: double
          nullable: true
        tagColor:
          type: integer
          format: int32
          nullable: true
        textColor:
          type: string
          nullable: true
        rotate:
          type: integer
          format: int32
          nullable: true
        offsetTop:
          type: integer
          format: int32
          nullable: true
        offsetLeft:
          type: integer
          format: int32
          nullable: true
        scale:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    Organisation:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        isActive:
          type: boolean
        status:
          type: string
          nullable: true
        partyType:
          $ref: '#/components/schemas/PartyType'
        defaultEmailAddress:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        avatarUrl:
          type: string
          nullable: true
        numberOfPersonalConnections:
          type: integer
          format: int32
          nullable: true
        netWealth:
          $ref: '#/components/schemas/CurrencyValue'
        potentialValue:
          $ref: '#/components/schemas/CurrencyValue'
        potentialValueConnected:
          $ref: '#/components/schemas/CurrencyValue'
        totalAUM:
          $ref: '#/components/schemas/CurrencyValue'
        totalAUMConnected:
          $ref: '#/components/schemas/CurrencyValue'
        pipelineWeightedValue:
          $ref: '#/components/schemas/CurrencyValue'
        pipelineWeightedValueConnected:
          $ref: '#/components/schemas/CurrencyValue'
        lastContactedDate:
          type: string
          format: date-time
          nullable: true
        lastContactedType:
          $ref: '#/components/schemas/ActivityType'
        lastContactedId:
          $ref: '#/components/schemas/Reference'
        lastMeetingDate:
          type: string
          format: date-time
          nullable: true
        lastMeetingType:
          $ref: '#/components/schemas/ActivityType'
        lastMeetingId:
          $ref: '#/components/schemas/Reference'
        nextMeetingDate:
          type: string
          format: date-time
          nullable: true
        nextMeetingType:
          $ref: '#/components/schemas/ActivityType'
        nextMeetingId:
          $ref: '#/components/schemas/Reference'
        partyRoles:
          type: array
          items:
            $ref: '#/components/schemas/PartyRole'
          nullable: true
        contactPoints:
          type: array
          items:
            $ref: '#/components/schemas/ContactPoint'
          nullable: true
        clientStatus:
          $ref: '#/components/schemas/PartyClientSummary'
        purpose:
          type: string
          nullable: true
        businessType:
          type: string
          nullable: true
        establishmentDate:
          type: string
          format: date-time
          nullable: true
        currency:
          $ref: '#/components/schemas/Currency'
        countryOfIncorporation:
          $ref: '#/components/schemas/Country'
        registrationNumber:
          type: string
          nullable: true
        isRegulated:
          type: boolean
          nullable: true
        regulatorName:
          type: string
          nullable: true
        regulatorRegistrationNumber:
          type: string
          nullable: true
        isFinancialInstitution:
          type: boolean
          nullable: true
        isFavourite:
          type: boolean
      additionalProperties: false
    OrganisationCreate:
      required:
        - purpose
        - roleType
      type: object
      properties:
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        currencyCode:
          type: string
          nullable: true
        purpose:
          maxLength: 100
          type: string
        businessType:
          type: string
          nullable: true
        establishmentDate:
          type: string
          format: date-time
        roleType:
          $ref: '#/components/schemas/RoleType'
        countryOfIncorporation:
          type: string
          nullable: true
        registrationNumber:
          type: string
          nullable: true
        isRegulated:
          type: boolean
          nullable: true
        regulatorName:
          type: string
          nullable: true
        regulatorRegistrationNumber:
          type: string
          nullable: true
        isFinancialInstitution:
          type: boolean
          nullable: true
        netWealth:
          $ref: '#/components/schemas/CurrencyValue'
      additionalProperties: false
    OrganisationFilter:
      type: object
      properties:
        search:
          type: string
          nullable: true
        ownershipLevel:
          $ref: '#/components/schemas/OwnershipLevel'
        roleTypes:
          type: array
          items:
            type: string
          nullable: true
        clientRoleType:
          $ref: '#/components/schemas/ClientRoleType'
        isRecent:
          type: boolean
        isFavourite:
          type: boolean
        sortBy:
          $ref: '#/components/schemas/ContactListSortByType'
      additionalProperties: false
    OrganisationQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Organisation'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    OwnershipLevel:
      enum:
        - My
        - MyTeam
        - All
      type: string
    Party:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        isActive:
          type: boolean
        status:
          type: string
          nullable: true
        partyType:
          $ref: '#/components/schemas/PartyType'
        defaultEmailAddress:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        avatarUrl:
          type: string
          nullable: true
        numberOfPersonalConnections:
          type: integer
          format: int32
          nullable: true
        netWealth:
          $ref: '#/components/schemas/CurrencyValue'
        potentialValue:
          $ref: '#/components/schemas/CurrencyValue'
        potentialValueConnected:
          $ref: '#/components/schemas/CurrencyValue'
        totalAUM:
          $ref: '#/components/schemas/CurrencyValue'
        totalAUMConnected:
          $ref: '#/components/schemas/CurrencyValue'
        pipelineWeightedValue:
          $ref: '#/components/schemas/CurrencyValue'
        pipelineWeightedValueConnected:
          $ref: '#/components/schemas/CurrencyValue'
        lastContactedDate:
          type: string
          format: date-time
          nullable: true
        lastContactedType:
          $ref: '#/components/schemas/ActivityType'
        lastContactedId:
          $ref: '#/components/schemas/Reference'
        lastMeetingDate:
          type: string
          format: date-time
          nullable: true
        lastMeetingType:
          $ref: '#/components/schemas/ActivityType'
        lastMeetingId:
          $ref: '#/components/schemas/Reference'
        nextMeetingDate:
          type: string
          format: date-time
          nullable: true
        nextMeetingType:
          $ref: '#/components/schemas/ActivityType'
        nextMeetingId:
          $ref: '#/components/schemas/Reference'
        partyRoles:
          type: array
          items:
            $ref: '#/components/schemas/PartyRole'
          nullable: true
        contactPoints:
          type: array
          items:
            $ref: '#/components/schemas/ContactPoint'
          nullable: true
        clientStatus:
          $ref: '#/components/schemas/PartyClientSummary'
      additionalProperties: false
    PartyClient:
      type: object
      properties:
        name:
          type: string
          nullable: true
        dateLastReview:
          type: string
          format: date-time
          nullable: true
        dateNextReview:
          type: string
          format: date-time
          nullable: true
        inceptionDate:
          type: string
          format: date-time
          nullable: true
        cessationDate:
          type: string
          format: date-time
          nullable: true
        currency:
          $ref: '#/components/schemas/Currency'
        totalAUM:
          $ref: '#/components/schemas/CurrencyValue'
        pipelineWeightedValue:
          $ref: '#/components/schemas/CurrencyValue'
      additionalProperties: false
    PartyClientSummary:
      type: object
      properties:
        clientId:
          type: string
          nullable: true
        inceptionDate:
          type: string
          format: date-time
          nullable: true
        clientStatus:
          $ref: '#/components/schemas/ClientStatusSummaryType'
      additionalProperties: false
    PartyOrigin:
      enum:
        - Unknown
        - DirectEnquiry
        - Referral
        - Event
        - Adviser
        - InternalReferral
        - PersonalNetwork
      type: string
    PartyQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Party'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    PartyRole:
      type: object
      properties:
        id:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        isPrimary:
          type: boolean
        isActive:
          type: boolean
        party:
          $ref: '#/components/schemas/PartyStub'
        role:
          $ref: '#/components/schemas/Role'
        clientStatusType:
          $ref: '#/components/schemas/ClientStatusType'
        description:
          type: string
          nullable: true
        client:
          $ref: '#/components/schemas/PartyClient'
        lastContactedDate:
          type: string
          format: date-time
          nullable: true
        lastContactedType:
          $ref: '#/components/schemas/ActivityType'
        lastContactedId:
          $ref: '#/components/schemas/Reference'
        lastMeetingDate:
          type: string
          format: date-time
          nullable: true
        lastMeetingType:
          $ref: '#/components/schemas/ActivityType'
        lastMeetingId:
          $ref: '#/components/schemas/Reference'
        nextMeetingDate:
          type: string
          format: date-time
          nullable: true
        nextMeetingType:
          $ref: '#/components/schemas/ActivityType'
        nextMeetingId:
          $ref: '#/components/schemas/Reference'
        isMine:
          type: boolean
          nullable: true
        relationshipOverview:
          type: string
          nullable: true
        teamMembers:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        subsidiaryTeams:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        subsidiaries:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        powerOfAttorneyFor:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        wards:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        employees:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        trustees:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        directors:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        shareholders:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        correspondents:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        settlors:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        beneficiaries:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        jointInvestors:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        teamMembersOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        parentTeams:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        parentOrganisations:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        powerOfAttorneys:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        parents:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        guardians:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        employers:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        trusteesOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        directorsOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        shareholdersOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        correspondentsOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        settlorsOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        beneficiariesOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        jointInvestorsOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        advisers:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        productProviders:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        professionals:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        friends:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        spouses:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        partners:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        divorcees:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        widowees:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        familyMembers:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
      additionalProperties: false
    PartyRoleAccess:
      type: object
      properties:
        party:
          $ref: '#/components/schemas/Party'
        isOwner:
          type: boolean
        reason:
          type: string
          nullable: true
        addedBy:
          $ref: '#/components/schemas/Reference'
        addedOn:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    PartyRoleAccessCreate:
      required:
        - partyId
        - reason
      type: object
      properties:
        partyId:
          type: string
        reason:
          type: string
      additionalProperties: false
    PartyRoleRelationship:
      type: object
      properties:
        party:
          $ref: '#/components/schemas/PartyStub'
        partyRole:
          $ref: '#/components/schemas/PartyRole'
        client:
          $ref: '#/components/schemas/Client'
        relationship:
          $ref: '#/components/schemas/RelationshipLight'
        isSelf:
          type: boolean
      additionalProperties: false
    PartyRoleStub:
      type: object
      properties:
        id:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        isPrimary:
          type: boolean
        isActive:
          type: boolean
        party:
          $ref: '#/components/schemas/PartyStub'
        role:
          $ref: '#/components/schemas/Role'
        clientStatusType:
          $ref: '#/components/schemas/ClientStatusType'
        description:
          type: string
          nullable: true
      additionalProperties: false
    PartyStub:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        avatarUrl:
          type: string
          nullable: true
        partyType:
          $ref: '#/components/schemas/PartyType'
      additionalProperties: false
    PartyType:
      enum:
        - Person
        - Organisation
        - User
        - Team
      type: string
    Performance:
      type: object
      properties:
        endDate:
          type: string
          format: date-time
        startDate:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
        benchmarkName:
          type: string
          nullable: true
        summary:
          $ref: '#/components/schemas/PerformanceSummary'
        returns:
          $ref: '#/components/schemas/PerformanceReturns'
        history:
          type: array
          items:
            $ref: '#/components/schemas/TimeSeriesPoint'
          nullable: true
      additionalProperties: false
    PerformancePeriod:
      enum:
        - OneMonth
        - ThreeMonths
        - SixMonths
        - YearToDate
        - OneYear
        - ThreeYear
        - FiveYear
        - SinceInception
      type: string
    PerformanceReturns:
      type: object
      properties:
        return1M:
          type: number
          format: double
          nullable: true
        return2M:
          type: number
          format: double
          nullable: true
        return3M:
          type: number
          format: double
          nullable: true
        return6M:
          type: number
          format: double
          nullable: true
        returnYTD:
          type: number
          format: double
          nullable: true
        return1Y:
          type: number
          format: double
          nullable: true
        return2Y:
          type: number
          format: double
          nullable: true
        return3Y:
          type: number
          format: double
          nullable: true
        return5Y:
          type: number
          format: double
          nullable: true
        annualised1Y:
          type: number
          format: double
          nullable: true
        annualised3Y:
          type: number
          format: double
          nullable: true
        sinceInception:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    PerformanceSummary:
      type: object
      properties:
        startValue:
          $ref: '#/components/schemas/CurrencyValue'
        endValue:
          $ref: '#/components/schemas/CurrencyValue'
        moneyIn:
          $ref: '#/components/schemas/CurrencyValue'
        moneyOut:
          $ref: '#/components/schemas/CurrencyValue'
      additionalProperties: false
    Person:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        isActive:
          type: boolean
        status:
          type: string
          nullable: true
        partyType:
          $ref: '#/components/schemas/PartyType'
        defaultEmailAddress:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        avatarUrl:
          type: string
          nullable: true
        numberOfPersonalConnections:
          type: integer
          format: int32
          nullable: true
        netWealth:
          $ref: '#/components/schemas/CurrencyValue'
        potentialValue:
          $ref: '#/components/schemas/CurrencyValue'
        potentialValueConnected:
          $ref: '#/components/schemas/CurrencyValue'
        totalAUM:
          $ref: '#/components/schemas/CurrencyValue'
        totalAUMConnected:
          $ref: '#/components/schemas/CurrencyValue'
        pipelineWeightedValue:
          $ref: '#/components/schemas/CurrencyValue'
        pipelineWeightedValueConnected:
          $ref: '#/components/schemas/CurrencyValue'
        lastContactedDate:
          type: string
          format: date-time
          nullable: true
        lastContactedType:
          $ref: '#/components/schemas/ActivityType'
        lastContactedId:
          $ref: '#/components/schemas/Reference'
        lastMeetingDate:
          type: string
          format: date-time
          nullable: true
        lastMeetingType:
          $ref: '#/components/schemas/ActivityType'
        lastMeetingId:
          $ref: '#/components/schemas/Reference'
        nextMeetingDate:
          type: string
          format: date-time
          nullable: true
        nextMeetingType:
          $ref: '#/components/schemas/ActivityType'
        nextMeetingId:
          $ref: '#/components/schemas/Reference'
        partyRoles:
          type: array
          items:
            $ref: '#/components/schemas/PartyRole'
          nullable: true
        contactPoints:
          type: array
          items:
            $ref: '#/components/schemas/ContactPoint'
          nullable: true
        clientStatus:
          $ref: '#/components/schemas/PartyClientSummary'
        title:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        middleNames:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        dateOfBirth:
          type: string
          format: date-time
          nullable: true
        gender:
          $ref: '#/components/schemas/GenderType'
        maritalStatus:
          $ref: '#/components/schemas/MaritalStatusType'
        localeName:
          type: string
          nullable: true
        nationality:
          type: string
          nullable: true
        domicile:
          type: string
          nullable: true
        currency:
          $ref: '#/components/schemas/Currency'
        age:
          type: integer
          format: int32
          nullable: true
        isFavourite:
          type: boolean
      additionalProperties: false
    PersonCreate:
      required:
        - firstName
        - lastName
        - roleType
        - title
      type: object
      properties:
        title:
          maxLength: 80
          type: string
        firstName:
          maxLength: 80
          type: string
        middleNames:
          maxLength: 95
          type: string
          nullable: true
        code:
          maxLength: 100
          type: string
          nullable: true
        lastName:
          maxLength: 80
          type: string
        dateOfBirth:
          type: string
          format: date-time
          nullable: true
        genderCode:
          $ref: '#/components/schemas/GenderType'
        maritalStatus:
          $ref: '#/components/schemas/MaritalStatusType'
        locale:
          type: string
          nullable: true
        currencyCode:
          type: string
          nullable: true
        nationality:
          type: string
          nullable: true
        domicile:
          type: string
          nullable: true
        netWealth:
          $ref: '#/components/schemas/CurrencyValue'
        roleType:
          $ref: '#/components/schemas/RoleType'
      additionalProperties: false
    PersonFilter:
      type: object
      properties:
        search:
          type: string
          nullable: true
        ownershipLevel:
          $ref: '#/components/schemas/OwnershipLevel'
        roleTypes:
          type: array
          items:
            $ref: '#/components/schemas/RoleType'
          nullable: true
        clientRoleType:
          $ref: '#/components/schemas/ClientRoleType'
        isRecent:
          type: boolean
        isFavourite:
          type: boolean
        sortBy:
          $ref: '#/components/schemas/ContactListSortByType'
      additionalProperties: false
    PersonQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    PersonUpdate:
      required:
        - firstName
        - lastName
        - roleType
        - title
      type: object
      properties:
        title:
          maxLength: 80
          type: string
        firstName:
          maxLength: 80
          type: string
        middleNames:
          maxLength: 95
          type: string
          nullable: true
        code:
          maxLength: 100
          type: string
          nullable: true
        lastName:
          maxLength: 80
          type: string
        dateOfBirth:
          type: string
          format: date-time
          nullable: true
        genderCode:
          $ref: '#/components/schemas/GenderType'
        maritalStatus:
          $ref: '#/components/schemas/MaritalStatusType'
        locale:
          type: string
          nullable: true
        currencyCode:
          type: string
          nullable: true
        nationality:
          type: string
          nullable: true
        domicile:
          type: string
          nullable: true
        netWealth:
          $ref: '#/components/schemas/CurrencyValue'
        roleType:
          $ref: '#/components/schemas/RoleType'
        id:
          type: string
          nullable: true
      additionalProperties: false
    PhoneAddress:
      required:
        - phoneType
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        isActive:
          type: boolean
        status:
          type: integer
          format: int32
        isPreferred:
          type: boolean
        isPrimary:
          type: boolean
        contactPointType:
          type: string
          nullable: true
        number:
          maxLength: 35
          type: string
          nullable: true
        e164Number:
          type: string
          nullable: true
        country:
          $ref: '#/components/schemas/Country'
        phoneType:
          $ref: '#/components/schemas/PhoneType'
      additionalProperties: false
    PhoneAddressCreate:
      type: object
      properties:
        partyId:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        isPreferred:
          type: boolean
        isPrimary:
          type: boolean
        number:
          maxLength: 35
          type: string
          nullable: true
        phoneType:
          $ref: '#/components/schemas/PhoneType'
        country:
          $ref: '#/components/schemas/Country'
      additionalProperties: false
    PhoneAddressQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/PhoneAddress'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    PhoneDirection:
      enum:
        - Incoming
        - Outgoing
      type: string
    PhoneType:
      enum:
        - Unknown
        - Home
        - Work
        - Mobile
        - Fax
      type: string
    Picklist:
      type: object
      properties:
        id:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
      additionalProperties: false
    PicklistType:
      type: object
      properties:
        name:
          type: string
          nullable: true
        pickistValues:
          type: array
          items:
            $ref: '#/components/schemas/Picklist'
          nullable: true
      additionalProperties: false
    PostalAddress:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        isActive:
          type: boolean
        status:
          type: integer
          format: int32
        isPreferred:
          type: boolean
        isPrimary:
          type: boolean
        contactPointType:
          type: string
          nullable: true
        addressType:
          $ref: '#/components/schemas/AddressType'
        code:
          type: string
          nullable: true
        streetBuildingIdentification:
          maxLength: 16
          type: string
          nullable: true
        street:
          maxLength: 100
          type: string
          nullable: true
        city:
          maxLength: 100
          type: string
          nullable: true
        region:
          maxLength: 100
          type: string
          nullable: true
        postOfficeBox:
          maxLength: 35
          type: string
          nullable: true
        postCode:
          maxLength: 10
          type: string
          nullable: true
        country:
          $ref: '#/components/schemas/Country'
        geographicLocation:
          $ref: '#/components/schemas/GeographicLocation'
      additionalProperties: false
    PostalAddressCreate:
      type: object
      properties:
        partyId:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        isPreferred:
          type: boolean
        isPrimary:
          type: boolean
        addressType:
          $ref: '#/components/schemas/AddressType'
        streetBuildingIdentification:
          maxLength: 16
          type: string
          nullable: true
        street:
          maxLength: 100
          type: string
          nullable: true
        city:
          maxLength: 100
          type: string
          nullable: true
        region:
          maxLength: 100
          type: string
          nullable: true
        postOfficeBox:
          maxLength: 35
          type: string
          nullable: true
        postCode:
          maxLength: 10
          type: string
          nullable: true
        country:
          $ref: '#/components/schemas/Country'
      additionalProperties: false
    PostalAddressLookup:
      type: object
      properties:
        identifier:
          type: string
          nullable: true
        displayText:
          type: string
          nullable: true
      additionalProperties: false
    PostalAddressQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/PostalAddress'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    PotentialDuplicate:
      type: object
      properties:
        id:
          type: string
          nullable: true
        recordType:
          $ref: '#/components/schemas/SystemEntity'
        matchTypes:
          type: array
          items:
            $ref: '#/components/schemas/DuplicateDetectorType'
          nullable: true
        record1Id:
          $ref: '#/components/schemas/Regarding'
        record2Id:
          $ref: '#/components/schemas/Regarding'
        createdById:
          $ref: '#/components/schemas/Reference'
        createdOn:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/StatusType'
        record1Data:
          type: object
          additionalProperties:
            type: string
          nullable: true
        record2Data:
          type: object
          additionalProperties:
            type: string
          nullable: true
      additionalProperties: false
    Process:
      required:
        - dateStarted
        - subject
      type: object
      properties:
        id:
          type: string
          nullable: true
        uuid:
          type: string
          format: uuid
        isActive:
          type: boolean
        status:
          $ref: '#/components/schemas/ProcessStatusType'
        subject:
          maxLength: 200
          type: string
        dateStarted:
          type: string
          format: date-time
        dateCompleted:
          type: string
          format: date-time
          nullable: true
        dateDue:
          type: string
          format: date-time
          nullable: true
        nextWorkItemDueDate:
          type: string
          format: date-time
          nullable: true
        ragStatus:
          $ref: '#/components/schemas/RAG'
        processTypeName:
          type: string
          nullable: true
        processTypeCode:
          type: string
          nullable: true
        processTypeVersion:
          type: integer
          format: int32
          nullable: true
        processStageCode:
          type: string
          nullable: true
        processStageName:
          type: string
          nullable: true
        regarding:
          $ref: '#/components/schemas/Regarding'
        owner:
          $ref: '#/components/schemas/Reference'
        parentProcess:
          $ref: '#/components/schemas/Reference'
        case:
          $ref: '#/components/schemas/Reference'
        storage:
          type: object
          additionalProperties: { }
          nullable: true
        priority:
          type: string
          nullable: true
        currencyValue:
          $ref: '#/components/schemas/CurrencyValue'
        completedWorkItems:
          type: integer
          format: int32
          nullable: true
        totalWorkItems:
          type: integer
          format: int32
          nullable: true
        isFavourite:
          type: boolean
        teamMembers:
          type: array
          items:
            $ref: '#/components/schemas/PartyStub'
          nullable: true
        workItems:
          type: array
          items:
            $ref: '#/components/schemas/WorkItem'
          nullable: true
      additionalProperties: false
    ProcessConfiguration:
      required:
        - stages
      type: object
      properties:
        beforeStartEvent:
          $ref: '#/components/schemas/ProcessStartEvent'
        startEvents:
          type: array
          items:
            $ref: '#/components/schemas/ProcessStartEvent'
          nullable: true
        endEvents:
          type: array
          items:
            $ref: '#/components/schemas/ProcessEndEvent'
          nullable: true
        actions:
          type: array
          items:
            $ref: '#/components/schemas/ProcessEvent'
          nullable: true
        stages:
          type: array
          items:
            $ref: '#/components/schemas/ProcessStage'
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/ProcessTask'
          nullable: true
        serviceTasks:
          type: array
          items:
            $ref: '#/components/schemas/ProcessServiceTask'
          nullable: true
        exclusiveGateways:
          type: array
          items:
            $ref: '#/components/schemas/ProcessExclusiveGateway'
          nullable: true
        parallelGateways:
          type: array
          items:
            $ref: '#/components/schemas/ProcessParallelGateway'
          nullable: true
        subProcesses:
          type: array
          items:
            $ref: '#/components/schemas/ProcessSubProcess'
          nullable: true
        outcomes:
          type: array
          items:
            $ref: '#/components/schemas/ProcessOutcome'
          nullable: true
      additionalProperties: false
    ProcessCreate:
      type: object
      properties:
        type:
          type: string
          nullable: true
        regarding:
          $ref: '#/components/schemas/Regarding'
        dateDue:
          type: string
          format: date-time
          nullable: true
        subject:
          type: string
          nullable: true
        ownerId:
          type: string
          nullable: true
      additionalProperties: false
    ProcessEndEvent:
      required:
        - code
        - name
        - stage
      type: object
      properties:
        code:
          maxLength: 50
          type: string
        name:
          maxLength: 256
          type: string
        outcomeCode:
          type: string
          nullable: true
        stage:
          maxLength: 100
          type: string
        logicSteps:
          type: array
          items:
            $ref: '#/components/schemas/LogicStep'
          nullable: true
      additionalProperties: false
    ProcessErrorMessage:
      type: object
      properties:
        object:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      additionalProperties: false
    ProcessEvent:
      required:
        - code
        - name
      type: object
      properties:
        code:
          maxLength: 50
          type: string
        name:
          maxLength: 256
          type: string
        outcomeCode:
          type: string
          nullable: true
      additionalProperties: false
    ProcessExclusiveGateway:
      required:
        - code
        - name
      type: object
      properties:
        code:
          maxLength: 50
          type: string
        name:
          maxLength: 100
          type: string
        isSystem:
          type: boolean
        outcomeCodes:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    ProcessFilter:
      type: object
      properties:
        search:
          type: string
          nullable: true
        ownershipLevel:
          $ref: '#/components/schemas/OwnershipLevel'
        schedules:
          type: array
          items:
            $ref: '#/components/schemas/ProcessScheduleFilterType'
          nullable: true
        regarding:
          $ref: '#/components/schemas/Regarding'
        processTypeCodes:
          type: array
          items:
            type: string
          nullable: true
        isCase:
          type: boolean
        isFavourite:
          type: boolean
          nullable: true
        status:
          type: array
          items:
            type: string
          nullable: true
        sortBy:
          $ref: '#/components/schemas/ProcessListSortByType'
        customFrom:
          type: string
          format: date-time
          nullable: true
        customTo:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    ProcessIntermediateCatchEvent:
      required:
        - code
        - name
      type: object
      properties:
        code:
          maxLength: 50
          type: string
        name:
          maxLength: 256
          type: string
        outcomeCode:
          type: string
          nullable: true
      additionalProperties: false
    ProcessIntermediateThrowEvent:
      required:
        - code
        - name
      type: object
      properties:
        code:
          maxLength: 50
          type: string
        name:
          maxLength: 256
          type: string
        outcomeCode:
          type: string
          nullable: true
      additionalProperties: false
    ProcessListSortByType:
      enum:
        - CreatedOn
        - CreatedOnDesc
      type: string
    ProcessOutcome:
      required:
        - code
        - name
      type: object
      properties:
        code:
          maxLength: 50
          type: string
        name:
          maxLength: 256
          type: string
        goto:
          maxLength: 100
          type: string
          nullable: true
        logicSteps:
          type: array
          items:
            $ref: '#/components/schemas/LogicStep'
          nullable: true
        isPrimary:
          type: boolean
        isDisabled:
          type: boolean
      additionalProperties: false
    ProcessParallelGateway:
      required:
        - code
        - name
      type: object
      properties:
        code:
          maxLength: 50
          type: string
        name:
          maxLength: 100
          type: string
        outcomeCodes:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    ProcessQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Process'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    ProcessScheduleFilterType:
      enum:
        - Overdue
        - ThisWeek
        - LastWeek
      type: string
    ProcessServiceTask:
      required:
        - code
        - name
      type: object
      properties:
        code:
          maxLength: 50
          type: string
        name:
          maxLength: 256
          type: string
        outcomeCodes:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    ProcessStage:
      required:
        - code
        - name
      type: object
      properties:
        code:
          maxLength: 50
          type: string
        name:
          maxLength: 256
          type: string
        workItems:
          type: array
          items:
            $ref: '#/components/schemas/ProcessTask'
          nullable: true
        advanceWithCancelledWorkItems:
          type: boolean
          nullable: true
        displayFor:
          type: integer
          format: int32
      additionalProperties: false
    ProcessStartEvent:
      required:
        - code
        - name
      type: object
      properties:
        code:
          maxLength: 50
          type: string
        name:
          maxLength: 256
          type: string
        outcomeCode:
          type: string
          nullable: true
        logicSteps:
          type: array
          items:
            $ref: '#/components/schemas/LogicStep'
          nullable: true
      additionalProperties: false
    ProcessStatusType:
      enum:
        - Pending
        - Active
        - Complete
        - Cancelled
        - Lost
      type: string
    ProcessSubProcess:
      required:
        - code
        - name
      type: object
      properties:
        code:
          maxLength: 50
          type: string
        name:
          maxLength: 100
          type: string
        stage:
          type: string
          nullable: true
        logicSteps:
          type: array
          items:
            $ref: '#/components/schemas/LogicStep'
          nullable: true
        outcomeCodes:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    ProcessSummary:
      type: object
      properties:
        typeCode:
          type: string
          nullable: true
        open:
          type: integer
          format: int32
        overdue:
          type: integer
          format: int32
        closedInWeek:
          type: integer
          format: int32
        closedInMonth:
          type: integer
          format: int32
      additionalProperties: false
    ProcessTask:
      required:
        - code
        - name
      type: object
      properties:
        code:
          maxLength: 50
          type: string
        name:
          maxLength: 100
          type: string
        stage:
          type: string
          nullable: true
        durationType:
          $ref: '#/components/schemas/DurationType'
        duration:
          type: integer
          format: int32
          nullable: true
        apps:
          type: array
          items:
            type: string
          nullable: true
        logicSteps:
          type: array
          items:
            $ref: '#/components/schemas/LogicStep'
          nullable: true
        cancellable:
          type: boolean
        outcomeCodes:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    ProcessType:
      required:
        - code
        - description
        - name
        - version
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          maxLength: 50
          type: string
        name:
          maxLength: 100
          type: string
        description:
          maxLength: 1000
          type: string
        version:
          type: integer
          format: int32
        state:
          $ref: '#/components/schemas/ProcessTypeState'
        isCase:
          type: boolean
        formName:
          type: string
          nullable: true
        formVersion:
          type: integer
          format: int32
        slaDays:
          type: integer
          format: int32
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ProcessErrorMessage'
          nullable: true
        stages:
          type: array
          items:
            $ref: '#/components/schemas/ProcessStage'
          nullable: true
        beforeStartEvent:
          $ref: '#/components/schemas/ProcessStartEvent'
        startEvents:
          type: array
          items:
            $ref: '#/components/schemas/ProcessStartEvent'
          nullable: true
        endEvents:
          type: array
          items:
            $ref: '#/components/schemas/ProcessEndEvent'
          nullable: true
        actions:
          type: array
          items:
            $ref: '#/components/schemas/ProcessEvent'
          nullable: true
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/ProcessTask'
          nullable: true
        serviceTasks:
          type: array
          items:
            $ref: '#/components/schemas/ProcessServiceTask'
          nullable: true
        exclusiveGateways:
          type: array
          items:
            $ref: '#/components/schemas/ProcessExclusiveGateway'
          nullable: true
        parallelGateways:
          type: array
          items:
            $ref: '#/components/schemas/ProcessParallelGateway'
          nullable: true
        subProcesses:
          type: array
          items:
            $ref: '#/components/schemas/ProcessSubProcess'
          nullable: true
        intermediateThrowEvents:
          type: array
          items:
            $ref: '#/components/schemas/ProcessIntermediateThrowEvent'
          nullable: true
        intermediateCatchEvents:
          type: array
          items:
            $ref: '#/components/schemas/ProcessIntermediateCatchEvent'
          nullable: true
        outcomes:
          type: array
          items:
            $ref: '#/components/schemas/ProcessOutcome'
          nullable: true
        bpmnXml:
          type: string
          nullable: true
      additionalProperties: false
    ProcessTypeState:
      enum:
        - Archived
        - Active
        - Draft
        - Invalid
      type: string
    ProcessTypeUpdate:
      required:
        - description
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
          nullable: true
        name:
          maxLength: 100
          type: string
        version:
          type: integer
          format: int32
        description:
          maxLength: 1000
          type: string
        configuration:
          $ref: '#/components/schemas/ProcessConfiguration'
        bpmnXml:
          type: string
          nullable: true
      additionalProperties: false
    Product:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        provider:
          $ref: '#/components/schemas/Reference'
        productType:
          $ref: '#/components/schemas/ProductType'
        colour:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
      additionalProperties: false
    ProductCreate:
      type: object
      properties:
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        providerId:
          type: string
          nullable: true
        typeCode:
          type: string
          nullable: true
      additionalProperties: false
    ProductGroup:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        groupType:
          $ref: '#/components/schemas/ProductGroupType'
        clientProducts:
          type: array
          items:
            $ref: '#/components/schemas/ClientProduct'
          nullable: true
        dateOpened:
          type: string
          format: date-time
          nullable: true
        dateClosed:
          type: string
          format: date-time
          nullable: true
        dateLive:
          type: string
          format: date-time
          nullable: true
        currency:
          $ref: '#/components/schemas/Currency'
        latestValue:
          $ref: '#/components/schemas/CurrencyValue'
        beneficialOwner:
          $ref: '#/components/schemas/Reference'
        mandate:
          $ref: '#/components/schemas/CodedReference'
        objective:
          $ref: '#/components/schemas/CodedReference'
        feeStructure:
          $ref: '#/components/schemas/CodedReference'
        riskLevel:
          $ref: '#/components/schemas/CodedReference'
        benchmark:
          $ref: '#/components/schemas/CodedReference'
        serviceType:
          $ref: '#/components/schemas/ServiceType'
        timeHorizon:
          $ref: '#/components/schemas/InvestmentTimeHorizon'
        cherishedHoldings:
          type: string
          nullable: true
        restrictions:
          type: string
          nullable: true
        app:
          $ref: '#/components/schemas/AppStatus'
      additionalProperties: false
    ProductGroupSimple:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        groupType:
          $ref: '#/components/schemas/ProductGroupType'
        app:
          $ref: '#/components/schemas/AppStatus'
      additionalProperties: false
    ProductGroupType:
      enum:
        - Portfolio
      type: string
    ProductStatus:
      enum:
        - Inactive
        - Proposed
        - Active
      type: string
    ProductType:
      type: object
      properties:
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        needType:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        colour:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
        formName:
          type: string
          nullable: true
      additionalProperties: false
    Prospect:
      type: object
      properties:
        id:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        isPrimary:
          type: boolean
        isActive:
          type: boolean
        party:
          $ref: '#/components/schemas/PartyStub'
        role:
          $ref: '#/components/schemas/Role'
        clientStatusType:
          $ref: '#/components/schemas/ClientStatusType'
        description:
          type: string
          nullable: true
        client:
          $ref: '#/components/schemas/PartyClient'
        lastContactedDate:
          type: string
          format: date-time
          nullable: true
        lastContactedType:
          $ref: '#/components/schemas/ActivityType'
        lastContactedId:
          $ref: '#/components/schemas/Reference'
        lastMeetingDate:
          type: string
          format: date-time
          nullable: true
        lastMeetingType:
          $ref: '#/components/schemas/ActivityType'
        lastMeetingId:
          $ref: '#/components/schemas/Reference'
        nextMeetingDate:
          type: string
          format: date-time
          nullable: true
        nextMeetingType:
          $ref: '#/components/schemas/ActivityType'
        nextMeetingId:
          $ref: '#/components/schemas/Reference'
        isMine:
          type: boolean
          nullable: true
        relationshipOverview:
          type: string
          nullable: true
        teamMembers:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        subsidiaryTeams:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        subsidiaries:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        powerOfAttorneyFor:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        wards:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        employees:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        trustees:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        directors:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        shareholders:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        correspondents:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        settlors:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        beneficiaries:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        jointInvestors:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        teamMembersOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        parentTeams:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        parentOrganisations:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        powerOfAttorneys:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        parents:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        guardians:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        employers:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        trusteesOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        directorsOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        shareholdersOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        correspondentsOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        settlorsOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        beneficiariesOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        jointInvestorsOf:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        advisers:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        productProviders:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        professionals:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        friends:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        spouses:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        partners:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        divorcees:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        widowees:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        familyMembers:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
          nullable: true
        lastContacted:
          type: string
          format: date-time
          nullable: true
        lastAppointment:
          type: string
          format: date-time
          nullable: true
        stage:
          type: string
          nullable: true
        expectedNewNetMoney:
          $ref: '#/components/schemas/CurrencyValue'
      additionalProperties: false
    QueryPaging:
      type: object
      properties:
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        totalRecords:
          type: integer
          format: int32
      additionalProperties: false
    RAG:
      enum:
        - Red
        - Amber
        - Green
      type: string
    RecentRecord:
      type: object
      properties:
        id:
          type: string
          nullable: true
        dateAdded:
          type: string
          format: date-time
        isPinned:
          type: boolean
        person:
          $ref: '#/components/schemas/Person'
        organisation:
          $ref: '#/components/schemas/Organisation'
        client:
          $ref: '#/components/schemas/Client'
        intermediary:
          $ref: '#/components/schemas/Intermediary'
        adviser:
          $ref: '#/components/schemas/Adviser'
        activity:
          $ref: '#/components/schemas/Activity'
        article:
          $ref: '#/components/schemas/Article'
      additionalProperties: false
    RecentRecordSummary:
      type: object
      properties:
        id:
          type: string
          nullable: true
        dateAdded:
          type: string
          format: date-time
        isPinned:
          type: boolean
        recordType:
          $ref: '#/components/schemas/SystemEntity'
        record:
          $ref: '#/components/schemas/PartyStub'
      additionalProperties: false
    Reference:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    Regarding:
      type: object
      properties:
        id:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/SystemEntity'
        name:
          type: string
          nullable: true
        regardingObject:
          nullable: true
        partyId:
          type: string
          nullable: true
      additionalProperties: false
    Relationship:
      type: object
      properties:
        id:
          type: string
          nullable: true
        isActive:
          type: boolean
        isPrincipalTeam:
          type: boolean
        dateFrom:
          type: string
          format: date-time
          nullable: true
        dateTo:
          type: string
          format: date-time
          nullable: true
        parentPartyRole:
          $ref: '#/components/schemas/PartyRoleStub'
        parentParty:
          $ref: '#/components/schemas/Reference'
        childPartyRole:
          $ref: '#/components/schemas/PartyRoleStub'
        childParty:
          $ref: '#/components/schemas/Reference'
        relatedPartyRole:
          $ref: '#/components/schemas/PartyRoleStub'
        relatedParty:
          $ref: '#/components/schemas/Reference'
        childRelationship:
          $ref: '#/components/schemas/Reference'
        relationshipType:
          $ref: '#/components/schemas/RelationshipType'
      additionalProperties: false
    RelationshipCreate:
      required:
        - relationshipTypeCode
      type: object
      properties:
        parentPartyRoleId:
          type: string
          nullable: true
        childPartyRoleId:
          type: string
          nullable: true
        parentPartyId:
          type: string
          nullable: true
        childPartyId:
          type: string
          nullable: true
        relationshipTypeCode:
          type: string
        childRelationshipId:
          type: string
          nullable: true
        dateFrom:
          type: string
          format: date-time
          nullable: true
        dateTo:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    RelationshipLevel:
      enum:
        - AccountHolder
        - Authorised3rdParty
        - Other3rdParty
      type: string
    RelationshipLight:
      type: object
      properties:
        id:
          type: string
          nullable: true
        isActive:
          type: boolean
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        dateFrom:
          type: string
          format: date-time
          nullable: true
        dateTo:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    RelationshipType:
      type: object
      properties:
        name:
          type: string
          nullable: true
        reciprocalName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        isHierarchical:
          type: boolean
        parentPartyType:
          type: string
          nullable: true
        parentRoleType:
          $ref: '#/components/schemas/Role'
        childPartyType:
          type: string
          nullable: true
        childRoleType:
          $ref: '#/components/schemas/Role'
        childRelationshipType:
          $ref: '#/components/schemas/RelationshipTypeStub'
        isPersonal:
          type: boolean
        isProfessional:
          type: boolean
        isControlling:
          type: boolean
        level:
          $ref: '#/components/schemas/RelationshipLevel'
      additionalProperties: false
    RelationshipTypeCompact:
      type: object
      properties:
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        reciprocalName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        isReciprocal:
          type: boolean
        type:
          type: string
          nullable: true
        parentRoleType:
          $ref: '#/components/schemas/Role'
        childPartyType:
          $ref: '#/components/schemas/PartyType'
        childRoleType:
          $ref: '#/components/schemas/Role'
        childRelationshipType:
          $ref: '#/components/schemas/RelationshipTypeStub'
        level:
          $ref: '#/components/schemas/RelationshipLevel'
      additionalProperties: false
    RelationshipTypeSimple:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/RoleTypeCompact'
        relationship:
          $ref: '#/components/schemas/RelationshipTypeCompact'
        minimum:
          type: integer
          format: int32
          nullable: true
        existingCount:
          type: integer
          format: int32
          nullable: true
        missing:
          type: integer
          format: int32
          nullable: true
        relatedRole:
          $ref: '#/components/schemas/RoleTypeCompact'
        relatedRelationship:
          $ref: '#/components/schemas/RelationshipType'
      additionalProperties: false
    RelationshipTypeStub:
      type: object
      properties:
        name:
          type: string
          nullable: true
        reciprocalName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
      additionalProperties: false
    RelationshipUpdate:
      type: object
      properties:
        childRelationshipId:
          type: integer
          format: int32
          nullable: true
        dateFrom:
          type: string
          format: date-time
          nullable: true
        dateTo:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    Reminder:
      type: object
      properties:
        id:
          type: string
          nullable: true
        isActive:
          type: boolean
        status:
          type: string
          nullable: true
        reminderType:
          $ref: '#/components/schemas/ReminderType'
        dateCreated:
          type: string
          format: date-time
        dateReminder:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/Reference'
        party:
          $ref: '#/components/schemas/Reference'
        nudge:
          $ref: '#/components/schemas/Reference'
        activity:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    ReminderCreate:
      type: object
      properties:
        reminderType:
          $ref: '#/components/schemas/ReminderType'
        dateReminder:
          type: string
          format: date-time
        partyId:
          type: string
          nullable: true
        nudgeId:
          type: string
          nullable: true
        activityId:
          type: string
          nullable: true
      additionalProperties: false
    ReminderQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Reminder'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    ReminderType:
      enum:
        - Tomorrow
        - NextWeek
        - Custom
      type: string
    RiskLevel:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        value:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    Role:
      type: object
      properties:
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        roleType:
          $ref: '#/components/schemas/RoleType'
        partyType:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        qualifyingRelationshipTypeCode:
          type: string
          nullable: true
        canBeClient:
          type: boolean
      additionalProperties: false
    RoleType:
      enum:
        - Accountant
        - Adviser
        - Assistant
        - Beneficiary
        - BusinessDevelopment
        - Charity
        - Company
        - Competitor
        - Compliance
        - Correspondent
        - Director
        - Employee
        - FinancialPlanner
        - Individual
        - Intermediary
        - InvestmentManager
        - Joint
        - Manager
        - Operations
        - PowerOfAttorney
        - ProductProvider
        - ProductProviderFirm
        - Professional
        - ProfessionalFirm
        - Protector
        - QualityAssurer
        - RelationshipManager
        - Settlor
        - Shareholder
        - Solicitor
        - SystemAdministrator
        - SystemUser
        - Team
        - Trust
        - Trustee
      type: string
    RoleTypeCompact:
      type: object
      properties:
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        partyType:
          $ref: '#/components/schemas/PartyType'
      additionalProperties: false
    SavedFilter:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        filterType:
          $ref: '#/components/schemas/SavedFilterType'
        party:
          $ref: '#/components/schemas/Reference'
        filter:
          type: string
          nullable: true
        isPinned:
          type: boolean
        isGlobal:
          type: boolean
        createdBy:
          $ref: '#/components/schemas/Reference'
        dateCreated:
          type: string
          format: date-time
      additionalProperties: false
    SavedFilterCreate:
      type: object
      properties:
        name:
          type: string
          nullable: true
        filterType:
          $ref: '#/components/schemas/SavedFilterType'
        partyId:
          type: string
          nullable: true
        filter:
          type: string
          nullable: true
        isPinned:
          type: boolean
        isGlobal:
          type: boolean
      additionalProperties: false
    SavedFilterType:
      enum:
        - ClientFeed
        - Client
        - Person
        - Organisation
        - Intermediary
        - Adviser
        - ToDo
      type: string
    SchemaChange:
      type: object
      properties:
        uid:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        applied:
          type: boolean
        appliedOn:
          type: string
          format: date-time
          nullable: true
        author:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        createdOn:
          type: string
          format: date-time
        canReplay:
          type: boolean
        sqlFileName:
          type: string
          nullable: true
        rollbackSqlFileName:
          type: string
          nullable: true
      additionalProperties: false
    SecurityPosition:
      type: object
      properties:
        uniqueId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        shortName:
          type: string
          nullable: true
        identifier:
          type: string
          nullable: true
        assetClass:
          type: string
          nullable: true
        sectorClassification1:
          type: string
          nullable: true
        sectorClassification2:
          type: string
          nullable: true
        sectorClassification3:
          type: string
          nullable: true
        currencyIso:
          $ref: '#/components/schemas/Currency'
        amount:
          type: number
          format: double
        cost:
          $ref: '#/components/schemas/CurrencyValue'
        price:
          $ref: '#/components/schemas/CurrencyValue'
        value:
          $ref: '#/components/schemas/CurrencyValue'
        gainLoss:
          $ref: '#/components/schemas/CurrencyValue'
        percentageOfTotal:
          type: number
          format: double
        initialInvestmentDate:
          type: string
          format: date-time
          nullable: true
        moreInformationURL:
          type: string
          nullable: true
      additionalProperties: false
    SecurityPositionQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/SecurityPosition'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    SecurityTransaction:
      type: object
      properties:
        uniqueId:
          type: string
          nullable: true
        securityPositionId:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        security:
          type: string
          nullable: true
        transactionDate:
          type: string
          format: date-time
        settlementDate:
          type: string
          format: date-time
        transactionType:
          $ref: '#/components/schemas/SecurityTransactionType'
        direction:
          $ref: '#/components/schemas/TransactionDirection'
        amount:
          type: number
          format: double
        price:
          $ref: '#/components/schemas/CurrencyValue'
        currency:
          $ref: '#/components/schemas/Currency'
        currencySymbol:
          type: string
          nullable: true
        netCostOrProceeds:
          $ref: '#/components/schemas/CurrencyValue'
        totalCharges:
          $ref: '#/components/schemas/CurrencyValue'
        grossCostOrProceeds:
          $ref: '#/components/schemas/CurrencyValue'
        comments:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
      additionalProperties: false
    SecurityTransactionQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/SecurityTransaction'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    SecurityTransactionType:
      type: object
      properties:
        code:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    SelectApiSource:
      enum:
        - None
        - Currency
        - Country
        - Role
        - ProductType
        - RiskLevel
        - Objective
        - Mandate
        - Product
        - Benchmark
        - Language
        - ProcessType
        - ClientType
        - PersonType
        - OrganisationType
        - BankingProduct
        - LendingProduct
        - InsuranceProduct
        - FamilyRelationship
        - OrganisationClientType
        - PersonalRelatedPeople
      type: string
    SelectFieldResult:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    ServiceType:
      enum:
        - Discretionary
        - Advisory
        - ExecutionOnly
        - Other
      type: string
    SimpleTag:
      type: object
      properties:
        id:
          type: string
          nullable: true
        tag:
          type: string
          nullable: true
        colour:
          type: string
          nullable: true
      additionalProperties: false
    SocialAddress:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        isActive:
          type: boolean
        status:
          type: integer
          format: int32
        isPreferred:
          type: boolean
        isPrimary:
          type: boolean
        contactPointType:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        addressType:
          $ref: '#/components/schemas/SocialAddressType'
      additionalProperties: false
    SocialAddressCreate:
      required:
        - addressType
        - url
      type: object
      properties:
        partyId:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        isPreferred:
          type: boolean
        isPrimary:
          type: boolean
        url:
          maxLength: 1024
          type: string
        addressType:
          $ref: '#/components/schemas/SocialAddressType'
      additionalProperties: false
    SocialAddressQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/SocialAddress'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    SocialAddressType:
      enum:
        - Facebook
        - Twitter
        - LinkedIn
        - YouTube
        - Instagram
        - Other
      type: string
    StatusType:
      enum:
        - Inactive
        - Active
      type: string
    Subtract:
      type: object
      properties:
        left:
          type: string
          nullable: true
        right:
          type: string
          nullable: true
      additionalProperties: false
    SuggestedParty:
      type: object
      properties:
        party:
          $ref: '#/components/schemas/Reference'
        partyRoleId:
          type: string
          nullable: true
        role:
          $ref: '#/components/schemas/Role'
        partyType:
          $ref: '#/components/schemas/PartyType'
        relationshipId:
          type: string
          nullable: true
        relationshipTypeCode:
          type: string
          nullable: true
        relationshipTypeName:
          type: string
          nullable: true
        otherParty:
          $ref: '#/components/schemas/Reference'
        otherPartyRole:
          $ref: '#/components/schemas/Reference'
        blobId:
          type: string
          nullable: true
        contactPointId:
          type: string
          nullable: true
        contactPointName:
          type: string
          nullable: true
        contactPointValue:
          type: string
          nullable: true
        contactPointType:
          $ref: '#/components/schemas/ContactPointType'
      additionalProperties: false
    Sum:
      type: object
      properties:
        of:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    SystemEntity:
      enum:
        - Organisation
        - Person
        - User
        - Team
        - Appointment
        - Task
        - ActivityParty
        - ElectronicAddress
        - PhoneAddress
        - PostalAddress
        - PartyRole
        - PartyRoleAccess
        - Relationship
        - Email
        - PhoneCall
        - WebHook
        - Process
        - WorkItem
        - SocialAddress
        - Product
        - ClientProduct
        - ProductGroup
        - Mandate
        - Objective
        - Tag
        - Note
        - NewBusiness
        - ClientDocument
        - Client
        - Intermediary
        - Complaint
        - AmlReport
        - FeeStructure
        - TimeBooking
        - Notification
        - MessageAudit
        - DataLock
        - RiskLevel
        - Chat
        - Nudge
        - NudgeLog
        - FeedNudge
        - Reminder
        - Adviser
        - GoalPoint
        - Article
        - ProductGroupMember
        - InvestmentAccount
        - BankAccount
        - SavedFilter
        - Opportunity
        - ClientProductRole
        - Benchmark
        - Case
        - AppStatus
        - LendingAccount
        - InsuranceAccount
        - PotentialDuplicate
        - ContactPoint
        - Activity
        - Party
      type: string
    SystemStatus:
      type: object
      properties:
        inMaintenanceMode:
          type: boolean
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          nullable: true
      additionalProperties: false
    Tag:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        category:
          $ref: '#/components/schemas/TagCatSimple'
        colour:
          type: string
          nullable: true
        goalManageClient:
          type: integer
          format: int32
          nullable: true
        goalStayConnected:
          type: integer
          format: int32
          nullable: true
        goalStayCompliant:
          type: integer
          format: int32
          nullable: true
        goalGrowBusiness:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    TagCat:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        colour:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          nullable: true
      additionalProperties: false
    TagCategory:
      enum:
        - Segmentation
        - Interests
        - Restrictons
        - InvestmentProducts
        - InvestmentThemes
        - InvestmentThemesCountry
        - ActivityReasons
        - TaskCategories
        - Other
      type: string
    TagCatSimple:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        colour:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
      additionalProperties: false
    TagCreate:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 512
          type: string
        categoryId:
          type: integer
          format: int32
          nullable: true
        category:
          $ref: '#/components/schemas/TagCategory'
        colour:
          maxLength: 7
          type: string
          nullable: true
      additionalProperties: false
    TagEntity:
      enum:
        - Party
        - Activity
        - PartyRole
        - Relationship
        - Product
        - ClientProduct
        - ProductGroup
        - Mandate
        - PhoneCall
        - Appointment
        - Task
        - Note
        - Email
        - Article
      type: string
    TagQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    TagUpdate:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 512
          type: string
        colour:
          maxLength: 7
          type: string
          nullable: true
      additionalProperties: false
    Team:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        isActive:
          type: boolean
        status:
          type: string
          nullable: true
        partyType:
          $ref: '#/components/schemas/PartyType'
        defaultEmailAddress:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        avatarUrl:
          type: string
          nullable: true
        numberOfPersonalConnections:
          type: integer
          format: int32
          nullable: true
        netWealth:
          $ref: '#/components/schemas/CurrencyValue'
        potentialValue:
          $ref: '#/components/schemas/CurrencyValue'
        potentialValueConnected:
          $ref: '#/components/schemas/CurrencyValue'
        totalAUM:
          $ref: '#/components/schemas/CurrencyValue'
        totalAUMConnected:
          $ref: '#/components/schemas/CurrencyValue'
        pipelineWeightedValue:
          $ref: '#/components/schemas/CurrencyValue'
        pipelineWeightedValueConnected:
          $ref: '#/components/schemas/CurrencyValue'
        lastContactedDate:
          type: string
          format: date-time
          nullable: true
        lastContactedType:
          $ref: '#/components/schemas/ActivityType'
        lastContactedId:
          $ref: '#/components/schemas/Reference'
        lastMeetingDate:
          type: string
          format: date-time
          nullable: true
        lastMeetingType:
          $ref: '#/components/schemas/ActivityType'
        lastMeetingId:
          $ref: '#/components/schemas/Reference'
        nextMeetingDate:
          type: string
          format: date-time
          nullable: true
        nextMeetingType:
          $ref: '#/components/schemas/ActivityType'
        nextMeetingId:
          $ref: '#/components/schemas/Reference'
        partyRoles:
          type: array
          items:
            $ref: '#/components/schemas/PartyRole'
          nullable: true
        contactPoints:
          type: array
          items:
            $ref: '#/components/schemas/ContactPoint'
          nullable: true
        clientStatus:
          $ref: '#/components/schemas/PartyClientSummary'
        parentTeam:
          $ref: '#/components/schemas/PartyStub'
        subTeams:
          type: array
          items:
            $ref: '#/components/schemas/PartyStub'
          nullable: true
        teamMembers:
          type: array
          items:
            $ref: '#/components/schemas/PartyStub'
          nullable: true
      additionalProperties: false
    TeamCreate:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 100
          type: string
        code:
          maxLength: 100
          type: string
          nullable: true
        parentTeamId:
          type: string
          nullable: true
        currencyCode:
          type: string
          nullable: true
      additionalProperties: false
    TeamFilter:
      type: object
      properties:
        search:
          type: string
          nullable: true
        sortBy:
          $ref: '#/components/schemas/TeamListSortBy'
      additionalProperties: false
    TeamListSortBy:
      enum:
        - Alphabetical
        - AlphabeticalDesc
      type: string
    TeamQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Team'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    Theme:
      type: object
      properties:
        themeType:
          type: string
          nullable: true
        logo:
          $ref: '#/components/schemas/ThemeLogo'
        palette:
          $ref: '#/components/schemas/ThemePalette'
      additionalProperties: false
    ThemeBackgroundItem:
      type: object
      properties:
        default:
          type: string
          nullable: true
        paper:
          type: string
          nullable: true
      additionalProperties: false
    ThemeLogo:
      type: object
      properties:
        fileIdentifier:
          type: string
          nullable: true
        text:
          type: string
          nullable: true
        background:
          type: string
          nullable: true
        foreground:
          type: string
          nullable: true
      additionalProperties: false
    ThemePalette:
      type: object
      properties:
        type:
          type: string
          nullable: true
        primary:
          $ref: '#/components/schemas/ThemePaletteItem'
        secondary:
          $ref: '#/components/schemas/ThemePaletteItem'
        background:
          $ref: '#/components/schemas/ThemeBackgroundItem'
        error:
          $ref: '#/components/schemas/ThemePaletteItem'
      additionalProperties: false
    ThemePaletteItem:
      type: object
      properties:
        light:
          type: string
          nullable: true
        main:
          type: string
          nullable: true
        dark:
          type: string
          nullable: true
        contrastText:
          type: string
          nullable: true
      additionalProperties: false
    TimeBookingType:
      enum:
        - Administration
        - Travel
        - ReportGeneration
      type: string
    TimeSeriesPoint:
      type: object
      properties:
        value:
          type: number
          format: double
        secondValue:
          type: number
          format: double
          nullable: true
        date:
          type: string
          format: date-time
      additionalProperties: false
    Today:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        recentContacts:
          type: array
          items:
            $ref: '#/components/schemas/RecentRecordSummary'
          nullable: true
        recents:
          type: array
          items:
            $ref: '#/components/schemas/RecentRecordSummary'
          nullable: true
        today:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
          nullable: true
        tomorrow:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
          nullable: true
        activeProcesses:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/Process'
          nullable: true
        outstandingWorkItems:
          type: array
          items:
            $ref: '#/components/schemas/WorkItem'
          nullable: true
        birthdays:
          type: array
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
      additionalProperties: false
    ToDoActivity:
      type: object
      properties:
        id:
          type: string
          nullable: true
        subject:
          type: string
          nullable: true
        due:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
        activityType:
          type: string
          nullable: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/SimpleTag'
          nullable: true
        status:
          type: string
          nullable: true
        ownershipLevel:
          type: string
          nullable: true
        regarding:
          type: array
          items:
            $ref: '#/components/schemas/Regarding'
          nullable: true
        activityParties:
          type: array
          items:
            $ref: '#/components/schemas/ActivityParty'
          nullable: true
        assignees:
          type: array
          items:
            $ref: '#/components/schemas/ActivityParty'
          nullable: true
        files:
          type: array
          items:
            type: string
          nullable: true
        reminders:
          type: array
          items:
            $ref: '#/components/schemas/Reminder'
          nullable: true
      additionalProperties: false
    ToDoActivityQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ToDoActivity'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    TodoFilter:
      type: object
      properties:
        search:
          type: string
          nullable: true
        ownershipLevel:
          $ref: '#/components/schemas/OwnershipLevel'
        activityTypes:
          type: array
          items:
            $ref: '#/components/schemas/ActivityType'
          nullable: true
        tags:
          type: array
          items:
            type: string
          nullable: true
        priorities:
          type: array
          items:
            type: string
          nullable: true
        schedules:
          type: array
          items:
            $ref: '#/components/schemas/ActivityScheduleFilterType'
          nullable: true
        filedUnders:
          type: array
          items:
            $ref: '#/components/schemas/Regarding'
          nullable: true
        parties:
          type: array
          items:
            type: string
          nullable: true
        status:
          $ref: '#/components/schemas/StatusType'
        customFrom:
          type: string
          format: date-time
          nullable: true
        customTo:
          type: string
          format: date-time
          nullable: true
        sortBy:
          $ref: '#/components/schemas/ToDoSortyByType'
      additionalProperties: false
    ToDoSortyByType:
      enum:
        - Alphabetical
        - AlphabeticalDesc
        - Oldest
        - Newest
      type: string
    TransactionDirection:
      enum:
        - Increase
        - Decrease
      type: string
    Trigger:
      type: object
      properties:
        field:
          type: string
          nullable: true
        button:
          type: string
          nullable: true
        link:
          type: string
          nullable: true
        is:
          type: array
          items:
            $ref: '#/components/schemas/Is'
          nullable: true
        changed:
          $ref: '#/components/schemas/Action'
        clicked:
          $ref: '#/components/schemas/Action'
      additionalProperties: false
    UpdateButton:
      type: object
      properties:
        name:
          type: string
          nullable: true
        isHidden:
          type: boolean
          nullable: true
        label:
          type: string
          nullable: true
        isDisabled:
          type: boolean
          nullable: true
      additionalProperties: false
    UpdateField:
      type: object
      properties:
        name:
          type: string
          nullable: true
        isHidden:
          type: boolean
          nullable: true
        label:
          type: string
          nullable: true
        isRequired:
          type: boolean
          nullable: true
        isDisabled:
          type: boolean
          nullable: true
        options:
          type: array
          items:
            type: string
          nullable: true
        guidanceText:
          type: string
          nullable: true
        value:
          nullable: true
        lookupSource:
          $ref: '#/components/schemas/LookupSourceType'
      additionalProperties: false
    UpdateLabel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        isHidden:
          type: boolean
          nullable: true
        label:
          type: string
          nullable: true
      additionalProperties: false
    UpdateSection:
      type: object
      properties:
        name:
          type: string
          nullable: true
        isHidden:
          type: boolean
          nullable: true
        label:
          type: string
          nullable: true
        guidanceText:
          type: string
          nullable: true
      additionalProperties: false
    User:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        isActive:
          type: boolean
        status:
          type: string
          nullable: true
        partyType:
          $ref: '#/components/schemas/PartyType'
        defaultEmailAddress:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        avatarUrl:
          type: string
          nullable: true
        numberOfPersonalConnections:
          type: integer
          format: int32
          nullable: true
        netWealth:
          $ref: '#/components/schemas/CurrencyValue'
        potentialValue:
          $ref: '#/components/schemas/CurrencyValue'
        potentialValueConnected:
          $ref: '#/components/schemas/CurrencyValue'
        totalAUM:
          $ref: '#/components/schemas/CurrencyValue'
        totalAUMConnected:
          $ref: '#/components/schemas/CurrencyValue'
        pipelineWeightedValue:
          $ref: '#/components/schemas/CurrencyValue'
        pipelineWeightedValueConnected:
          $ref: '#/components/schemas/CurrencyValue'
        lastContactedDate:
          type: string
          format: date-time
          nullable: true
        lastContactedType:
          $ref: '#/components/schemas/ActivityType'
        lastContactedId:
          $ref: '#/components/schemas/Reference'
        lastMeetingDate:
          type: string
          format: date-time
          nullable: true
        lastMeetingType:
          $ref: '#/components/schemas/ActivityType'
        lastMeetingId:
          $ref: '#/components/schemas/Reference'
        nextMeetingDate:
          type: string
          format: date-time
          nullable: true
        nextMeetingType:
          $ref: '#/components/schemas/ActivityType'
        nextMeetingId:
          $ref: '#/components/schemas/Reference'
        partyRoles:
          type: array
          items:
            $ref: '#/components/schemas/PartyRole'
          nullable: true
        contactPoints:
          type: array
          items:
            $ref: '#/components/schemas/ContactPoint'
          nullable: true
        clientStatus:
          $ref: '#/components/schemas/PartyClientSummary'
        userName:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        userType:
          $ref: '#/components/schemas/UserType'
        tenant:
          type: string
          nullable: true
        defaultTeam:
          $ref: '#/components/schemas/Reference'
        teams:
          type: array
          items:
            $ref: '#/components/schemas/PartyStub'
          nullable: true
        localeName:
          type: string
          nullable: true
      additionalProperties: false
    UserAction:
      enum:
        - View
        - ViewSensitive
        - DownloadFile
        - Favourite
        - UnFavourite
      type: string
    UserActionEntity:
      enum:
        - Person
        - Organisation
        - Client
        - Intermediary
        - Prospect
        - Lead
        - Adviser
        - Article
        - Activity
        - Process
        - Case
      type: string
    UserCreate:
      required:
        - firstName
        - lastName
        - roleType
      type: object
      properties:
        userName:
          maxLength: 80
          type: string
          nullable: true
        firstName:
          maxLength: 80
          type: string
        lastName:
          maxLength: 80
          type: string
        code:
          maxLength: 100
          type: string
          nullable: true
        locale:
          type: string
          nullable: true
        currencyCode:
          type: string
          nullable: true
        roleType:
          $ref: '#/components/schemas/RoleType'
        teamId:
          type: string
          nullable: true
        userType:
          $ref: '#/components/schemas/UserType'
      additionalProperties: false
    UserFilter:
      type: object
      properties:
        search:
          type: string
          nullable: true
        sortBy:
          $ref: '#/components/schemas/UserListSortBy'
      additionalProperties: false
    UserListSortBy:
      enum:
        - Alphabetical
        - AlphabeticalDesc
      type: string
    UserPasswordChange:
      required:
        - newPassword
        - oldPassword
      type: object
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
      additionalProperties: false
    UserQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    UserTenant:
      type: object
      properties:
        tenantCode:
          type: string
          nullable: true
        tenantName:
          type: string
          nullable: true
        isDefault:
          type: boolean
      additionalProperties: false
    UserType:
      enum:
        - Interactive
        - NonInteractive
      type: string
    ValuationHeader:
      type: object
      properties:
        level:
          $ref: '#/components/schemas/ValuationLevel'
        ownerCode:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        valuationDate:
          type: string
          format: date-time
        valuationCurrency:
          $ref: '#/components/schemas/Currency'
        createdOn:
          type: string
          format: date-time
        rows:
          type: array
          items:
            $ref: '#/components/schemas/ValuationRow'
          nullable: true
      additionalProperties: false
    ValuationHistory:
      type: object
      properties:
        valuations:
          type: array
          items:
            $ref: '#/components/schemas/TimeSeriesPoint'
          nullable: true
        currency:
          $ref: '#/components/schemas/Currency'
      additionalProperties: false
    ValuationLevel:
      enum:
        - Client
        - ClientProduct
        - Account
      type: string
    ValuationRow:
      type: object
      properties:
        securityPositionId:
          type: string
          nullable: true
        cashAccountId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        assetType:
          $ref: '#/components/schemas/AssetType'
        position:
          type: number
          format: double
          nullable: true
        positionFormatted:
          type: string
          nullable: true
        price:
          $ref: '#/components/schemas/CurrencyValue'
        priceCurrency:
          type: string
          nullable: true
        localBookcost:
          $ref: '#/components/schemas/CurrencyValue'
        localCapital:
          $ref: '#/components/schemas/CurrencyValue'
        localInterest:
          $ref: '#/components/schemas/CurrencyValue'
        localValue:
          $ref: '#/components/schemas/CurrencyValue'
        localUnrealisedProfitLoss:
          $ref: '#/components/schemas/CurrencyValue'
        localToValuationRate:
          type: number
          format: double
          nullable: true
        valuationBookcost:
          $ref: '#/components/schemas/CurrencyValue'
        valuationCapital:
          $ref: '#/components/schemas/CurrencyValue'
        valuationInterest:
          $ref: '#/components/schemas/CurrencyValue'
        valuationValue:
          $ref: '#/components/schemas/CurrencyValue'
        valuationUnrealisedProfitLoss:
          $ref: '#/components/schemas/CurrencyValue'
        percentageOfValuation:
          type: number
          format: double
          nullable: true
        percentageGrowth:
          type: number
          format: double
          nullable: true
        incomePerYear:
          $ref: '#/components/schemas/CurrencyValue'
        precentageYield:
          type: number
          format: double
          nullable: true
        accruedDays:
          type: integer
          format: int32
          nullable: true
        assetClassification:
          type: string
          nullable: true
        exposureCountry:
          type: string
          nullable: true
        geography:
          type: string
          nullable: true
        exposureCurrency:
          type: string
          nullable: true
        localCurrency:
          type: string
          nullable: true
        classification1:
          type: string
          nullable: true
        classification2:
          type: string
          nullable: true
        classification3:
          type: string
          nullable: true
        sharesInIssue:
          type: integer
          format: int64
          nullable: true
        maturityDate:
          type: string
          format: date-time
          nullable: true
        interestRate:
          type: number
          format: double
          nullable: true
        couponsPerYear:
          type: integer
          format: int32
          nullable: true
        dayCountConvention:
          type: string
          nullable: true
        isin:
          type: string
          nullable: true
        sedol:
          type: string
          nullable: true
        accountName:
          type: string
          nullable: true
        accountGroupName:
          type: string
          nullable: true
        clientName:
          type: string
          nullable: true
      additionalProperties: false
    ValuationSummaryChartType:
      enum:
        - Country
        - Geographic
        - Sector
        - AssetClass
      type: string
    Version:
      type: object
      properties:
        buildDateTimeUtc:
          type: string
          format: date-time
        serverName:
          type: string
          nullable: true
        commitSha:
          type: string
          nullable: true
        version:
          type: string
          nullable: true
        environment:
          type: string
          nullable: true
      additionalProperties: false
    WebHook:
      required:
        - action
        - entityType
        - name
        - party
        - url
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          maxLength: 255
          type: string
        isActive:
          type: boolean
        code:
          type: string
          nullable: true
        entityType:
          $ref: '#/components/schemas/SystemEntity'
        action:
          $ref: '#/components/schemas/AuditAction'
        party:
          $ref: '#/components/schemas/Reference'
        url:
          type: string
        secret:
          type: string
          nullable: true
        secretHeaderName:
          type: string
          nullable: true
      additionalProperties: false
    WebHookCreate:
      required:
        - action
        - entityType
        - name
        - url
      type: object
      properties:
        name:
          maxLength: 255
          type: string
        code:
          type: string
          nullable: true
        entityType:
          $ref: '#/components/schemas/SystemEntity'
        action:
          $ref: '#/components/schemas/AuditAction'
        partyId:
          type: string
          nullable: true
        url:
          type: string
        secret:
          type: string
          nullable: true
        secretHeaderName:
          type: string
          nullable: true
      additionalProperties: false
    WebHookQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/WebHook'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    WebHookUpdate:
      required:
        - name
        - url
      type: object
      properties:
        name:
          maxLength: 255
          type: string
        code:
          type: string
          nullable: true
        url:
          type: string
        secret:
          type: string
          nullable: true
        secretHeaderName:
          type: string
          nullable: true
      additionalProperties: false
    WorkItem:
      type: object
      properties:
        id:
          type: string
          nullable: true
        uuid:
          type: string
          format: uuid
        isActive:
          type: boolean
        isPinned:
          type: boolean
        status:
          $ref: '#/components/schemas/ActivityStatusType'
        subject:
          maxLength: 255
          type: string
          nullable: true
        content:
          type: string
          nullable: true
        activityType:
          $ref: '#/components/schemas/ActivityType'
        dateCreated:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
          nullable: true
        due:
          type: string
          format: date-time
          nullable: true
        completed:
          type: string
          format: date-time
          nullable: true
        duration:
          type: integer
          format: int32
          nullable: true
        isAllDay:
          type: boolean
        dateImportantUntil:
          type: string
          format: date-time
          nullable: true
        process:
          $ref: '#/components/schemas/Reference'
        regarding:
          type: array
          items:
            $ref: '#/components/schemas/Regarding'
          nullable: true
        files:
          type: array
          items:
            type: string
          nullable: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/SimpleTag'
          nullable: true
        hasFiles:
          type: boolean
        activityParties:
          type: array
          items:
            $ref: '#/components/schemas/ActivityParty'
          nullable: true
        parentActivityId:
          type: string
          nullable: true
        childActivities:
          type: array
          items:
            type: string
          nullable: true
        chats:
          type: array
          items:
            $ref: '#/components/schemas/ActivityChat'
          nullable: true
        reminders:
          type: array
          items:
            $ref: '#/components/schemas/Reminder'
          nullable: true
        processTypeCode:
          type: string
          nullable: true
        processTypeVersion:
          type: integer
          format: int32
        processStageCode:
          type: string
          nullable: true
        workItemTypeCode:
          type: string
          nullable: true
        ragStatus:
          $ref: '#/components/schemas/RAG'
        outcomes:
          type: array
          items:
            $ref: '#/components/schemas/ProcessOutcome'
          nullable: true
        subProcessId:
          type: integer
          format: int32
          nullable: true
        case:
          $ref: '#/components/schemas/Reference'
        apps:
          type: array
          items:
            $ref: '#/components/schemas/AppStatus'
          nullable: true
        appStatus:
          $ref: '#/components/schemas/AppStatusType'
      additionalProperties: false
    WorkItemQueryResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/WorkItem'
          nullable: true
        paging:
          $ref: '#/components/schemas/QueryPaging'
      additionalProperties: false
    WorkItemSummary:
      type: object
      properties:
        open:
          type: integer
          format: int32
        dueTomorrow:
          type: integer
          format: int32
        dueToday:
          type: integer
          format: int32
        dueYesterday:
          type: integer
          format: int32
        overdue:
          type: integer
          format: int32
        closedInWeek:
          type: integer
          format: int32
        closedInMonth:
          type: integer
          format: int32
      additionalProperties: false
  securitySchemes:
    JWT:
      type: apiKey
      description: 'JWT Authorization header using the Bearer scheme. Example: "Authorization: Bearer {token}"'
      name: Authorization
      in: header
    ApiKey:
      type: apiKey
      description: 'API Key. Example: "x-portemis-api-key: {token}"'
      name: x-portemis-api-key
      in: header
security:
  - JWT: [ ]
    ApiKey: [ ]
tags:
  - name: Activities
    description: 'Activity (Phone Call, Appointment, etc) related endpoints'
  - name: Advisers
    description: Endpoints for Managing External Advisers
  - name: Applications
    description: ''
  - name: Articles
    description: ''
  - name: Auditing
    description: ''
  - name: Calendar
    description: ''
  - name: Cases
    description: ''
  - name: Clients
    description: ''
  - name: Client Documents
    description: ''
  - name: Client Products
    description: ''
  - name: Complaints
    description: ''
  - name: Contact Points
    description: ''
  - name: Dashboards
    description: ''
  - name: Decisions
    description: ''
  - name: Duplicates
    description: ''
  - name: Feed
    description: ''
  - name: Files
    description: ''
  - name: Forms
    description: ''
  - name: GraphQL
    description: ''
  - name: Intermediaries
    description: ''
  - name: Investment Data
    description: ''
  - name: Kanban Stages
    description: ''
  - name: Leads
    description: ''
  - name: New Business
    description: ''
  - name: Notifications
    description: ''
  - name: Nudges
    description: ''
  - name: Opportunities
    description: ''
  - name: Organisations
    description: ''
  - name: Parties
    description: ''
  - name: Party Roles
    description: ''
  - name: People
    description: ''
  - name: Products
    description: ''
  - name: Prospects
    description: ''
  - name: Reference Data
    description: ''
  - name: Relationships
    description: ''
  - name: Reminders
    description: ''
  - name: Roles
    description: ''
  - name: Saved Filters
    description: ''
  - name: Searches
    description: ''
  - name: System
    description: ''
  - name: Tags
    description: ''
  - name: Teams
    description: ''
  - name: User Actions
    description: ''
  - name: Users
    description: ''
  - name: Web Hooks
    description: ''
  - name: Work Items
    description: ''